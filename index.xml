<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Front page on 👨‍💻 Baptiste Pesquet</title><link>https://www.bpesquet.fr/</link><description>👨‍💻 Baptiste Pesquet (Front page)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 13 Oct 2020 11:49:25 +0200</lastBuildDate><atom:link href="https://www.bpesquet.fr/index.xml" rel="self" type="application/rss+xml"/><item><title>Le langage JavaScript</title><link>https://www.bpesquet.fr/slides/javascript/</link><pubDate>Mon, 16 Dec 2019 21:50:46 +0100</pubDate><guid>https://www.bpesquet.fr/slides/javascript/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>Pourquoi JavaScript ?&lt;/li>
&lt;li>Syntaxe du langage&lt;/li>
&lt;li>Environnement de travail&lt;/li>
&lt;li>TypeScript&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="pourquoi-javascript-">Pourquoi JavaScript ?&lt;/h2>
&lt;hr>
&lt;h3 id="javascript-is-eating-the-world">JavaScript is eating the world&lt;/h3>
&lt;p>&lt;img src="images/thus-javascript-is-eating-the-world.jpg" alt="JS is eating the world">&lt;/p>
&lt;hr>
&lt;h3 id="un-pré-requis-essentiel">Un pré-requis essentiel&lt;/h3>
&lt;p>La majorité des solutions mobiles multi-plateformes est basée sur JavaScript.&lt;/p>
&lt;p>&lt;img src="images/mobile_logos.png" alt="Frameworks multi-plateformes">&lt;/p>
&lt;hr>
&lt;h3 id="un-langage-modernisé">Un langage modernisé&lt;/h3>
&lt;p>JavaScript est normalisé sous le nom &lt;strong>ECMAScript&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="images/js_history.png" alt="ECMAScript releases">&lt;/p>
&lt;p>La norme &lt;strong>ES2015&lt;/strong> (ou ES6) a apporté de très nombreuses améliorations au langage.&lt;/p>
&lt;hr>
&lt;h2 id="la-syntaxe-du-langage">La syntaxe du langage&lt;/h2>
&lt;hr>
&lt;h3 id="déclaration-de-variables">Déclaration de variables&lt;/h3>
&lt;p>JavaScript est un langage à typage &lt;strong>dynamique&lt;/strong>.&lt;/p>
&lt;p>&lt;code>let&lt;/code> et &lt;code>const&lt;/code> remplacent avantageusement &lt;code>var&lt;/code> pour la déclaration des variables.&lt;/p>
&lt;p>La valeur d&amp;rsquo;une variable déclarée avec &lt;code>const&lt;/code> ne peut plus être modifiée.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">3.14&lt;/span>;
a = &lt;span style="color:#0086f7;font-weight:bold">6.28&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> b = &lt;span style="color:#0086f7;font-weight:bold">3.14&lt;/span>;
b = &lt;span style="color:#0086f7;font-weight:bold">6.28&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Erreur!
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="chaînes-de-caractères">Chaînes de caractères&lt;/h3>
&lt;p>Créées avec des guillemets simples (&lt;code>'...'&lt;/code>) ou doubles (&lt;code>&amp;quot;...&amp;quot;&lt;/code>).&lt;/p>
&lt;p>&lt;strong>Litéraux de modèle&lt;/strong>: chaînes créées entre &lt;em>backticks&lt;/em> (`) et permettant d&amp;rsquo;intégrer des expressions.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> country = &lt;span style="color:#0086d2">&amp;#34;France&amp;#34;&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// or &amp;#39;France&amp;#39;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(&lt;span style="color:#0086d2">`I live in &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>country&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">`&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;I live in France&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="déclaration-de-fonctions">Déclaration de fonctions&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> sayHello(name) {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> message = &lt;span style="color:#0086d2">`Hello, &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">!`&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
}
console.log(sayHello(&lt;span style="color:#0086d2">&amp;#34;Richard&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Richard!&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="expressions-fonction">Expressions fonction&lt;/h3>
&lt;p>Permettent de créer des fonctions anonymes.&lt;/p>
&lt;p>La valeur d&amp;rsquo;une variable JavaScript peut être une fonction.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> hello = &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> (name) {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> message = &lt;span style="color:#0086d2">`Hello, &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">!`&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
};
console.log(hello(&lt;span style="color:#0086d2">&amp;#34;Richard&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Richard!&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="fonctions-fléchées">Fonctions fléchées&lt;/h3>
&lt;p>&amp;ldquo;&lt;em>Fat arrow functions&lt;/em>&amp;rdquo;.&lt;/p>
&lt;p>Syntaxe plus concise pour créer des fonctions anonymes.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> hello = (name) =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> message = &lt;span style="color:#0086d2">`Hello, &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">!`&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
};
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Syntaxe alternative encore plus concise
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// const hello = name =&amp;gt; `Hello, ${name}!`;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
console.log(hello(&lt;span style="color:#0086d2">&amp;#34;Richard&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Richard!&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="tableaux">Tableaux&lt;/h3>
&lt;p>Plusieurs syntaxes existent pour les parcourir.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> movies = [&lt;span style="color:#0086d2">&amp;#34;The Wolf of Wall Street&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;Zootopia&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;Babysitting&amp;#34;&lt;/span>];
console.log(movies.length); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 3
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (&lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>; i &amp;lt; movies.length; i++) {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use movies[i] to access each array element one by one
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
movies.forEach((movie) =&amp;gt; {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use movie to access each array element one by one
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>});
&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> movie &lt;span style="color:#fb660a;font-weight:bold">of&lt;/span> movies) {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use movie to access each array element one by one
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="objets">Objets&lt;/h3>
&lt;p>Un objet JavaScript regroupe un ensemble de &lt;strong>propriétés&lt;/strong> (paire clé/valeur).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Création d&amp;#39;un objet litéral
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> pen = {
type: &lt;span style="color:#0086d2">&amp;#34;ballpoint&amp;#34;&lt;/span>,
color: &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>,
brand: &lt;span style="color:#0086d2">&amp;#34;Bic&amp;#34;&lt;/span>,
};
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Modifcation de la valeur d&amp;#39;une propriété
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>pen.color = &lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span>;
console.log(pen.type); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;ballpoint&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(pen.color); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;red&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(pen.brand); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bic&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="création-dobjets-à-partir-de-variables">Création d&amp;rsquo;objets à partir de variables&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> firstName = &lt;span style="color:#0086d2">&amp;#34;Baptiste&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> lastName = &lt;span style="color:#0086d2">&amp;#34;Pesquet&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> twitterHandle = &lt;span style="color:#0086d2">&amp;#34;@bpesquet&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> teacher = { firstName, lastName, twitterHandle };
console.log(teacher.firstName); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Baptiste&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(teacher.lastName); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Pesquet&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(teacher.twitterHandle); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;@bpesquet&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="déstructuration-dobjets">Déstructuration d&amp;rsquo;objets&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> pen = {
type: &lt;span style="color:#0086d2">&amp;#34;ballpoint&amp;#34;&lt;/span>,
color: &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>,
brand: &lt;span style="color:#0086d2">&amp;#34;Bic&amp;#34;&lt;/span>,
};
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès à 2 des propriétés de l&amp;#39;objet
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { color, brand } = pen;
console.log(color); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;blue&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(brand); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bic&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="déstructuration-de-tableaux">Déstructuration de tableaux&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> primaryColors = [&lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;green&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>];
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [red, green, blue] = primaryColors;
console.log(red); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;red&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(green); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;red&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(blue); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;blue&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="opérateur-de-décomposition-_spread_">Opérateur de décomposition (&amp;quot;&lt;em>spread&lt;/em>&amp;quot;)&lt;/h3>
&lt;p>Permet de développer une valeur itérable (chaîne, tableau&amp;hellip;).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> chaine = &lt;span style="color:#0086d2">&amp;#34;foo bar&amp;#34;&lt;/span>;
console.log(chaine); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;foo bar&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log([...chaine]); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// [&amp;#34;f&amp;#34;, &amp;#34;o&amp;#34;, &amp;#34;o&amp;#34;, &amp;#34; &amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;a&amp;#34;, &amp;#34;r&amp;#34;]
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> numbers = [&lt;span style="color:#0086d2">&amp;#34;one&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;two&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;three&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;four&amp;#34;&lt;/span>];
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [one, two, ...rest] = numbers;
console.log(one); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;one&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(two); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;two&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(rest); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// [&amp;#34;three&amp;#34;, &amp;#34;four&amp;#34;]
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="notion-de-méthode">Notion de méthode&lt;/h3>
&lt;p>La valeur d&amp;rsquo;une propriété peut être une donnée ou une fonction. Dans le second cas, la propriété est une &lt;strong>méthode&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> aurora = {
name: &lt;span style="color:#0086d2">&amp;#34;Aurora&amp;#34;&lt;/span>,
health: &lt;span style="color:#0086f7;font-weight:bold">150&lt;/span>,
strength: &lt;span style="color:#0086f7;font-weight:bold">25&lt;/span>,
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Renvoie la description du personnage
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> describe() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">`&lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> has &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.health&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> health points
&lt;/span>&lt;span style="color:#0086d2"> and &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.strength&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> as strength`&lt;/span>;
},
};
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="classes">Classes&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Character {
constructor(name, health, strength) {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.name = name;
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.health = health;
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.strength = strength;
}
describe() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">`&lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> has &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.health&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> health points
&lt;/span>&lt;span style="color:#0086d2"> and &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.strength&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> as strength`&lt;/span>;
}
}
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> aurora = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Character(&lt;span style="color:#0086d2">&amp;#34;Aurora&amp;#34;&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">150&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">25&lt;/span>);
console.log(aurora.describe());
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="modules-et-imports">Modules et imports&lt;/h2>
&lt;p>JavaScript supporte la notion de &lt;strong>module&lt;/strong> pour factoriser des éléments réutilisables.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Importe l&amp;#39;élément exporté par défaut par le module
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Importe d&amp;#39;autres éléments exportés grâce à leur nom
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { View, Text, Image } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Importe à la fois l&amp;#39;élément par défaut et d&amp;#39;autres éléments
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { View, Text, Image } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="plus-de-détails-sur-javascript">Plus de détails sur JavaScript&lt;/h3>
&lt;p>&lt;a href="https://developer.mozilla.org/fr/docs/Web/JavaScript">https://developer.mozilla.org/fr/docs/Web/JavaScript&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/thejsway/thejsway/">https://github.com/thejsway/thejsway/&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/getify/You-Dont-Know-JS">https://github.com/getify/You-Dont-Know-JS&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="environnement-de-travail">Environnement de travail&lt;/h2>
&lt;hr>
&lt;p>&lt;img src="images/node-logo.png" alt="Node logo">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Plate-forme JavaScript basée sur le moteur d&amp;rsquo;exécution V8 de Chrome.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Permet de créer des applications JS hors du navigateur (serveur, mobile, etc).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Supporte un riche écosystème de librairies en tout genre installables sous forme de &lt;strong>packages&lt;/strong>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="gestion-des-dépendances">Gestion des dépendances&lt;/h3>
&lt;p>Le standard historique est &lt;a href="https://www.npmjs.com/">npm&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">npm init &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Create a minimal package.json file&lt;/span>
npm install &amp;lt;package name&amp;gt; &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install &amp;lt;package name&amp;gt; locally&lt;/span>
npm install -g &amp;lt;package name&amp;gt; &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install &amp;lt;package name&amp;gt; globally&lt;/span>
npm install &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install all packages listed in package.json&lt;/span>
npm update &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Update local packages to latest version&lt;/span>
npm update -g &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Update global packages to latest version&lt;/span>
npm list &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># List locally installed packages&lt;/span>
npm list -g &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># List globally installed packages&lt;/span>
&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Search the package index for &amp;lt;package name&amp;gt;&lt;/span>
npm search &amp;lt;package name&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Autre possibilité : &lt;a href="https://yarnpkg.com/lang/en/">yarn&lt;/a> (plus récent).&lt;/p>
&lt;hr>
&lt;h3 id="le-fichier-packagejson">Le fichier package.json&lt;/h3>
&lt;p>Associé à un fichier verrou &lt;code>package-lock.json&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;main&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;node_modules/expo/AppEntry.js&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;start&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;android&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --android&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ios&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --ios&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;eject&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo eject&amp;#34;&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;dependencies&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react-native&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;https://github.com/expo/react-native/archive/sdk-35.0.0.tar.gz&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~35.0.0&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;16.8.3&amp;#34;&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;devDependencies&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;babel-preset-expo&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~8.0.0&amp;#34;&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;private&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="versionnage-des-dépendances">Versionnage des dépendances&lt;/h3>
&lt;p>Versionnage sémantique &lt;strong>X.Y.Z&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>X = version majeure (changements potentiellement non rétrocompatibles).&lt;/li>
&lt;li>Y = version mineure.&lt;/li>
&lt;li>Z = patch.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>^1.1.1&lt;/strong> équivaut à $\geq$ 1.1.1 et $&amp;lt;$ 2.0.0&lt;/p>
&lt;p>&lt;strong>~1.1.1&lt;/strong> équivaut à $\geq$ 1.1.1 et $&amp;lt;$ 1.2.0&lt;/p>
&lt;p>&lt;strong>1.1.1&lt;/strong> cible une version exacte.&lt;/p>
&lt;hr>
&lt;h3 id="formatage-automatique-du-code">Formatage automatique du code&lt;/h3>
&lt;p>&lt;a href="https://prettier.io/">Prettier&lt;/a> est un outil indispensable.&lt;/p>
&lt;p>&lt;a href="https://prettier.io/">&lt;img src="images/prettier-logo-light.png" alt="Prettier logo">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="analyse-du-code">Analyse du code&lt;/h3>
&lt;p>&lt;a href="https://eslint.org/">ESLint&lt;/a> est l&amp;rsquo;outil le plus utilisé. Sa configuration se fait via un fichier &lt;code>.eslintrc.json&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;extends&amp;#34;&lt;/span>: [&lt;span style="color:#0086d2">&amp;#34;airbnb&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;prettier&amp;#34;&lt;/span>],
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;browser&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;plugins&amp;#34;&lt;/span>: [&lt;span style="color:#0086d2">&amp;#34;prettier&amp;#34;&lt;/span>],
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;rules&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;no-console&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;off&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;no-alert&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;off&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;no-plusplus&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;off&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;default-case&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;off&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;no-param-reassign&amp;#34;&lt;/span>: [
&lt;span style="color:#0086d2">&amp;#34;error&amp;#34;&lt;/span>,
{
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;props&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>
}
],
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;arrow-body-style&amp;#34;&lt;/span>: [
&lt;span style="color:#0086d2">&amp;#34;error&amp;#34;&lt;/span>,
&lt;span style="color:#0086d2">&amp;#34;as-needed&amp;#34;&lt;/span>,
{ &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;requireReturnForObjectLiteral&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> }
]
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="transpilation-du-code">Transpilation du code&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://babeljs.io/">Babel&lt;/a> transforme le code JavaScript ES2015+ en code ES5 compatible avec tous les environnements d&amp;rsquo;exécution JS.&lt;/li>
&lt;li>Il permet d&amp;rsquo;utiliser sereinement les dernières évolutions du langage.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://babeljs.io/">&lt;img src="images/Babel-Javascript-compiler.png" alt="Babel logo">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="typescript">TypeScript&lt;/h2>
&lt;hr>
&lt;h3 id="des-types-pour-javascript">Des types pour JavaScript&lt;/h3>
&lt;p>&lt;a href="https://www.typescriptlang.org/">TypeScript&lt;/a> est un sur-ensemble syntaxique de JavaScript qui permet un typage statique optionnel du code.&lt;/p>
&lt;p>Créé à l&amp;rsquo;origine par Microsoft, il est libre et open source.&lt;/p>
&lt;p>&lt;img src="images/typescript.png" alt="TypeScript logo">&lt;/p>
&lt;hr>
&lt;h3 id="installation-et-utilisation">Installation et utilisation&lt;/h3>
&lt;p>TS est supporté par la plupart des éditeurs de code.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install TypeScript globally&lt;/span>
npm install -g typescript
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># The TS compiler produces a pure JS version of the TS file&lt;/span>
tsc my_typescript_file.ts
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="annotations-de-type">Annotations de type&lt;/h3>
&lt;p>Elles permettent de préciser les &lt;em>contrats&lt;/em> des fonctions ou des méthodes.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ts" data-lang="ts">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// This function is meant to receive an input of type string
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> hello(person: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>) {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Hello, &amp;#34;&lt;/span> + person;
}
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> user = &lt;span style="color:#0086d2">&amp;#34;Jane Doe&amp;#34;&lt;/span>;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Uncomment to see TS error checking in action
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">//const user = [0, 1, 2];
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
console.log(hello(user)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Jane Doe&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="interfaces">Interfaces&lt;/h3>
&lt;p>Elles permettent de définir des structures de données complexes.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ts" data-lang="ts">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Describes objects that have a firstName and lastName field
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">interface&lt;/span> Person {
firstName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>;
lastName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>;
}
&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> hello(person: &lt;span style="color:#cdcaa9;font-weight:bold">Person&lt;/span>) {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Hello, &amp;#34;&lt;/span> + person.firstName + &lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span> + person.lastName;
}
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ... (see next slides)
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="duck-typing">Duck typing&lt;/h3>
&lt;blockquote>
&lt;p>&amp;ldquo;If it walks like a duck and quacks like a duck, it must be a duck.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>TS se base sur la structure concrète des objets, et non sur l&amp;rsquo;implémentation explicite d&amp;rsquo;une interface.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ts" data-lang="ts">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// This object is structurally compatible with the Person interface
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> user = { firstName: &lt;span style="color:#0086d2">&amp;#34;Jane&amp;#34;&lt;/span>, lastName: &lt;span style="color:#0086d2">&amp;#34;Doe&amp;#34;&lt;/span> };
console.log(hello(user)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Jane Doe&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="définition-de-classes">Définition de classes&lt;/h3>
&lt;p>TS supporte les définitions de classes apportées par les versions ES2015+ de JS.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ts" data-lang="ts">&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Student {
fullName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The public argument implicitly creates properties
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">constructor&lt;/span>(
&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> firstName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> middleInitial: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> lastName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>
) {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.fullName = firstName + &lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span> + middleInitial + &lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span> + lastName;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="utilisation-de-classes">Utilisation de classes&lt;/h3>
&lt;p>Classes et interfaces TS sont compatibles. Le développeur peut ainsi choisir le bon niveau d&amp;rsquo;abstraction.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ts" data-lang="ts">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> user = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Student(&lt;span style="color:#0086d2">&amp;#34;Jane&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;M.&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;Doe&amp;#34;&lt;/span>);
console.log(hello(user)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Jane Doe&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>React Native : introduction</title><link>https://www.bpesquet.fr/slides/react-native-intro/</link><pubDate>Wed, 23 May 2018 23:34:24 +0200</pubDate><guid>https://www.bpesquet.fr/slides/react-native-intro/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>L&amp;rsquo;écosystème mobile&lt;/li>
&lt;li>Premiers pas avec React Native&lt;/li>
&lt;li>Anatomie d&amp;rsquo;une application React Native&lt;/li>
&lt;li>La notion de composant&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="lécosystème-mobile">L&amp;rsquo;écosystème mobile&lt;/h2>
&lt;hr>
&lt;p>&lt;img src="images/smartphone_market_share_2016.jpg" alt="Smartphone platform market share">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/market-share-2015_2019.png" alt="Market share evolution 2015-2019">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/os-fragmentation_2018.jpg" alt="Mobile OS Fragmentation">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="développement-natif">Développement natif&lt;/h3>
&lt;p>Création d&amp;rsquo;applications en utilisant la technologie prévue par le concepteur de l&amp;rsquo;OS.&lt;/p>
&lt;ul>
&lt;li>Android : Java&lt;/li>
&lt;li>IOS : Objective-C ou Swift&lt;/li>
&lt;/ul>
&lt;p class='fragment '
>
Ces technologies sont &lt;strong>incompatibles&lt;/strong>.
&lt;/p>
&lt;hr>
&lt;h3 id="avantages">Avantages&lt;/h3>
&lt;ul>
&lt;li>Accès à l&amp;rsquo;intégralité des fonctionnalités matérielles et logicielles du terminal mobile.&lt;/li>
&lt;li>Performances optimales.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="inconvénient-majeur-">Inconvénient (majeur !)&lt;/h3>
&lt;p>Nécessité de créer puis de faire évoluer une application pour chaque environnement.&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="solutions-hybrides">Solutions hybrides&lt;/h3>
&lt;p>Création d&amp;rsquo;applications mobiles compatibles avec plusieurs OS mobiles grâce à un framework dédié.&lt;/p>
&lt;p>Une application hybride est une application web qui s&amp;rsquo;exécute à l&amp;rsquo;intérieur d&amp;rsquo;un navigateur.&lt;/p>
&lt;p>Exemples : &lt;a href="https://cordova.apache.org">Apache Cordova&lt;/a>, &lt;a href="https://ionicframework.com">Ionic&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="avantages">Avantages&lt;/h3>
&lt;ul>
&lt;li>Fonctionnalités et performances proches de celles d&amp;rsquo;une application native.&lt;/li>
&lt;li>Economies de ressources pour créer l&amp;rsquo;application.&lt;/li>
&lt;li>Une seule base de code : maintenance et évolution facilitées.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="inconvénients">Inconvénients&lt;/h3>
&lt;ul>
&lt;li>Impossible d&amp;rsquo;accéder à certaines fonctionnalités matérielles ou logicielles spécifiques.&lt;/li>
&lt;li>&lt;em>Look&amp;rsquo;n&amp;rsquo;feel&lt;/em> non natif.&lt;/li>
&lt;li>Mauvaises performances dans certains scenarii.&lt;/li>
&lt;/ul>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="développement-natif-multi-plateformes">Développement natif multi-plateformes&lt;/h3>
&lt;p>Création d&amp;rsquo;applications mobiles compatibles avec plusieurs OS mobiles grâce à un framework dédié.&lt;/p>
&lt;p>Le framework encapsule les véritables composants natifs de l&amp;rsquo;OS.&lt;/p>
&lt;p>Exemples : &lt;a href="https://facebook.github.io/react-native/">React Native&lt;/a>, &lt;a href="https://weex.apache.org/">Weex&lt;/a>, &lt;a href="https://www.visualstudio.com/fr/xamarin/">Xamarin&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="le-meilleur-des-deux-mondes-">Le meilleur des deux mondes ?&lt;/h3>
&lt;p>Combine les avantages du natif (&lt;em>look&amp;rsquo;n&amp;rsquo;feel&lt;/em>, performances) et de l&amp;rsquo;hybride (une seule base de code).&lt;/p>
&lt;p>Limite potentielle : le support de l&amp;rsquo;OS dépend entièrement du framework.&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="premiers-pas-avec-react-native">Premiers pas avec React Native&lt;/h2>
&lt;hr>
&lt;h3 id="react-native">React Native&lt;/h3>
&lt;p>Framework créé par Facebook, open source depuis 2015.&lt;/p>
&lt;p>Déclinaison mobile du framework JavaScript &lt;a href="https://reactjs.org/">React&lt;/a>.&lt;/p>
&lt;p>&lt;img src="images/reactjs.png" alt="React logo">&lt;/p>
&lt;hr>
&lt;h3 id="expo">Expo&lt;/h3>
&lt;p>Framework pour faciliter la création et le déploiement d&amp;rsquo;applications React Native.&lt;/p>
&lt;p>&lt;img src="images/expo_logo.png" alt="Expo logo">&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/expo/expo-cli">Expo CLI&lt;/a> : outil en ligne de commande pour le développement local.&lt;/li>
&lt;li>&lt;a href="https://expo.io">Expo client&lt;/a> : application mobile à installer sur le terminal cible pour le déploiement.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="création-dune-application">Création d&amp;rsquo;une application&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install expo-cli globally&lt;/span>
&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># (Node.js and Git are prerequisites)&lt;/span>
npm install -g expo-cli
&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Create a new app in the my-new-project subfolder&lt;/span>
&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Use managed TypeScript template&lt;/span>
expo init my-new-project -t expo-template-blank-typescript
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>Workflow &lt;em>managé&lt;/em> : projet entièrement géré par Expo (plus simple).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Workflow &lt;em>bare&lt;/em> : plus proche d&amp;rsquo;un projet React Native pur.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="contenu-du-répertoire-créé">Contenu du répertoire créé&lt;/h3>
&lt;p>&lt;img src="images/rn-app-structure.png" alt="Arborescence React Native">&lt;/p>
&lt;hr>
&lt;h3 id="déploiement-de-lapplication">Déploiement de l&amp;rsquo;application&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd my-new-project &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># move into project directory&lt;/span>
npm start &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Or &amp;#39;expo start&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ensuite, scan du QR Code depuis l&amp;rsquo;application Expo (Android) ou l&amp;rsquo;appareil photo du smartphone (iOS).&lt;/p>
&lt;p>&lt;img src="images/expo_qrcode.png" alt="Expo QR Code">&lt;/p>
&lt;hr>
&lt;h3 id="détails-sur-le-déploiement">Détails sur le déploiement&lt;/h3>
&lt;ul>
&lt;li>L&amp;rsquo;application est hébergée sur un serveur web local.&lt;/li>
&lt;li>Expo s&amp;rsquo;y connecte pour la récupérer puis la lancer.&lt;/li>
&lt;li>Une interface web de gestion s&amp;rsquo;affiche.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/expo_management.png" alt="Expo Management">&lt;/p>
&lt;hr>
&lt;h3 id="rechargement-dynamique">Rechargement dynamique&lt;/h3>
&lt;p>&lt;a href="https://openclassrooms.com/fr/courses/4902061-developpez-une-application-mobile-react-native/">&lt;img src="images/expo_reload.jpeg" alt="Live Reload">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="connexion-au-serveur-expo">Connexion au serveur Expo&lt;/h3>
&lt;p>L&amp;rsquo;application mobile Expo client doit accéder au serveur web de la machine de développement pour pouvoir lancer l&amp;rsquo;application RN.&lt;/p>
&lt;p>Il existe plusieurs modes de connexion :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>LAN&lt;/strong> : utilisation du réseau Wifi local. Peut poser problème dans certains environnements Wifi sécurisés.&lt;/li>
&lt;li>&lt;strong>Tunnel&lt;/strong> : création d&amp;rsquo;un tunnel avec &lt;a href="https://ngrok.com/">ngrok&lt;/a> pour accéder au serveur local via le web. Nécessite que le terminal mobile dispose d&amp;rsquo;un accès internet.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="utilisation-dun-émulateur">Utilisation d&amp;rsquo;un émulateur&lt;/h3>
&lt;ul>
&lt;li>Alternative à l&amp;rsquo;emploi d&amp;rsquo;un terminal mobile pour tester l&amp;rsquo;application RN.&lt;/li>
&lt;li>Nécessite l&amp;rsquo;installation de &lt;a href="https://developer.apple.com/xcode/">XCode (iOS)&lt;/a> ou &lt;a href="https://developer.android.com/studio">Android Studio&lt;/a> sur le machine de développement.&lt;/li>
&lt;li>Documentation : &lt;a href="https://docs.expo.io/workflow/ios-simulator/">iOS&lt;/a> | &lt;a href="https://docs.expo.io/workflow/android-studio-emulator/">Android&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/expo-emulator.png" alt="Expo emulator">&lt;/p>
&lt;hr>
&lt;h2 id="anatomie-dune-application-react-native">Anatomie d&amp;rsquo;une application React Native&lt;/h2>
&lt;hr>
&lt;h3 id="le-fichier-de-configuration-appjson">Le fichier de configuration app.json&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;My New Project&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;slug&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;my-new-project&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;orientation&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;portrait&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;icon&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;./assets/icon.png&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;splash&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;image&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;./assets/splash.png&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;resizeMode&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;contain&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;backgroundColor&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;#ffffff&amp;#34;&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;updates&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;fallbackToCacheTimeout&amp;#34;&lt;/span>: &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;assetBundlePatterns&amp;#34;&lt;/span>: [&lt;span style="color:#0086d2">&amp;#34;**/*&amp;#34;&lt;/span>],
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ios&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;supportsTablet&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;android&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;adaptiveIcon&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;foregroundImage&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;./assets/adaptive-icon.png&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;backgroundColor&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;#FFFFFF&amp;#34;&lt;/span>
}
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;web&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;favicon&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;./assets/favicon.png&amp;#34;&lt;/span>
}
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-fichier-packagejson">Le fichier package.json&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;main&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;node_modules/expo/AppEntry.js&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;start&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;android&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --android&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ios&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --ios&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;web&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --web&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;eject&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo eject&amp;#34;&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;dependencies&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~40.0.0&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo-status-bar&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~1.0.3&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;16.13.1&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react-dom&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;16.13.1&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react-native&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;https://github.com/expo/react-native/archive/sdk-40.0.1.tar.gz&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react-native-web&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~0.13.12&amp;#34;&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;devDependencies&amp;#34;&lt;/span>: {
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;@babel/core&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~7.9.0&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;@types/react&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~16.9.35&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;@types/react-dom&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~16.9.8&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;@types/react-native&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~0.63.2&amp;#34;&lt;/span>,
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;typescript&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~4.0.0&amp;#34;&lt;/span>
},
&lt;span style="color:#fb660a;font-weight:bold">&amp;#34;private&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-fichier-principal-apptsx">Le fichier principal App.tsx&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StatusBar } &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;expo-status-bar&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View } &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> App() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Open up App.tsx to start working on your app!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">StatusBar&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;auto&amp;#34;&lt;/span> /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
);
}
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
container: {
flex: &lt;span style="color:#cdcaa9;font-weight:bold">1&lt;/span>,
backgroundColor: &lt;span style="color:#0086d2">&amp;#34;#fff&amp;#34;&lt;/span>,
alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
},
});
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="les-formats-jsx-et-tsx">Les formats JSX et TSX&lt;/h3>
&lt;ul>
&lt;li>Syntaxe introduite pour le framework web &lt;a href="https://reactjs.org/">React&lt;/a>.&lt;/li>
&lt;li>Permet de décrire une UI en intégrant balisage et logique applicative.&lt;/li>
&lt;li>TSX : équivalent de JSX avec support de TypeScript.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// JSX for React (web)
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> name = &lt;span style="color:#0086d2">&amp;#34;Clarisse Agbegnenou&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> element = &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h1&lt;/span>&amp;gt;Hello, {name}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h1&lt;/span>&amp;gt;;
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// JSX for React Native (mobile)
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> a = &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> /&amp;gt;;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> b = (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">foo&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;hello&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">bar&lt;/span>={baz}&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;&lt;span style="color:#0086f7;font-weight:bold">42&lt;/span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
);
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="la-notion-de-composant">La notion de composant&lt;/h2>
&lt;hr>
&lt;h3 id="définition">Définition&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Les &lt;strong>composants&lt;/strong> sont les blocs de base d&amp;rsquo;une application React (Native).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ils permettent de créer une UI sous forme &lt;strong>déclarative&lt;/strong> par assemblage de composants.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ils doivent comporter une fonction qui définit leur rendu visuel.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="composants-fonctions">Composants fonctions&lt;/h3>
&lt;ul>
&lt;li>La valeur de retour de la fonction définit le rendu.&lt;/li>
&lt;li>Syntaxe la plus concise, pratique pour les composants simples.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { Text } &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Cat = () =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> name = &lt;span style="color:#0086d2">&amp;#34;Maru&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Hello, I am {name}!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;;
};
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> Cat;
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="composants-classes">Composants classes&lt;/h3>
&lt;ul>
&lt;li>La méthode &lt;code>render()&lt;/code> définit le rendu.&lt;/li>
&lt;li>Syntaxe à privilégier pour les composants complexes.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { Text } &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Cat &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> React.Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> name = &lt;span style="color:#0086d2">&amp;#34;Maru&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Hello, I am {name}!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;;
}
}
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> Cat;
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="propriétés-_props_-dun-composant">Propriétés (&lt;em>props&lt;/em>) d&amp;rsquo;un composant&lt;/h3>
&lt;p>Caractéristiques définies au moment de la création, modifiables uniquement par le composant parent (&lt;a href="https://snack.expo.io/@bpesquet/greeting">démo&lt;/a>).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { Component } &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { Text, View } &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Greeting &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Component {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Component has a name property which is of type string
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">constructor&lt;/span>(&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> props: { name: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> }) {
&lt;span style="color:#fb660a;font-weight:bold">super&lt;/span>(props);
}
render() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Hello {&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.name}!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;;
}
}
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> LotsOfGreetings &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> }}&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Greeting&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;John&amp;#34;&lt;/span> /&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Greeting&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Paul&amp;#34;&lt;/span> /&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Greeting&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Jones&amp;#34;&lt;/span> /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
);
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="etat-_state_-dun-composant">Etat (&lt;em>state&lt;/em>) d&amp;rsquo;un composant&lt;/h3>
&lt;p>Etat interne (données) d&amp;rsquo;un composant, susceptible de changer au cours du temps (mutable). Modifié uniquement via &lt;code>setState()&lt;/code> (&lt;a href="https://snack.expo.io/@bpesquet/counter">démo&lt;/a>).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { Component } &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View } &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">interface&lt;/span> CoounterState {
count: &lt;span style="color:#cdcaa9;font-weight:bold">number&lt;/span>;
}
&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Counter &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Component&amp;lt;{}, CoounterState&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">constructor&lt;/span>(&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> props: { color: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>; size: &lt;span style="color:#cdcaa9;font-weight:bold">number&lt;/span> }) {
&lt;span style="color:#fb660a;font-weight:bold">super&lt;/span>(props);
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.state = { count: &lt;span style="color:#cdcaa9;font-weight:bold">0&lt;/span> };
setInterval(() =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.setState({ count: &lt;span style="color:#cdcaa9;font-weight:bold">this.state.count&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span> });
}, &lt;span style="color:#0086f7;font-weight:bold">1000&lt;/span>);
}
render() {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { count } = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.state;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { color, size } = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ color, fontSize: &lt;span style="color:#cdcaa9;font-weight:bold">size&lt;/span> }}&amp;gt;{count}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;;
}
}
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> CounterApp &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Counter&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">color&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">size&lt;/span>={&lt;span style="color:#0086f7;font-weight:bold">50&lt;/span>} /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
);
}
}
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
container: {
flex: &lt;span style="color:#cdcaa9;font-weight:bold">1&lt;/span>,
backgroundColor: &lt;span style="color:#0086d2">&amp;#34;#fff&amp;#34;&lt;/span>,
alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
},
});
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="composants-de-base">Composants de base&lt;/h3>
&lt;p>&lt;img src="images/basic_components.png" alt="React Native core components">&lt;/p>
&lt;hr>
&lt;h3 id="composants-dinterface-utilisateur">Composants d&amp;rsquo;interface utilisateur&lt;/h3>
&lt;p>&lt;img src="images/ui_components.png" alt="React native UI components">&lt;/p></description></item><item><title>React Native : gestion de l'UI</title><link>https://www.bpesquet.fr/slides/react-native-ui/</link><pubDate>Tue, 07 Jan 2020 23:06:33 +0100</pubDate><guid>https://www.bpesquet.fr/slides/react-native-ui/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>Cycle de vie d&amp;rsquo;un composant&lt;/li>
&lt;li>Style et positionnement&lt;/li>
&lt;li>Gestion de la navigation&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="cycle-de-vie-dun-composant">Cycle de vie d&amp;rsquo;un composant&lt;/h2>
&lt;hr>
&lt;h3 id="notion-de-cycle-de-vie">Notion de cycle de vie&lt;/h3>
&lt;p>Les composants RN suivent un cycle de vie bien défini composé d&amp;rsquo;étapes : &lt;strong>montage&lt;/strong>, &lt;strong>rendu&lt;/strong>, &lt;strong>mise à jour&lt;/strong>, &lt;strong>démontage&lt;/strong> et &lt;strong>suppression&lt;/strong>.&lt;/p>
&lt;p>&lt;a href="http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/">&lt;img src="images/react-lifecycle.png" alt="React lifecycle">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="méthodes-liées-au-cycle-de-vie">Méthodes liées au cycle de vie&lt;/h3>
&lt;p>Les redéfinir permet d&amp;rsquo;exécuter du code spécifique.&lt;/p>
&lt;ol>
&lt;li>&lt;code>constructor(props)&lt;/code> : initialisation des propriétés et de l&amp;rsquo;état.&lt;/li>
&lt;li>&lt;code>render()&lt;/code> : renvoi d&amp;rsquo;un élément React Native.&lt;/li>
&lt;li>&lt;code>componentDidMount()&lt;/code> : appels asynchrones.&lt;/li>
&lt;li>&lt;code>shouldComponentUpdate()&lt;/code> : renvoi d&amp;rsquo;un booléen pour annuler la mise à jour.&lt;/li>
&lt;li>&lt;code>componentDidUpdate()&lt;/code> : actions après la mise à jour du rendu.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="style-et-positionnement">Style et positionnement&lt;/h2>
&lt;hr>
&lt;h3 id="gestion-du-style">Gestion du style&lt;/h3>
&lt;p>Propriété &lt;code>style&lt;/code> pour les composants de base.&lt;/p>
&lt;p>Semblable à CSS avec nommage &lt;em>camelCase&lt;/em>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { Component } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
bigblue: {
color: &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>,
fontWeight: &lt;span style="color:#0086d2">&amp;#34;bold&amp;#34;&lt;/span>,
fontSize: &lt;span style="color:#0086f7;font-weight:bold">30&lt;/span>,
},
red: {
color: &lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span>,
},
});
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> LotsOfStyles &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.red}&amp;gt;just red&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.bigblue}&amp;gt;just bigblue&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={[styles.bigblue, styles.red]}&amp;gt;bigblue, then red&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={[styles.red, styles.bigblue]}&amp;gt;red, then bigblue&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
);
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="gestion-des-dimensions">Gestion des dimensions&lt;/h3>
&lt;p>Deux possibilités :&lt;/p>
&lt;ul>
&lt;li>Dimensions fixes&lt;/li>
&lt;li>Dimensions flexibles&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="dimensions-fixes">Dimensions fixes&lt;/h3>
&lt;p>Utile pour les composants qui doivent toujours être affichés à la même taille.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { Component } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> FixedDimensionsBasics &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ width: &lt;span style="color:#0086f7;font-weight:bold">50&lt;/span>, height: &lt;span style="color:#0086f7;font-weight:bold">50&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;powderblue&amp;#34;&lt;/span> }}
/&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ width: &lt;span style="color:#0086f7;font-weight:bold">100&lt;/span>, height: &lt;span style="color:#0086f7;font-weight:bold">100&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;skyblue&amp;#34;&lt;/span> }} /&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ width: &lt;span style="color:#0086f7;font-weight:bold">150&lt;/span>, height: &lt;span style="color:#0086f7;font-weight:bold">150&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;steelblue&amp;#34;&lt;/span> }}
/&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
);
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="dimensions-flexibles">Dimensions flexibles&lt;/h3>
&lt;p>Les dimensions s&amp;rsquo;adaptent à l&amp;rsquo;espace disponible.&lt;/p>
&lt;p>&lt;code>flex:1&lt;/code> =&amp;gt; espace partagé équitablement entre tous les composants d&amp;rsquo;un même parent (&lt;a href="https://snack.expo.io/@bpesquet/dimensions">démo&lt;/a>).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { Component } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> FlexDimensionsBasics &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Try removing the `flex: 1` on the parent View.
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The parent will not have dimensions, so the children can&amp;#39;t expand.
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// What if you add `height: 300` instead of `flex: 1`?
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span> }}&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;powderblue&amp;#34;&lt;/span> }} /&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ flex: &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;skyblue&amp;#34;&lt;/span> }} /&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ flex: &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;steelblue&amp;#34;&lt;/span> }} /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
);
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="flexbox">Flexbox&lt;/h3>
&lt;ul>
&lt;li>Mode de mise en page pour les éléments situés à l&amp;rsquo;intérieur d&amp;rsquo;un conteneur.&lt;/li>
&lt;li>Objectif : répartir au mieux l&amp;rsquo;espace disponible.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/flexbox_terminology.png" alt="Flexbox terminology">&lt;/p>
&lt;hr>
&lt;h3 id="flexdirection--flux-des-éléments">&lt;code>flexDirection&lt;/code> : flux des éléments&lt;/h3>
&lt;p>&lt;code>column&lt;/code> (par défaut), &lt;code>row&lt;/code>, &lt;code>column-reverse&lt;/code>, &lt;code>row-reverse&lt;/code>.&lt;/p>
&lt;p>&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">&lt;img src="images/flexbox_flex_direction.png" alt="Flex direction">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="justifycontent--axe-principal">&lt;code>justifyContent&lt;/code> : axe principal&lt;/h3>
&lt;p>&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">&lt;img src="images/flexbox_justify_content.png" alt="Flexbox: justify content">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="alignitems--axe-secondaire">&lt;code>alignItems&lt;/code> : axe secondaire&lt;/h3>
&lt;p>&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">&lt;img src="images/flexbox_align_items.png" alt="Flexbox: align Items">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="gestion-de-la-navigation">Gestion de la navigation&lt;/h2>
&lt;hr>
&lt;h3 id="react-navigation">React Navigation&lt;/h3>
&lt;ul>
&lt;li>Composant issu de la communauté des développeurs React Native.&lt;/li>
&lt;li>Devenu le standard pour les applications multi-vues.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://reactnavigation.org">&lt;img src="images/react_navigation_logo.png" alt="React Navigation logo">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="installation-de-react-navigation">Installation de react-navigation&lt;/h3>
&lt;p>Utiliser &lt;code>expo install&lt;/code> au lieu de &lt;code>npm install&lt;/code> assure l&amp;rsquo;installation de versions compatibles avec celle d&amp;rsquo;Expo.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Core components and dependencies&lt;/span>
expo install @react-navigation/native react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view
&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># StackNavigator dependencies&lt;/span>
expo install @react-navigation/stack
&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># BottomTabNavigator dependencies&lt;/span>
expo install @react-navigation/bottom-tabs
&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># DrawerNavigator dependencies&lt;/span>
expo install @react-navigation/drawer
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="stacknavigator">StackNavigator&lt;/h3>
&lt;p>Principe similaire au web : gestion d&amp;rsquo;une pile de vues.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Stack = createStackNavigator();
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> App() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen} /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="navigation-entre-vues">Navigation entre vues&lt;/h3>
&lt;ul>
&lt;li>Un objet &lt;code>navigation&lt;/code> est automatiquement ajouté aux &lt;em>props&lt;/em> des vues gérées par React Navigation.&lt;/li>
&lt;li>Son API permet de naviguer entre les vues.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ts" data-lang="ts">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Navigue vers une vue
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;RouteName&amp;#34;&lt;/span>);
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Permet d&amp;#39;aller plusieurs fois vers la même vue
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.navigation.push(&lt;span style="color:#0086d2">&amp;#34;RouteName&amp;#34;&lt;/span>);
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Revient à la vue précédente
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.navigation.goBack();
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="passage-de-paramètres-entre-vues">Passage de paramètres entre vues&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ts" data-lang="ts">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Côté vue appelante
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;RouteName&amp;#34;&lt;/span>, {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Objet dont les propriétés constituent les arguments */&lt;/span>
param1: &lt;span style="color:#0086d2">&amp;#34;value1&amp;#34;&lt;/span>,
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>});
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Côté vue appelée
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La propriété route.params permet de récupérer les paramètres passés à la vue
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { param1 } = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.route.params;
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="en-tête-des-vues">En-tête des vues&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">MainStack.Navigator&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">screenOptions&lt;/span>={{
headerStyle: {
backgroundColor: &lt;span style="color:#0086d2">&amp;#34;#f4511e&amp;#34;&lt;/span>,
},
headerTintColor: &lt;span style="color:#0086d2">&amp;#34;#fff&amp;#34;&lt;/span>,
headerTitleStyle: {
fontWeight: &lt;span style="color:#0086d2">&amp;#34;bold&amp;#34;&lt;/span>,
},
}}
&amp;gt;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="vue-modale">Vue modale&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">RootStack.Navigator&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">mode&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;modal&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">headerMode&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;none&amp;#34;&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">RootStack.Screen&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Main&amp;#34;&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={MainStackScreen}
&lt;span style="color:#ff0086;font-weight:bold">options&lt;/span>={{ headerShown: &lt;span style="color:#cdcaa9;font-weight:bold">false&lt;/span> }}
/&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">RootStack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;MyModal&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={ModalScreen} /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">RootStack.Navigator&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple-récapitulatif">Exemple récapitulatif&lt;/h3>
&lt;p>&lt;a href="https://github.com/ensc-mobi/StackNavigatorDemo">https://github.com/ensc-mobi/StackNavigatorDemo&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/stack-navigator-demo.png" alt="StackNavigator demo">&lt;/p>
&lt;hr>
&lt;h3 id="tabnavigator">TabNavigator&lt;/h3>
&lt;p>Affichage d&amp;rsquo;onglets en bas de l&amp;rsquo;écran.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Tab = createBottomTabNavigator();
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> App() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen} /&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={SettingsScreen} /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="navigation-entre-onglets">Navigation entre onglets&lt;/h3>
&lt;p>Fonctionnement identique à celui de la navigation entre les vues d&amp;rsquo;un &lt;code>StackNavigator&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Settings&amp;#34;&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span>)}
/&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="affichage-de-piles-_stacks_-dans-les-onglets">Affichage de piles (&lt;em>stacks&lt;/em>) dans les onglets&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-tsx" data-lang="tsx">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeStack = createStackNavigator();
&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> HomeStackScreen() {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Define home stack
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> SettingsStack = createStackNavigator();
&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> SettingsStackScreen() {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Define settings stack
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Tab = createBottomTabNavigator();
&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> TabScreen() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeStackScreen} /&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={SettingsStackScreen} /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple-récapitulatif-1">Exemple récapitulatif&lt;/h3>
&lt;p>&lt;a href="https://github.com/ensc-mobi/TabNavigatorDemo">https://github.com/ensc-mobi/TabNavigatorDemo&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/tab-navigator-demo.png" alt="BottomTabNavigator demo">&lt;/p>
&lt;hr>
&lt;h3 id="autres-possibilités-de-react-navigation">Autres possibilités de react-navigation&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://reactnavigation.org/docs/drawer-based-navigation">Navigation par menu accordéon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://reactnavigation.org/docs/auth-flow">Gestion de l&amp;rsquo;authentification&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul></description></item><item><title>React Native : gestion de l'état</title><link>https://www.bpesquet.fr/slides/react-native-state/</link><pubDate>Sun, 12 Jan 2020 21:50:06 +0100</pubDate><guid>https://www.bpesquet.fr/slides/react-native-state/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>Partage de l&amp;rsquo;état entre composants&lt;/li>
&lt;li>Centralisation de l&amp;rsquo;état&lt;/li>
&lt;li>Gestion de l&amp;rsquo;état avec MobX&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="partage-de-létat-entre-composants">Partage de l&amp;rsquo;état entre composants&lt;/h2>
&lt;hr>
&lt;h3 id="rappels-sur-les-propriétés">Rappels sur les propriétés&lt;/h3>
&lt;p>&lt;strong>Propriétés (&lt;em>props&lt;/em>)&lt;/strong> = caractéristiques définies au moment de la création du composant.&lt;/p>
&lt;p>Les propriétés sont modifiables uniquement par le composant parent.&lt;/p>
&lt;hr>
&lt;h3 id="rappels-sur-létat">Rappels sur l&amp;rsquo;état&lt;/h3>
&lt;p>&lt;strong>Etat (&lt;em>state&lt;/em>)&lt;/strong> = ensemble des données susceptibles d&amp;rsquo;être modifiées pendant l&amp;rsquo;exécution de l&amp;rsquo;application.&lt;/p>
&lt;p>Chaque composant React Native possède un état interne, géré avec &lt;code>this.state&lt;/code> et &lt;code>this.setState()&lt;/code>.&lt;/p>
&lt;p>Toute modification de l&amp;rsquo;état déclenche un nouveau rendu du composant.&lt;/p>
&lt;hr>
&lt;h3 id="problématique">Problématique&lt;/h3>
&lt;p>La gestion locale de l&amp;rsquo;état devient insuffisante lorsqu&amp;rsquo;un composant doit &lt;strong>accéder à&lt;/strong> ou &lt;strong>modifier&lt;/strong> l&amp;rsquo;état d&amp;rsquo;un autre composant.&lt;/p>
&lt;p>Nécessité de partager un état commun entre certains composants.&lt;/p>
&lt;hr>
&lt;h3 id="solution--_lifting-state-up_">Solution : &lt;em>&amp;ldquo;lifting state up&amp;rdquo;&lt;/em>&lt;/h3>
&lt;ul>
&lt;li>Remonter l&amp;rsquo;état au niveau du plus proche composant parent commun.&lt;/li>
&lt;li>Définir les actions de modification dans ce composant parent.&lt;/li>
&lt;li>Dans les composants enfants :
&lt;ul>
&lt;li>Remplacer l&amp;rsquo;état local par des propriétés définies par le parent.&lt;/li>
&lt;li>Remplacer les actions locales par des appels aux actions définies dans le parent.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://reactjs.org/docs/lifting-state-up.html">Lifting State Up (React)&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="application">Application&lt;/h3>
&lt;p>&lt;a href="https://github.com/ensc-mobi/TempConverter">https://github.com/ensc-mobi/TempConverter&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/temp-converter.png" alt="TempConverter demo">&lt;/p>
&lt;hr>
&lt;h3 id="utilisation-de-props-dans-les-composants-enfants">Utilisation de props dans les composants enfants&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> TemperatureInput &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> React.Component {
_onChangeText = (text) =&amp;gt; {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Callback passed as component prop is called
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.onTemperatureChange(text);
};
render() {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> temperature = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.temperature;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> scale = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.scale;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> placeholder = &lt;span style="color:#0086d2">`Enter temperature in &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>scaleNames[scale]&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">`&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TextInput&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}
&lt;span style="color:#ff0086;font-weight:bold">placeholder&lt;/span>={placeholder}
&lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>={temperature}
&lt;span style="color:#ff0086;font-weight:bold">onChangeText&lt;/span>={&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>._onChangeText}
/&amp;gt;
);
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="remontée-de-létat-dans-le-composant-parent">Remontée de l&amp;rsquo;état dans le composant parent&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Calculator &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> React.Component {
constructor(props) {
&lt;span style="color:#fb660a;font-weight:bold">super&lt;/span>(props);
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Common state is lifted in closest parent of TemperatureInput components
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Temperature can be set either in Celsius or in Fahrenheit
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.state = { temperature: &lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>, scale: &lt;span style="color:#0086d2">&amp;#34;c&amp;#34;&lt;/span> };
}
_onCelsiusChange = temperature =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.setState({ scale: &lt;span style="color:#0086d2">&amp;#34;c&amp;#34;&lt;/span>, temperature });
};
_onFahrenheitChange = temperature =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.setState({ scale: &lt;span style="color:#0086d2">&amp;#34;f&amp;#34;&lt;/span>, temperature });
};
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="appel-aux-actions-définies-dans-le-parent">Appel aux actions définies dans le parent&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx"> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> render() {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> scale = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.state.scale;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> temperature = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.state.temperature;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> tempCelsius =
scale === &lt;span style="color:#0086d2">&amp;#34;f&amp;#34;&lt;/span> ? tryConvert(temperature, toCelsius) : temperature;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> tempFahrenheit =
scale === &lt;span style="color:#0086d2">&amp;#34;c&amp;#34;&lt;/span> ? tryConvert(temperature, toFahrenheit) : temperature;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TemperatureInput&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">scale&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;c&amp;#34;&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">temperature&lt;/span>={tempCelsius}
&lt;span style="color:#ff0086;font-weight:bold">onTemperatureChange&lt;/span>={&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>._onCelsiusChange}
/&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TemperatureInput&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">scale&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;f&amp;#34;&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">temperature&lt;/span>={tempFahrenheit}
&lt;span style="color:#ff0086;font-weight:bold">onTemperatureChange&lt;/span>={&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>._onFahrenheitChange}
/&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">BoilingResult&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">tempCelsius&lt;/span>={parseFloat(tempCelsius)} /&amp;gt;
&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="centralisation-de-létat">Centralisation de l&amp;rsquo;état&lt;/h2>
&lt;hr>
&lt;h3 id="problématique-1">Problématique&lt;/h3>
&lt;p>Les composants parents rassemblent trop de choses :&lt;/p>
&lt;ul>
&lt;li>Etat commun&lt;/li>
&lt;li>Actions de modification&lt;/li>
&lt;li>Hiérarchie des composants enfants&lt;/li>
&lt;/ul>
&lt;p>Non-respect du principe de séparation des responsabilités.&lt;/p>
&lt;hr>
&lt;h3 id="solution">Solution&lt;/h3>
&lt;ul>
&lt;li>Centraliser l&amp;rsquo;état et les actions de modifications dans des objets dédiés, souvent appelés &lt;strong>stores&lt;/strong>.&lt;/li>
&lt;li>Donner accès à ces objets aux composants via des propriétés.&lt;/li>
&lt;li>Prévoir un mécanisme d'&lt;strong>abonnement&lt;/strong> des composants aux mutations de l&amp;rsquo;état effectués uniquement dans les stores.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="application-1">Application&lt;/h3>
&lt;p>&lt;a href="https://github.com/ensc-mobi/TodoNative">https://github.com/ensc-mobi/TodoNative&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/todonative.png" alt="TodoNative demo">&lt;/p>
&lt;hr>
&lt;h3 id="définition-dun-store">Définition d&amp;rsquo;un store&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> TodoStore &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Store {
constructor() {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Call to parent constructor is needed to init observation
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">super&lt;/span>();
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The TODO task is used as key (unique identifier)
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Therefore, each TODO must have a different task
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.todos = [];
}
addTodo = (task) =&amp;gt; {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add new TODO at beginning of array
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.todos = [{ task, completed: &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> }, ...&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.todos];
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.notifyObservers();
};
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Used in parent class when notifying observers
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> getState() {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> todos = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.todos;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> { todos };
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="notification-des-changements-détat">Notification des changements d&amp;rsquo;état&lt;/h3>
&lt;p>Basée sur le Design Pattern &lt;a href="https://fr.wikipedia.org/wiki/Observateur_%28patron_de_conception%29">Observateur&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Store {
constructor() {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Define an empty observer list
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.observers = [];
}
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add new observer to list
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> addObserver(observer) {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.observers.push(observer);
}
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Notify all observers of a state change in the store
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> notifyObservers() {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.observers.forEach((observer) =&amp;gt; observer.setState(&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.getState()));
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="lien-entre-store-et-composant-principal">Lien entre store et composant principal&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> App = () =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> todoStore = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> TodoStore();
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">MainView&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">todoStore&lt;/span>={todoStore} /&amp;gt;;
};
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App;
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="abonnement-dun-composant">Abonnement d&amp;rsquo;un composant&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MainView &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> React.Component {
constructor(props) {
&lt;span style="color:#fb660a;font-weight:bold">super&lt;/span>(props);
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.state = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.todoStore.getState();
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.todoStore.addObserver(&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>);
}
render() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Header&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;TodoNative&amp;#34;&lt;/span> /&amp;gt;
&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Input&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">placeholder&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Saisissez une nouvelle tâche&amp;#34;&lt;/span>
&lt;span style="color:#ff0086;font-weight:bold">onSubmitEditing&lt;/span>={&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.todoStore.addTodo}
/&amp;gt;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="gestion-de-létat-avec-mobx">Gestion de l&amp;rsquo;état avec MobX&lt;/h2>
&lt;hr>
&lt;h3 id="problématique-2">Problématique&lt;/h3>
&lt;ul>
&lt;li>Le nombre croissant de composants complique les évolutions de l&amp;rsquo;état.&lt;/li>
&lt;li>Les mutations de l&amp;rsquo;état peuvent déclencher un (trop) grand nombre de rendus des composants.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="solution-1">Solution&lt;/h3>
&lt;ul>
&lt;li>Utiliser une librairie dédiée à la gestion de l&amp;rsquo;état.&lt;/li>
&lt;li>&lt;a href="https://www.robinwieruch.de/redux-mobx-confusion/">Bon choix&lt;/a> pour la plupart des projets de taille intermédiaire : &lt;a href="https://mobx.js.org">MobX&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/mobx-logo.png" alt="MobX logo">&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Add MobX to a React Native project&lt;/span>
expo install mobx mobx-react
expo install --save-dev babel-preset-mobx
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>&lt;img src="images/mobx-overview.png" alt="MobX overview">&lt;/p>
&lt;hr>
&lt;h3 id="application-2">Application&lt;/h3>
&lt;p>&lt;a href="https://github.com/ensc-mobi/TodoNative-MobX">https://github.com/ensc-mobi/TodoNative-MobX&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/todonative.png" alt="TodoNative-MobX demo">&lt;/p>
&lt;hr>
&lt;h3 id="définition-dune-classe-métier">Définition d&amp;rsquo;une classe métier&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { observable } from &lt;span style="color:#0086d2">&amp;#34;mobx&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Todo {
@observable task;
@observable completed;
constructor(task = &lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>, completed = &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>) {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.task = task;
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.completed = completed;
}
toggle() {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.completed = !&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.completed;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="définition-dun-store-1">Définition d&amp;rsquo;un store&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { observable } from &lt;span style="color:#0086d2">&amp;#34;mobx&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> Todo from &lt;span style="color:#0086d2">&amp;#34;../domain/Todo&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> TodoStore {
@observable todos;
@observable isLoading = &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>;
constructor() {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The TODO task is used as key (unique identifier)
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Therefore, each TODO must have a different task
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.todos = [];
}
addTodo(task) {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> todo = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Todo(task);
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add new TODO at beginning of array
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.todos = [todo, ...&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.todos];
}
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="lien-entre-store-et-composant-principal-1">Lien entre store et composant principal&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> App = () =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> todoStore = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> TodoStore();
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">MainView&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">todoStore&lt;/span>={todoStore} /&amp;gt;;
};
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App;
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="abonnement-dun-composant-1">Abonnement d&amp;rsquo;un composant&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { observer } from &lt;span style="color:#0086d2">&amp;#34;mobx-react&amp;#34;&lt;/span>;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
@observer
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MainView &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> React.Component {
onAddTodo = task =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.todoStore.addTodo(task);
};
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
render() {
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;View style={styles.container}&amp;gt;
&amp;lt;Header title=&lt;span style="color:#0086d2">&amp;#34;TodoNative&amp;#34;&lt;/span> /&amp;gt;
&amp;lt;Input
placeholder=&lt;span style="color:#0086d2">&amp;#34;Saisissez une nouvelle tâche&amp;#34;&lt;/span>
onSubmitEditing={&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.onAddTodo}
/&amp;gt;
&amp;lt;FlatList
style={styles.todoContainer}
data={&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props.todoStore.todos}
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="pourquoi-pas-redux-">Pourquoi pas Redux ?&lt;/h2>
&lt;p>&lt;img src="images/redux-all.jpeg" alt="Redux all!">&lt;/p>
&lt;ul>
&lt;li>Librairie créée pour adresser des problématiques à l&amp;rsquo;échelle de Facebook&lt;/li>
&lt;li>Complexe et &lt;em>overkill&lt;/em> pour les projets &amp;ldquo;normaux&amp;rdquo;&lt;/li>
&lt;li>&lt;a href="https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367">&amp;ldquo;You might not need Redux&amp;rdquo;&lt;/a> (écrit par son créateur)&lt;/li>
&lt;/ul></description></item><item><title>React Native : utilisation d'API web</title><link>https://www.bpesquet.fr/slides/react-native-api/</link><pubDate>Tue, 14 Jan 2020 10:14:10 +0100</pubDate><guid>https://www.bpesquet.fr/slides/react-native-api/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>Introduction aux API web&lt;/li>
&lt;li>Appels réseau avec JavaScript&lt;/li>
&lt;li>Interactions avec un SGBDR via une API&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="introduction-aux-api-web">Introduction aux API web&lt;/h2>
&lt;hr>
&lt;h3 id="la-notion-dapi">La notion d&amp;rsquo;API&lt;/h3>
&lt;p>Une &lt;strong>API&lt;/strong> (&lt;em>Application Programming Interface&lt;/em>) est un point d&amp;rsquo;entrée programmatique dans un système.&lt;/p>
&lt;p>Elle fournit un moyen d&amp;rsquo;interagir avec ce système.&lt;/p>
&lt;p>Les API permettent aux développeurs d&amp;rsquo;intégrer des services externes dans leurs applications.&lt;/p>
&lt;hr>
&lt;h3 id="spécificités-des-api-web">Spécificités des API web&lt;/h3>
&lt;p>Une &lt;strong>API web&lt;/strong> (appelée parfois service web) est une API accessible via les technologies du web : HTTP ou HTTPS.&lt;/p>
&lt;p>Les API web utilisent le plus souvent le format de donnée &lt;strong>JSON&lt;/strong>.&lt;/p>
&lt;p>Certaines sont librement utilisables, d&amp;rsquo;autres nécessitent une authentification du client.&lt;/p>
&lt;hr>
&lt;h3 id="exemples-dapi-web">Exemples d&amp;rsquo;API web&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://pokeapi.co/">PokéAPI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://swapi.dev/">Star Wars API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/w/api.php?">Wikipedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.spotify.com/documentation/web-api/">Spotify&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.omdbapi.com/">OMDb API&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>(&lt;a href="https://shkspr.mobi/blog/2016/05/easy-apis-without-authentication/">Source&lt;/a>)&lt;/p>
&lt;hr>
&lt;h3 id="outils-pour-la-gestion-des-api-web">Outils pour la gestion des API web&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.getpostman.com/">Postman&lt;/a>&lt;/li>
&lt;li>Extension &lt;a href="https://addons.mozilla.org/fr/firefox/addon/restclient/">RESTClient&lt;/a> pour Firefox&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="appels-réseau-avec-javascript">Appels réseau avec JavaScript&lt;/h2>
&lt;hr>
&lt;h3 id="appels-asynchrones">Appels asynchrones&lt;/h3>
&lt;p>Une &lt;a href="https://web.dev/promises/">promesse&lt;/a> (&lt;em>promise&lt;/em>) est un objet qui encapsule une opération dont le résultat n&amp;rsquo;est pas encore connu.&lt;/p>
&lt;p>La fonction JavaScript &lt;a href="https://developers.google.com/web/updates/2015/03/introduction-to-fetch">fetch()&lt;/a> exploite les possibilités des promesses.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Envoie une requête HTTP asynchrone vers l&amp;#39;URL spécifiée
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>fetch(url)
.then(() =&amp;gt; {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Code appelé ultérieurement si la requête réussit
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> })
.&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span>(() =&amp;gt; {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Code appelé ultérieurement si la requête échoue
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> });
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="accès-à-une-ressource-distante">Accès à une ressource distante&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Envoi d&amp;#39;une requête HTTP asynchrone vers l&amp;#39;URL spécifiée
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La réponse reçue ici contient des données JSON
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>fetch(&lt;span style="color:#0086d2">&amp;#34;http://my-api-url&amp;#34;&lt;/span>)
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès au contenu JSON de la réponse
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> .then((response) =&amp;gt; response.json())
.then((content) =&amp;gt; {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Utilisation du contenu de la réponse
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// `content` est un objet ou un tableau JavaScript
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> })
.&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span>((error) =&amp;gt; {
console.error(error);
});
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mise-à-jour-dune-ressource-distante">Mise à jour d&amp;rsquo;une ressource distante&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">fetch(&lt;span style="color:#0086d2">&amp;#34;https://mywebsite.com/endpoint/&amp;#34;&lt;/span>, {
method: &lt;span style="color:#0086d2">&amp;#34;POST&amp;#34;&lt;/span>,
headers: {
Accept: &lt;span style="color:#0086d2">&amp;#34;application/json&amp;#34;&lt;/span>,
&lt;span style="color:#0086d2">&amp;#34;Content-Type&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;application/json&amp;#34;&lt;/span>,
},
body: JSON.stringify({
firstParam: &lt;span style="color:#0086d2">&amp;#34;yourValue&amp;#34;&lt;/span>,
secondParam: &lt;span style="color:#0086d2">&amp;#34;yourOtherValue&amp;#34;&lt;/span>,
}),
});
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="application">Application&lt;/h3>
&lt;p>&lt;a href="https://github.com/ensc-mobi/RandomBeer">https://github.com/ensc-mobi/RandomBeer&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/random_beer.png" alt="Random Beer app">&lt;/p>
&lt;hr>
&lt;h3 id="consommation-dune-api-web">Consommation d&amp;rsquo;une API web&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> headers = {
&lt;span style="color:#0086d2">&amp;#34;Content-Type&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;application/json&amp;#34;&lt;/span>,
Accept: &lt;span style="color:#0086d2">&amp;#34;application/json&amp;#34;&lt;/span>,
};
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Retourne une recette de bière au hasard
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> getRandomBrewdog = () =&amp;gt;
fetch(&lt;span style="color:#0086d2">`&lt;/span>&lt;span style="color:#0086d2">${&lt;/span>rootEndpoint&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">/beers/random`&lt;/span>, { headers })
.then((response) =&amp;gt; response.json())
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Access first element of returned array
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> .then((beers) =&amp;gt; beers[&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>])
.&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span>((error) =&amp;gt; {
console.error(error);
});
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mise-à-jour-de-lapplication">Mise à jour de l&amp;rsquo;application&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx"> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> _getRandomBrewdogWithFeedback = () =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.setState({ isLoading: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> });
getRandomBrewdog().then(beer =&amp;gt;
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.setState({
name: beer.name,
description: beer.description,
isLoading: &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// la requête est terminée
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> })
);
};
componentDidMount() {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>._getRandomBrewdogWithFeedback();
}
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="interactions-avec-un-sgbdr-via-une-api">Interactions avec un SGBDR via une API&lt;/h2>
&lt;hr>
&lt;h3 id="php-crud-api">PHP-CRUD-API&lt;/h3>
&lt;p>&lt;a href="https://github.com/mevdschee/php-crud-api">https://github.com/mevdschee/php-crud-api&lt;/a>&lt;/p>
&lt;p>Fichier &lt;code>api.php&lt;/code> à publier sur un serveur web PHP. Fournit une API web pour accéder aux données d&amp;rsquo;un SGBDR.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Update to reflect your local settings
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a">$config&lt;/span> = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Config([
&lt;span style="color:#0086d2">&amp;#39;username&amp;#39;&lt;/span> =&amp;gt; &lt;span style="color:#0086d2">&amp;#39;xxx&amp;#39;&lt;/span>,
&lt;span style="color:#0086d2">&amp;#39;password&amp;#39;&lt;/span> =&amp;gt; &lt;span style="color:#0086d2">&amp;#39;xxx&amp;#39;&lt;/span>,
&lt;span style="color:#0086d2">&amp;#39;database&amp;#39;&lt;/span> =&amp;gt; &lt;span style="color:#0086d2">&amp;#39;xxx&amp;#39;&lt;/span>,
]);
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="utilisation-de-php-crud-api">Utilisation de PHP-CRUD-API&lt;/h3>
&lt;p>&lt;code>http://my-server-url/api.php/records/...&lt;/code>&lt;/p>
&lt;ul>
&lt;li>&lt;code>GET my-table&lt;/code> : renvoie la liste des enregistrements de la table &lt;code>my-table&lt;/code>.&lt;/li>
&lt;li>&lt;code>GET my-table/id&lt;/code> : renvoie l&amp;rsquo;enregistrement identifié par &lt;code>id&lt;/code>.&lt;/li>
&lt;li>&lt;code>POST my-table&lt;/code> : création d&amp;rsquo;un nouvel enregistrement avec les données contenues dans le corps de la requête.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="application-1">Application&lt;/h3>
&lt;p>&lt;a href="https://github.com/ensc-mobi/MyMoviesNative">https://github.com/ensc-mobi/MyMoviesNative&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/mymoviesnative.png" alt="MyMoviesNative demo">&lt;/p>
&lt;hr>
&lt;h3 id="classe-métier-film">Classe métier film&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Movie {
@observable id;
@observable title;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> @observable image;
constructor(
id,
title,
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> image
) {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.id = id;
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.title = title;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.image = image;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="accès-au-sgbdr">Accès au SGBDR&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> rootEndpoint = &lt;span style="color:#0086d2">&amp;#34;http://localhost/mymovies/api.php/records&amp;#34;&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> headers = {
&lt;span style="color:#0086d2">&amp;#34;Content-Type&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;application/json&amp;#34;&lt;/span>,
Accept: &lt;span style="color:#0086d2">&amp;#34;application/json&amp;#34;&lt;/span>,
};
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> getAllMovies = () =&amp;gt;
fetch(&lt;span style="color:#0086d2">`&lt;/span>&lt;span style="color:#0086d2">${&lt;/span>rootEndpoint&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">/movie/`&lt;/span>, { headers })
.then((response) =&amp;gt; response.json())
.then((jsonResponse) =&amp;gt; jsonResponse.records)
.&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span>((error) =&amp;gt; {
console.log(error);
});
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="récupération-de-la-liste-des-films">Récupération de la liste des films&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieStore {
@observable movies;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
fetchAll() {
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.movies = [];
getAllMovies().then((movies) =&amp;gt; {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">//console.log(movies);
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> movies.forEach((movieData) =&amp;gt; {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Movie(
movieData.mov_id,
movieData.mov_title,
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> movieData.mov_image
);
&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.movies = [movie, ...&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.movies];
});
});
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="vue-principale">Vue principale&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HomeScreen &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> React.Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> movieStore = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> MovieStore();
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// All React Navigation screens receive this object as prop
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { navigation } = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props;
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Navigation object is passed down to children components
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">MainView&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">movieStore&lt;/span>={movieStore} &lt;span style="color:#ff0086;font-weight:bold">navigation&lt;/span>={navigation} /&amp;gt;;
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="affichage-dun-film-dans-la-liste">Affichage d&amp;rsquo;un film dans la liste&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">@observer
&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieItem &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> React.Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { movie } = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { navigation } = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;View style={styles.container}&amp;gt;
&amp;lt;TouchableOpacity
onPress={() =&amp;gt; {
navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span>, {
movie: movie,
});
}}
&amp;gt;
&amp;lt;Text style={styles.text}&amp;gt;
{movie.title} ({movie.year})
&amp;lt;/Text&amp;gt;
&amp;lt;/TouchableOpacity&amp;gt;
&amp;lt;/View&amp;gt;
);
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="détails-sur-un-film">Détails sur un film&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-js" data-lang="js">&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> DetailsScreen &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> React.Component {
render() {
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { navigation } = &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.props;
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> movie = navigation.getParam(&lt;span style="color:#0086d2">&amp;#34;movie&amp;#34;&lt;/span>);
&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> imageUrl = imagesEndpoint + movie.image;
&lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&amp;lt;View style={styles.container}&amp;gt;
&amp;lt;Text style={styles.title}&amp;gt;
{movie.title} ({movie.year})
&amp;lt;/Text&amp;gt;
&amp;lt;Text style={styles.director}&amp;gt;Réalisateur(s) : {movie.director}&amp;lt;/Text&amp;gt;
&amp;lt;Text style={styles.description}&amp;gt;{movie.shortDescription}&amp;lt;/Text&amp;gt;
&amp;lt;Image style={styles.image} source={{ uri: imageUrl }}&amp;gt;&amp;lt;/Image&amp;gt;
&amp;lt;/View&amp;gt;
);
}
}
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>.NET</title><link>https://www.bpesquet.fr/slides/dotnet/</link><pubDate>Tue, 21 Sep 2021 14:06:30 +0200</pubDate><guid>https://www.bpesquet.fr/slides/dotnet/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>.NET en bref&lt;/li>
&lt;li>La ligne de commande .NET&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="net-en-bref">.NET en bref&lt;/h2>
&lt;hr>
&lt;h3 id="aux-origines-de-net">Aux origines de .NET&lt;/h3>
&lt;ul>
&lt;li>Plate-forme de développement d&amp;rsquo;applications créée par Microsoft en 2002.&lt;/li>
&lt;li>Réponse à la domination du langage Java (multi-plateformes).&lt;/li>
&lt;li>Inclut plusieurs langages de programmation : C#, VB.NET, F#, PowerShell&amp;hellip;&lt;/li>
&lt;li>Uniquement disponible sous Windows.&lt;/li>
&lt;li>Licence propriétaire.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/.NET_Framework">&lt;img src="images/dotnet_stack.png" alt="Pile .NET">&lt;/a>&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="architecture-technique-de-net">Architecture technique de .NET&lt;/h3>
&lt;ul>
&lt;li>Une application .NET s&amp;rsquo;exécute dans un environnement contrôlé appelé &lt;strong>CLR&lt;/strong> (&lt;em>Common Language Runtime&lt;/em>).&lt;/li>
&lt;li>La compilation du code source produit un résultat indépendant du système d&amp;rsquo;exploitation, conformément à un standard nommé &lt;strong>CLI&lt;/strong> (&lt;em>Common Language Infrastructure&lt;/em>).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Common_Language_Infrastructure">&lt;img src="images/dotnet_cli_clr.png" alt="CLI et CLR">&lt;/a>
&lt;/section>
&lt;hr>
&lt;h3 id="net-framework-et-net-core">.NET Framework et .NET Core&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.mono-project.com/docs/about-mono/history/">2004&lt;/a> : lr projet &lt;strong>Mono&lt;/strong>, indépendant de Microsoft, débute le portage de .NET vers Linux.&lt;/li>
&lt;li>&lt;a href="https://devblogs.microsoft.com/dotnet/net-core-is-open-source/">2014&lt;/a> : Microsoft publie &lt;strong>.NET Core&lt;/strong>, la première version open source et multi-plateformes de .NET. La version WIndows-only de .NET est renommée &lt;strong>.NET Framework&lt;/strong>.&lt;/li>
&lt;li>&lt;a href="https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/">2019&lt;/a> : la nouvelle version de .NET Core est renommée &lt;strong>.NET&lt;/strong>, et .NET Framework passe en mode maintenance.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://devblogs.microsoft.com/dotnet/introducing-net-5/">&lt;img src="images/dotnet5_platform.png" alt=".NET 5">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="la-ligne-de-commande-net">La ligne de commande .NET&lt;/h2>
&lt;hr>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>.NET CLI&lt;/strong> (&lt;em>Command Line Interface&lt;/em>) permet d&amp;rsquo;interagir avec .NET depuis un terminal.&lt;/li>
&lt;li>Nécessite que .NET soit installé sur la machine.&lt;/li>
&lt;li>Syntaxe : &lt;code>dotnet &amp;lt;commande&amp;gt; &amp;lt;options&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="création-dune-application">Création d&amp;rsquo;une application&lt;/h3>
&lt;p>&lt;code>&amp;gt; dotnet new &amp;lt;template&amp;gt; -o &amp;lt;output directory&amp;gt;&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Type d&amp;rsquo;application&lt;/th>
&lt;th>Template&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Console&lt;/td>
&lt;td>&lt;code>console&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bibliothèque de classes&lt;/td>
&lt;td>&lt;code>classlib&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (vide)&lt;/td>
&lt;td>&lt;code>web&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (API)&lt;/td>
&lt;td>&lt;code>webapi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (MVC)&lt;/td>
&lt;td>&lt;code>mvc&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="ajout-de-packages">Ajout de packages&lt;/h3>
&lt;p>&lt;code>&amp;gt; dotnet add package &amp;lt;name&amp;gt;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Utilise &lt;a href="https://www.nuget.org/">NuGet&lt;/a> en arrière-plan.&lt;/li>
&lt;li>Vérifie la compatibilité du package à installer avec le projet.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="listage-des-packages-installés">Listage des packages installés&lt;/h3>
&lt;p>&lt;code>&amp;gt; dotnet list package&lt;/code>&lt;/p>
&lt;hr>
&lt;h3 id="lancement-dune-application">Lancement d&amp;rsquo;une application&lt;/h3>
&lt;p>&lt;code>&amp;gt; dotnet run&lt;/code>&lt;/p>
&lt;p>Si nécessaire, effectue la restauration des dépendances du projet (équivalent de &lt;code>dotnet restore&lt;/code>).&lt;/p>
&lt;hr>
&lt;h3 id="autres-possibilités">Autres possibilités&lt;/h3>
&lt;ul>
&lt;li>Nettoyage, test, publication, gestion des packages installés, etc.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/">Plus d&amp;rsquo;informations&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>ASP.NET Core</title><link>https://www.bpesquet.fr/slides/asp-net-core/</link><pubDate>Tue, 21 Sep 2021 09:40:11 +0200</pubDate><guid>https://www.bpesquet.fr/slides/asp-net-core/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>Qu&amp;rsquo;est-ce qu&amp;rsquo;ASP.NET Core ?&lt;/li>
&lt;li>Le framework ASP.NET Core MVC&lt;/li>
&lt;li>Création d&amp;rsquo;API web&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="quest-ce-quaspnet-core-">Qu&amp;rsquo;est-ce qu&amp;rsquo;ASP.NET Core ?&lt;/h2>
&lt;hr>
&lt;h3 id="histoire-daspnet-core">Histoire d&amp;rsquo;ASP.NET Core&lt;/h3>
&lt;ul>
&lt;li>A l&amp;rsquo;origine, .NET (Framework) incluait une technologie de création de pages web dynamiques nommée &lt;strong>ASP.NET&lt;/strong> (&lt;em>Active Server Pages&lt;/em>).&lt;/li>
&lt;li>&lt;strong>ASP.NET Core&lt;/strong> est une réécriture d&amp;rsquo;ASP.NET basée sur .NET (Core).&lt;/li>
&lt;li>Standard actuel pour le développement web sous .NET.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="points-clé-daspnet-core">Points-clé d&amp;rsquo;ASP.NET Core&lt;/h3>
&lt;ul>
&lt;li>Permet de créer des applications web et des services web (API) utilisés comme &lt;em>backends&lt;/em> par des clients riches ou des applications mobiles.&lt;/li>
&lt;li>Léger, moderne et modulaire.&lt;/li>
&lt;li>Inclut des technologies facilitant la gestion des pages dynamiques, des appels temps réel, des tests, etc.&lt;/li>
&lt;li>Déployable sur plusieurs serveurs web : IIS, Apache, nginx, etc.&lt;/li>
&lt;li>Multi-plateformes et &lt;a href="https://github.com/dotnet/aspnetcore">open source&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="le-framework-aspnet-core-mvc">Le framework ASP.NET Core MVC&lt;/h2>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="rappel--le-fonctionnement-du-web">Rappel : le fonctionnement du web&lt;/h3>
&lt;p>Le web est basé sur un modèle &lt;strong>client/serveur&lt;/strong> :&lt;/p>
&lt;ul>
&lt;li>Le client (navigateur, application mobile, robot d&amp;rsquo;indexation, etc) envoie une demande (&lt;strong>requête&lt;/strong>) au serveur.&lt;/li>
&lt;li>Le serveur prépare sa &lt;strong>réponse&lt;/strong> à la requête du client, puis la lui renvoie.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/web_request_response.png" alt="Modèle requête/réponse">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="le-protocole-http">Le protocole HTTP&lt;/h3>
&lt;ul>
&lt;li>&lt;em>HyperText Transfer Protocol&lt;/em>.&lt;/li>
&lt;li>Socle technique du web.&lt;/li>
&lt;li>Equivalent sécurisé : &lt;strong>HTTPS&lt;/strong>.&lt;/li>
&lt;li>Basé sur des &lt;strong>commandes&lt;/strong> textuelles exprimant les différentes actions possibles : &lt;em>GET&lt;/em>, &lt;em>PUT&lt;/em>, &lt;em>POST&lt;/em>, etc).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="larchitecture-mvc">L&amp;rsquo;architecture MVC&lt;/h3>
&lt;ul>
&lt;li>&lt;em>Model-View-Controller&lt;/em> (&lt;em>Modèle-Vue-Contrôleur&lt;/em>).&lt;/li>
&lt;li>Décomposition d’une application en trois grandes parties :
&lt;ul>
&lt;li>&lt;strong>Modèle&lt;/strong> : accès aux données et logique métier (&lt;em>business logic&lt;/em>).&lt;/li>
&lt;li>&lt;strong>Vue&lt;/strong> : affichage et interactions avec l’utilisateur.&lt;/li>
&lt;li>&lt;strong>Contrôleur&lt;/strong> : dynamique de l’application, lien entre Modèle et Vue.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Application du principe de séparation des responsabilités.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="mvc--un-peu-dhistoire">MVC : un peu d&amp;rsquo;histoire&lt;/h3>
&lt;ul>
&lt;li>Apparu à la fin des années 1970 pour le langage OO &lt;strong>Smalltalk&lt;/strong>. Objectif : séparer le code de l’IHM de la logique applicative.&lt;/li>
&lt;li>Appliqué depuis dans de très nombreux contextes et langages :
&lt;ul>
&lt;li>web côté serveur : frameworks Symfony (PHP), Django (Python), Rails (Ruby), etc.&lt;/li>
&lt;li>web côté client : frameworks Angular, Ember (JavaScript), etc.&lt;/li>
&lt;li>desktop : bibliothèque Swing (Java), etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://symfony.com/doc/current/index.html">&lt;img src="images/symfony_mvc.png" alt="Dynamique d&amp;rsquo;un serveur web MVC">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="avantages-et-inconvénients">Avantages et inconvénients&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Avantages :&lt;/p>
&lt;ul>
&lt;li>Clarification de l’architecture.&lt;/li>
&lt;li>Séparation nette des responsabilités =&amp;gt; couplage faible, cohésion forte, maintenance et évolutions facilitées.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Inconvénients :&lt;/p>
&lt;ul>
&lt;li>Complexification de l’architecture.&lt;/li>
&lt;li>Rigidité.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="aspnet-core-mvc">ASP.NET Core MVC&lt;/h3>
&lt;ul>
&lt;li>Framework de création d&amp;rsquo;applications web basées sur l&amp;rsquo;architecture MVC.&lt;/li>
&lt;li>Implémente de nombreux services et bonnes pratiques, parmi lesquels :
&lt;ul>
&lt;li>Routage des requêtes entrantes.&lt;/li>
&lt;li>Gestion des pages dynamiques.&lt;/li>
&lt;li>Authentification.&lt;/li>
&lt;li>Injection de dépendance.&lt;/li>
&lt;li>Tests.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="structure-dune-application-aspnet-core-mvc">Structure d&amp;rsquo;une application ASP.NET Core MVC&lt;/h3>
&lt;p>&lt;img src="images/aspnetcoremvc_structure.png" alt="Structure d&amp;rsquo;une application ASP.NET Core MVC">&lt;/p>
&lt;hr>
&lt;h3 id="le-fichier-startupcs">Le fichier Startup.cs&lt;/h3>
&lt;p>Contient la classe &lt;code>Startup&lt;/code> qui permet :&lt;/p>
&lt;ul>
&lt;li>la configuration des services utilisés par l&amp;rsquo;application ;&lt;/li>
&lt;li>la définition du &lt;em>pipeline&lt;/em> de gestion des requêtes HTTP entrantes.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-classe-startup">Exemple de classe Startup&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Startup
{
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use this method to add services to the container.
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> ConfigureServices(IServiceCollection services)
{
services.AddControllersWithViews();
}
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use this method to configure the HTTP request pipeline.
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Configure(IApplicationBuilder app, IWebHostEnvironment env)
{
app.UseHttpsRedirection();
app.UseStaticFiles();
app.UseRouting();
app.UseAuthorization();
app.UseEndpoints(endpoints =&amp;gt;
{
endpoints.MapDefaultControllerRoute();
});
}
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="routage-des-requêtes">Routage des requêtes&lt;/h3>
&lt;ul>
&lt;li>Associe le code à exécuter aux requêtes HTTP entrantes.&lt;/li>
&lt;li>Permet à l&amp;rsquo;application web d&amp;rsquo;utiliser des URL propres et &lt;em>SEO-friendly&lt;/em>, plutôt que des noms de fichiers.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing?view=aspnetcore-5.0">Plus d&amp;rsquo;informations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="routage-par-convention">Routage par convention&lt;/h3>
&lt;ul>
&lt;li>Permet de définir globalement la correspondance entre le format de l&amp;rsquo;URL et la méthode d&amp;rsquo;action d&amp;rsquo;un contrôleur à exécuter.&lt;/li>
&lt;li>Format par défaut : &lt;code>/[Controller]/[ActionName]/[Parameters]&lt;/code>.&lt;/li>
&lt;li>Exemple : &lt;code>https://myapp/Student/Details/Code=137&lt;/code> appelle la méthode &lt;code>Details&lt;/code> du contrôleur &lt;code>StudentController&lt;/code>, en lui passant un paramètre nommé &lt;code>Code&lt;/code> ayant la valeur 137.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="configuration-du-routage-par-convention-dans-startup">Configuration du routage par convention dans Startup&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Configure(IApplicationBuilder app, IWebHostEnvironment env)
{
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> app.UseEndpoints(endpoints =&amp;gt;
{
endpoints.MapControllerRoute(
name: &lt;span style="color:#0086d2">&amp;#34;default&amp;#34;&lt;/span>,
pattern: &lt;span style="color:#0086d2">&amp;#34;{controller=Home}/{action=Index}/{id?}&amp;#34;&lt;/span>);
});
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Home&lt;/code>, &lt;code>Index&lt;/code> et &lt;code>id&lt;/code> sont resp. les noms par défaut du contrôleur, de l&amp;rsquo;action et du paramètre (optionnel).&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="auto-certification-de-lapplication">Auto-certification de l&amp;rsquo;application&lt;/h3>
&lt;p>&lt;code>&amp;gt; dotnet dev-certs https --trust&lt;/code>&lt;/p>
&lt;p>Nécessaire pour lancer l&amp;rsquo;application localement avec HTTPS.&lt;/p>
&lt;hr>
&lt;h3 id="recompilation-dynamique">Recompilation dynamique&lt;/h3>
&lt;p>&lt;code>&amp;gt; dotnet add package Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> ConfigureServices(IServiceCollection services)
{
services.AddControllersWithViews().AddRazorRuntimeCompilation();
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Permet de modifier le code à la volée sans devoir relancer l&amp;rsquo;exécution (&lt;a href="https://stackoverflow.com/a/57637903">source&lt;/a>).&lt;/p></description></item><item><title>C# : rappels et compléments</title><link>https://www.bpesquet.fr/slides/csharp/</link><pubDate>Thu, 16 Sep 2021 11:15:17 +0200</pubDate><guid>https://www.bpesquet.fr/slides/csharp/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>Rappels sur la POO&lt;/li>
&lt;li>Gestion des objets en mémoire&lt;/li>
&lt;li>Gestion des exceptions&lt;/li>
&lt;li>Possibilités syntaxiques récentes&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="rappels-sur-la-poo">Rappels sur la POO&lt;/h2>
&lt;hr>
&lt;h3 id="la-poo-en-bref">La POO en bref&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Objet&lt;/strong> : entité qui modélise (représente) un élément du domaine étudié.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Objet = état + actions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Objet != &lt;strong>classe&lt;/strong> :&lt;/p>
&lt;ul>
&lt;li>Classe : modèle d’objet (type).&lt;/li>
&lt;li>Objet : exemplaire concret, &lt;strong>instance&lt;/strong> d’une classe.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>POO&lt;/strong> : paradigme d&amp;rsquo;écriture de logiciels sous forme d’objets en interaction&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="représentation-graphique-dune-classe">Représentation graphique d&amp;rsquo;une classe&lt;/h3>
&lt;p>Le standard : diagramme de classes &lt;strong>UML&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="images/uml_class_diagram.png" alt="Exemple de diagramme UML">&lt;/p>
&lt;hr>
&lt;h3 id="notion-de-propriété-en-c">Notion de propriété en C#&lt;/h3>
&lt;ul>
&lt;li>Propriété au sens de la majorité des langages à objets = &lt;strong>attribut&lt;/strong> ou &lt;strong>champ&lt;/strong>.&lt;/li>
&lt;li>Propriété au sens du C# = &lt;strong>accesseur&lt;/strong> vers un attribut.&lt;/li>
&lt;li>Les propriétés permettent de concilier accès aux données de l’objet et &lt;strong>encapsulation&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="propriété-avec-attribut-explicite">Propriété avec attribut explicite&lt;/h3>
&lt;p>Déclaration explicite de l’attribut (le plus souvent &lt;strong>privé&lt;/strong>).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c#" data-lang="c#">&lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> titulaire;
&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Titulaire {
&lt;span style="color:#fb660a;font-weight:bold">get&lt;/span> { &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> titulaire; }
&lt;span style="color:#fb660a;font-weight:bold">set&lt;/span> { titulaire = &lt;span style="color:#fb660a;font-weight:bold">value&lt;/span>; }
}
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>monCompte.Titulaire = &lt;span style="color:#0086d2">&amp;#34;Marco&amp;#34;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Avantage : possibilité de contrôles dans les accesseurs (validation de la novuelle valeur, etc).&lt;/p>
&lt;hr>
&lt;h3 id="propriété-auto-implémentée">Propriété auto-implémentée&lt;/h3>
&lt;p>Création implicite de l’attribut par le langage.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Titulaire { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>monCompte.Titulaire = &lt;span style="color:#0086d2">&amp;#34;Marco&amp;#34;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Avantage : concision.&lt;/li>
&lt;li>Bien adaptée aux cas simples (sans besoin de logique).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="gestion-des-objets-en-mémoire">Gestion des objets en mémoire&lt;/h2>
&lt;hr>
&lt;h3 id="classe-dexemple">Classe d&amp;rsquo;exemple&lt;/h3>
&lt;p>&lt;img src="images/example_class.png" alt="Classe d&amp;rsquo;exemple">&lt;/p>
&lt;hr>
&lt;h3 id="affectation-entre-entiers">Affectation entre entiers&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre1;
nombre1 = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre2 = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
nombre2 = nombre1;
nombre1 = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;nombre1 = &amp;#34;&lt;/span> + nombre1); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 10
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;nombre2 = &amp;#34;&lt;/span> + nombre2); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 5
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="affectation-entre-objets">Affectation entre objets&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">Cercle cercle1;
cercle1 = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Cercle(&lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>);
&lt;p>Cercle cercle2 = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Cercle(&lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>);
cercle2 = cercle1;&lt;/p>
&lt;p>cercle1.Rayon = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;&lt;/p>
&lt;p>Console.WriteLine(&lt;span style="color:#0086d2">&amp;quot;cercle1.Rayon = &amp;quot;&lt;/span> + cercle1.Rayon); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 10
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;quot;cercle2.Rayon = &amp;quot;&lt;/span> + cercle2.Rayon); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>&lt;/p>
&lt;p>&lt;img src="images/object_result.png" alt="Réssultat de l&amp;rsquo;exécution">&lt;/p>
&lt;p>&lt;img src="images/omg.png" alt="OMG">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="types-valeur">Types valeur&lt;/h3>
&lt;ul>
&lt;li>Type pour lequel la valeur est directement stockée dans la variable.&lt;/li>
&lt;li>Types de bases C# : &lt;code>int&lt;/code>, &lt;code>float&lt;/code>, &lt;code>double&lt;/code>&amp;hellip;&lt;/li>
&lt;li>Création d’une variable =&amp;gt; réservation d’une zone mémoire pour stocker sa valeur.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/value_types.png" alt="Exemple avec types valeur">
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="types-reference">Types référence&lt;/h3>
&lt;ul>
&lt;li>Type pour lequel l&amp;rsquo;instanciation d’un exemplaire déclenche la réservation d’une zone mémoire pour ses données, mais la &amp;ldquo;valeur&amp;rdquo; de l’exemplaire est une &lt;strong>référence&lt;/strong> vers cette zone.&lt;/li>
&lt;li>Exemples : objets et tableaux.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/reference_types.png" alt="Exemple avec types référence">
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="types-référence-et-affectation">Types référence et affectation&lt;/h3>
&lt;ul>
&lt;li>La valeur de la variable source (une référence) est copiée dans la variable cible.&lt;/li>
&lt;li>Les deux variables &lt;em>pointent&lt;/em> vers la même zone mémoire&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/reference_types_assignment.png" alt="Diagramme d&amp;rsquo;exécution">
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="passage-dun-type-valeur-en-parametre">Passage d’un type valeur en paramètre&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Main(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>[] args) {
&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Avant l&amp;#39;appel, nombre = &amp;#34;&lt;/span> + nombre); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 5
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> Augmenter(nombre);
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Après l&amp;#39;appel, nombre = &amp;#34;&lt;/span> + nombre); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Augmenter(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> unNombre) {
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Avant l&amp;#39;augmentation, unNombre = &amp;#34;&lt;/span> + unNombre);
unNombre = unNombre + &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Après l&amp;#39;augmentation, unNombre = &amp;#34;&lt;/span> + unNombre);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="résultat-de-lexécution">Résultat de l&amp;rsquo;exécution&lt;/h3>
&lt;p>&lt;img src="images/value_types_parameter_passing.png" alt="Résultat de l&amp;rsquo;exécution">&lt;/p>
&lt;ul>
&lt;li>La valeur de l’argument (un nombre entier) est copiée dans le paramètre.&lt;/li>
&lt;li>Argument et paramètre correspondent à des zones mémoire différentes.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/value_types_parameter_passing_diagram.png" alt="Diagramme d&amp;rsquo;exécution">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="passage-dun-objet-en-parametre">Passage d’un objet en paramètre&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Main(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>[] args) {
Cercle cercle = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Cercle(&lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>);
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Avant l&amp;#39;appel, cercle.Rayon = &amp;#34;&lt;/span> + cercle.Rayon); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 5
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> AugmenterRayon(cercle);
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Après l&amp;#39;appel, cercle.Rayon = &amp;#34;&lt;/span> + cercle.Rayon); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> AugmenterRayon(Cercle unCercle) {
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Avant l&amp;#39;augmentation, unCercle.Rayon = &amp;#34;&lt;/span> + unCercle.Rayon);
unCercle.Rayon = unCercle.Rayon + &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Après l&amp;#39;augmentation, unCercle.Rayon = &amp;#34;&lt;/span> + unCercle.Rayon);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="résultat-de-lexécution">Résultat de l&amp;rsquo;exécution&lt;/h3>
&lt;p>&lt;img src="images/object_parameter_passing.png" alt="Résultat de l&amp;rsquo;exécution">&lt;/p>
&lt;ul>
&lt;li>La valeur de l’argument (une &lt;strong>référence&lt;/strong>) est copiée dans le paramètre.&lt;/li>
&lt;li>Argument et paramètre pointent vers la même zone mémoire.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/object_parameter_passing_diagram.png" alt="Diagramme d&amp;rsquo;exécution">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="mode-de-passage-des-parametres-en-c">Mode de passage des paramètres en C#&lt;/h3>
&lt;ul>
&lt;li>Par défaut, &lt;strong>tous les paramètres sont passés par valeur&lt;/strong>.&lt;/li>
&lt;li>Types valeur : valeur copiée de l’argument vers le paramètre =&amp;gt; zones mémoire distinctes.&lt;/li>
&lt;li>Types référence : référence copiée de l’argument vers le paramètre =&amp;gt; même zone mémoire.&lt;/li>
&lt;li>Possibilité de modifier ce comportement avec les mots-clés &lt;code>ref&lt;/code> et &lt;code>out&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="gestion-des-exceptions">Gestion des exceptions&lt;/h2>
&lt;hr>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Exception&lt;/strong> : évènement qui apparaît pendant le déroulement d&amp;rsquo;un programme et qui empêche la poursuite normale de son exécution
&lt;ul>
&lt;li>Exemples : BD inaccessible, fichier non trouvé, bug interne…&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Gestion des exceptions : technique de gestion des erreurs dans un programme&lt;/li>
&lt;li>Avantage : séparation du code applicatif du code de gestion des erreurs&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="les-exceptions--syntaxe">Les exceptions : syntaxe&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// code susceptible de lever des exceptions
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (Exception e) {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// code de gestion de l’exception apparue
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;span style="color:#fb660a;font-weight:bold">finally&lt;/span> {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// code exécuté systématiquement
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// levée d’une nouvelle exception
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Exception(&lt;span style="color:#0086d2">&amp;#34;Message d’erreur&amp;#34;&lt;/span>);
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="les-exceptions--dynamique">Les exceptions : dynamique&lt;/h3>
&lt;ul>
&lt;li>Une exception levée remonte la chaîne des appels dans l&amp;rsquo;ordre inverse.&lt;/li>
&lt;li>Issues possibles :
&lt;ul>
&lt;li>interception dans un bloc &lt;code>catch&lt;/code>.&lt;/li>
&lt;li>arrêt brutal du programme.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/exceptionx_dynamic.png" alt="Dynamique des exceptions">
&lt;/section>
&lt;hr>
&lt;h3 id="la-hiérarchie-des-exceptions">La hiérarchie des exceptions&lt;/h3>
&lt;p>&lt;img src="images/exceptions_hierarchy.png" alt="Hiérarchie des exceptions">&lt;/p>
&lt;hr>
&lt;h3 id="création-de-classes-dexceptions">Création de classes d&amp;rsquo;exceptions&lt;/h3>
&lt;p>Potentiellement utile pour distinguer différentes catégories d&amp;rsquo;erreur, avec des données spécifiques.&lt;/p>
&lt;p>&lt;img src="images/exceptions_classes.png" alt="Classes d&amp;rsquo;exceptions">&lt;/p>
&lt;hr>
&lt;h3 id="exceptions-et-bonnes-pratiques-13">Exceptions et bonnes pratiques (1/3)&lt;/h3>
&lt;ul>
&lt;li>Lever une exception uniquement pour signaler qu’une exécution normale n’est plus possible.&lt;/li>
&lt;li>Ne pas utiliser les exceptions pour des situations non exceptionnelles (succès d’une recherche, fin d’une itération, etc).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>;
trouve = &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>;
&lt;span style="color:#fb660a;font-weight:bold">while&lt;/span> (!trouve) {
i++;
&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (i == &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>)
&lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Exception(&lt;span style="color:#0086d2">&amp;#34;Fin de la boucle&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Antipattern
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="exceptions-et-bonnes-pratiques-23">Exceptions et bonnes pratiques (2/3)&lt;/h3>
&lt;ul>
&lt;li>Intercepter les exceptions uniquement si un traitement approprié est possible (message d’erreur, nouvelle tentative, etc)&lt;/li>
&lt;li>Sinon, la laisser remonter la chaîne des appels vers un meilleur endroit.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (Exception e) {
&lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span> e; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Antipattern : bloc inutile
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (Exception) {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Antipattern : exception &amp;#34;avalée&amp;#34;
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="exceptions-et-bonnes-pratiques-33">Exceptions et bonnes pratiques (3/3)&lt;/h3>
&lt;ul>
&lt;li>Bien réfléchir avant de créer ses propres classes d’exception.
&lt;ul>
&lt;li>En deça d’une certaine complexité, utiliser la classe standard &lt;code>Exception&lt;/code> suffit souvent.&lt;/li>
&lt;li>Toujours inclure le mot &lt;em>Exception&lt;/em> dans le nom de la classe.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Code de gestion des erreurs &lt;code>&amp;lt;&amp;lt;&lt;/code> code applicatif.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="possibilités-syntaxiques-récentes">Possibilités syntaxiques récentes&lt;/h2>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="variables-sans-type-explicite">Variables sans type explicite&lt;/h3>
&lt;p>Le mot-clé &lt;code>var&lt;/code> permet de déclarer des variables &lt;em>implicitement typées&lt;/em>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Typage explicite
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Typage implicite
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Usage possible 1 : simplification du code de création d&amp;rsquo;objets (pas de répétition du type)&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> l = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> List&amp;lt;&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>&amp;gt;();
l.Add(&lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>);
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>Usage possible 2 : non-nécessité de créer un type spécifique pour le résultat d&amp;rsquo;une opération.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// var est nécessaire car la clause SELECT définit un type anonyme
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> custQuery = &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> cust &lt;span style="color:#fb660a;font-weight:bold">in&lt;/span> customers
&lt;span style="color:#fb660a;font-weight:bold">where&lt;/span> cust.City == &lt;span style="color:#0086d2">&amp;#34;Bordeaux&amp;#34;&lt;/span>
&lt;span style="color:#fb660a;font-weight:bold">select&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> { cust.Name, cust.Phone };
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Var est nécessaire car chaque élément de la collection est un type anonyme
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">foreach&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> item &lt;span style="color:#fb660a;font-weight:bold">in&lt;/span> custQuery)
{
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Nom={0}, Téléphone={1}&amp;#34;&lt;/span>, item.Name, item.Phone);
}
&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="chaînes-de-caractères-interpolées">Chaînes de caractères interpolées&lt;/h3>
&lt;p>Placé juste avant le début d&amp;rsquo;une chaîne, le caractère &lt;code>$&lt;/code> permet d&amp;rsquo;y insérer des expressions entre accolades &lt;code>{...}&lt;/code> qui seront évaluées pour produire la valeur de la chaîne.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> name = &lt;span style="color:#0086d2">&amp;#34;Clément&amp;#34;&lt;/span>;
&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> date = DateTime.Now;
Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Hello, {0}! Today is {1}&amp;#34;&lt;/span>, name, date.DayOfWeek);
Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Hello, {name}! Today is {date.DayOfWeek}&amp;#34;&lt;/span>);
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ces deux lignes produisent un résultat identique, similaire à :
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Clément! Today is Monday&amp;#34;
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="types-valeur-nullables">Types valeur nullables&lt;/h3>
&lt;p>Un type valeur auquel on accole le caractère &lt;code>?&lt;/code> peut stocker la valeur &lt;code>null&lt;/code> en plus de sa plage de valeurs habituelle.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Erreur: ce type de peut stocker que des valeurs entières
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> b = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> c = b ?? -&lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Conversion vers le type int
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Les types nullables facilitent la gestion des valeurs indéfinies (exemple : absence de valeur pour une colonne dans une BD).&lt;/p>
&lt;hr>
&lt;h3 id="annotations">Annotations&lt;/h3>
&lt;p>Les &lt;strong>annotations&lt;/strong>, également appelées &lt;em>attributs&lt;/em>, permettent d&amp;rsquo;ajouter des &lt;strong>métadonnées&lt;/strong> (des informations supplémentaires) à certains éléments du code : types, méthodes, propriétés&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#ff0086;font-weight:bold">[Serializable]&lt;/span>
&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> ClasseExemple
{
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Les instances de cette classe sont sérialisables
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Cette propriété est associée à un type BD spécifique
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[DataType(DataType.Date)]&lt;/span>
&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DateTime ReleaseDate { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Maintained resources</title><link>https://www.bpesquet.fr/teaching/maintained/</link><pubDate>Fri, 14 May 2021 15:21:48 +0200</pubDate><guid>https://www.bpesquet.fr/teaching/maintained/</guid><description>&lt;p>The following resources are being used in some of my courses. As such, they are maintained on a (somewhat) regular basis and should be reasonably up-to-date.&lt;/p>
&lt;h2 id="artificial-intelligence">Artificial intelligence&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/deconstructing-ai/" title="Deconstructing AI">Deconstructing AI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bpesquet.github.io/mlhandbook/">Machine Learning Handbook&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/bpesquet/pyfit">pyfit&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="mobile-development">Mobile development&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/react-native-intro/" title="Introduction à React Native">React Native: introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/react-native-ui/" title="React Native : gestion de l'UI">React Native : gestion de l&amp;rsquo;UI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/react-native-state/" title="React Native : gestion de l'état">React Native : gestion de l&amp;rsquo;état&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/react-native-api/" title="React Native : utilisation d'API web">React Native : utilisation d&amp;rsquo;API web&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="programming">Programming&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ensc.gitbook.io/programmation-objet-csharp/">Programmation orientée objet en C#&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/csharp/" title="C# : rappels et compléments">C# : rappels et compléments&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/javascript/" title="Le langage JavaScript">Le langage JavaScript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/thejsway/thejsway">The JavaScript Way&lt;/a> | &lt;a href="https://github.com/thejsway/thejsway_fr">La voie du JavaScript&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="software-engineering">Software engineering&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://ensc.gitbook.io/genie-logiciel/">Génie logiciel&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/dotnet/" title=".NET">.NET&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/asp-net-core/" title="ASP.NET Core">ASP.NET Core&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ensc.gitbook.io/programmation-evenementielle-winforms/">Programmation évènementielle avec les WinForms&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/bpesquet/winforms-architecture-patterns">WinForms architecture patterns&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="virtual-worlds">Virtual worlds&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bpesquet.fr/slides/unity-intro/" title="Introduction à Unity">Introduction à Unity&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Outdated material</title><link>https://www.bpesquet.fr/teaching/outdated/</link><pubDate>Tue, 13 Oct 2020 16:45:57 +0200</pubDate><guid>https://www.bpesquet.fr/teaching/outdated/</guid><description>&lt;p>The following resources, authored several years ago for courses I no longer teach, are not maintained anymore. While outdated, they still might be useful in some contexts.&lt;/p>
&lt;h2 id="web-development">Web development&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://openclassrooms.com/fr/courses/2984401-apprenez-a-coder-avec-javascript">Apprenez à coder avec JavaScript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bpesquet.gitbooks.io/guide-developpeur-php/">Guide du développeur PHP&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://openclassrooms.com/fr/courses/2560666-evoluez-vers-une-architecture-php-professionnelle-avec-silex">Evoluez vers une architecture PHP professionnelle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bpesquet.developpez.com/tutoriels/php/evoluer-architecture-mvc/">Evoluez vers une architecture MVC en PHP&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="database-management">Database management&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bpesquet.fr/pub/cours_sql.zip">Le langage SQL&lt;/a> (PDF archive)&lt;/li>
&lt;li>&lt;a href="https://www.bpesquet.fr/pub/cours_sgbd.zip">Les bases de données&lt;/a> (PDF archive)&lt;/li>
&lt;/ul>
&lt;h2 id="networking">Networking&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.bpesquet.fr/pub/cours_reseaux.zip">Les réseaux&lt;/a> (PDF archive)&lt;/li>
&lt;/ul></description></item><item><title>Deconstructing AI</title><link>https://www.bpesquet.fr/slides/deconstructing-ai/</link><pubDate>Mon, 09 Dec 2019 10:47:12 +0100</pubDate><guid>https://www.bpesquet.fr/slides/deconstructing-ai/</guid><description>&lt;h2 id="summary">Summary&lt;/h2>
&lt;ul>
&lt;li>What Is AI, Actually?&lt;/li>
&lt;li>How Do Machines Learn?&lt;/li>
&lt;li>Should We Be Scared Of AI?&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="what-is-ai-actually">What Is AI, Actually?&lt;/h2>
&lt;hr>
&lt;h2 id="the-original-ambition-of-ai">The original ambition of AI&lt;/h2>
&lt;blockquote>
&lt;p>&amp;ldquo;AI is the science and engineering of making intelligent machines.&amp;rdquo; (&lt;a href="https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)">John McCarthy&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&amp;ldquo;Every aspect of learning or any other feature of intelligence can in principle be so precisely described that a machine can be made to simulate it.&amp;rdquo; (&lt;a href="https://en.wikipedia.org/wiki/Dartmouth_workshop">Dartmouth Workshop&lt;/a>, 1956)&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&amp;ldquo;AI is the science of making machines do things that would require intelligence if done by men.&amp;rdquo; (&lt;a href="https://en.wikipedia.org/wiki/Marvin_Minsky">Marvin Minsky&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="a-technical-definition-of-ai">A technical definition of AI&lt;/h2>
&lt;blockquote>
&lt;p>&amp;ldquo;AI refers to systems that &lt;strong>display&lt;/strong> intelligent behavior by analysing their &lt;strong>environment&lt;/strong> and taking &lt;strong>actions&lt;/strong> - with some degree of &lt;strong>autonomy&lt;/strong> - to achieve specific &lt;strong>goals&lt;/strong>.&amp;rdquo; (&lt;a href="https://ec.europa.eu/newsroom/dae/document.cfm?doc_id=51625">EC, 2018&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;p>AI systems can be either:&lt;/p>
&lt;ul>
&lt;li>Purely &lt;strong>software&lt;/strong>-based (e.g. voice assistants, search engines, face recognition systems).&lt;/li>
&lt;li>Embedded in &lt;strong>hardware&lt;/strong> devices (e.g. robots, autonomous cars, drones).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="main-areas-of-research">Main areas of research&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Problem solving&lt;/strong> (e.g. search algorithms, constraint solving).&lt;/li>
&lt;li>&lt;strong>Reasoning&lt;/strong> and &lt;strong>decision making&lt;/strong> (e.g. logic, knowledge representation).&lt;/li>
&lt;li>&lt;strong>Machine Learning&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Real-world interactions&lt;/strong> (e.g. computer vision, natural language understanding, robotics).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="ai-is-a-moving-target">AI is a moving target&lt;/h2>
&lt;p>As soon as AI successfully solves a problem, the problem is no longer considered a part of AI.&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;&lt;a href="https://en.wikipedia.org/wiki/AI_effect">AI is whatever hasn&amp;rsquo;t been done yet&lt;/a>.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="the-tumultuous-history-of-ai">The tumultuous history of AI&lt;/h2>
&lt;p>&lt;a href="https://www.slideshare.net/dlavenda/ai-and-productivity">&lt;img src="images/ai_timeline.png" alt="The AI timeline">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="ai-is-a-highly-interdisciplinary-field">AI is a highly interdisciplinary field&lt;/h2>
&lt;p>&lt;img src="images/ai_fields.png" alt="AI fields">&lt;/p>
&lt;hr>
&lt;h2 id="ai-is-a-social-science">AI is a social science&lt;/h2>
&lt;p>AI has many social and societal implications:&lt;/p>
&lt;ul>
&lt;li>Job market transformation.&lt;/li>
&lt;li>Human/machine interactions.&lt;/li>
&lt;li>Trust and acceptability.&lt;/li>
&lt;li>Legal aspects and regulation.&lt;/li>
&lt;li>Fairness.&lt;/li>
&lt;li>Ethical use.&lt;/li>
&lt;li>Personal data.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="ai-comes-in-different-flavours">AI comes in different flavours&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Substitutive intelligence&lt;/strong>: replacement of men by machines.&lt;/li>
&lt;li>&lt;strong>Augmented intelligence&lt;/strong>: human-centered AI for performance augmentation &amp;amp; autonomy enhancement.&lt;/li>
&lt;li>&lt;strong>Hybrid intelligence&lt;/strong>: human-machine collaboration on complex tasks.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="a-broader-definition-of-ai">A broader definition of AI&lt;/h2>
&lt;blockquote>
&lt;p>&amp;ldquo;AI is an &lt;strong>interdisciplinary&lt;/strong> field aiming at &lt;strong>understanding&lt;/strong> and &lt;strong>imitating&lt;/strong> the mechanisms of &lt;strong>cognition&lt;/strong> and &lt;strong>reasoning&lt;/strong>, in order to &lt;strong>assist&lt;/strong> or &lt;strong>substitute&lt;/strong> humans in their activities.&amp;rdquo; (&lt;a href="https://fr.wikipedia.org/wiki/Commission_d%27enrichissement_de_la_langue_fran%C3%A7aise">Commission d&amp;rsquo;enrichissement de la langue française&lt;/a>, 2018)&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="how-do-machines-learn">How Do Machines Learn?&lt;/h2>
&lt;hr>
&lt;h2 id="machine-learning-in-a-nutshell">Machine Learning in a nutshell&lt;/h2>
&lt;p>Set of techniques for giving machines the ability to find &lt;strong>patterns&lt;/strong> and extract &lt;strong>rules&lt;/strong> from data, in order to:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Identify&lt;/strong> or &lt;strong>classify&lt;/strong> elements.&lt;/li>
&lt;li>Detect &lt;strong>tendencies&lt;/strong>.&lt;/li>
&lt;li>Make &lt;strong>predictions&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>As more data is fed into the system, results get better: performance improves with experience.&lt;/p>
&lt;p>a.k.a. &lt;strong>Statistical Learning&lt;/strong>.&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/ai_ml_dl.png" alt="AI/ML/DL Venn diagram">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/machine_learning_tree.png" alt="ML category tree">&lt;/p>
&lt;hr>
&lt;h2 id="a-new-paradigm">A new paradigm&lt;/h2>
&lt;p>&lt;img src="images/programming_paradigm.png" alt="Programming paradigm">&lt;/p>
&lt;p>&lt;img src="images/training_paradigm.png" alt="Training paradigm">&lt;/p>
&lt;hr>
&lt;h2 id="the-machine-learning-workflow">The Machine Learning workflow&lt;/h2>
&lt;ol>
&lt;li>&lt;strong>Frame&lt;/strong> the problem.&lt;/li>
&lt;li>Collect, analyze and prepare &lt;strong>data&lt;/strong>.&lt;/li>
&lt;li>Select and train several &lt;strong>models&lt;/strong> on data.&lt;/li>
&lt;li>&lt;strong>Tune&lt;/strong> the most promising model.&lt;/li>
&lt;li>&lt;strong>Deploy&lt;/strong> the model to production.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="ml-is-not-a-silver-bullet">ML is not a silver bullet!&lt;/h2>
&lt;ul>
&lt;li>Some use cases are a better fit for ML than others:
&lt;ul>
&lt;li>Difficulty to express the actions as rules.&lt;/li>
&lt;li>Data too complex for traditional analytical methods.&lt;/li>
&lt;li>Performance &amp;gt; interpretability.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Data quality is paramount.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="algorithm-1-k-nearest-neighbors">Algorithm #1: K-Nearest Neighbors&lt;/h2>
&lt;p>Prediction is based on the &lt;code>k&lt;/code> nearest neighbors of a data sample.&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm">&lt;img src="images/knn.png" alt="K-NN">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="algorithm-2-decision-trees">Algorithm #2: Decision Trees&lt;/h2>
&lt;p>Build a tree-like structure based on a series of discovered questions on the data.&lt;/p>
&lt;p>&lt;img src="images/dt_iris.png" alt="Decision Tree for Iris dataset">&lt;/p>
&lt;hr>
&lt;h2 id="algorithm-3-neural-networks">Algorithm #3: Neural Networks&lt;/h2>
&lt;ul>
&lt;li>Layers of loosely neuron-inpired computation units.&lt;/li>
&lt;li>Can approximate any continuous function.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/neuron_output.png" alt="Neuron output">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/neural_net.gif" alt="Dog or Cat?">&lt;/p>
&lt;hr>
&lt;h2 id="training-a-network">Training a network&lt;/h2>
&lt;p>&lt;img src="images/training_inference1.png" alt="Training and inference">&lt;/p>
&lt;hr>
&lt;h2 id="the-deep-learning-tsunami">The Deep Learning tsunami&lt;/h2>
&lt;ul>
&lt;li>Multilayered neural networks trained on (generally) vast amounts of data.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf">&lt;img src="images/alexnet.png" alt="AlexNet'12 (simplified)">&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Since 2010, outperformed previous state-of-the-art techniques in many fields (language translation, image and scene recognition&amp;hellip;).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/big_data_universe.png" alt="Big data universe">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/infographic2-intel-past-present.gif" alt="Computer power sheet">&lt;/p>
&lt;hr>
&lt;h2 id="from-labs-to-everyday-life">From labs to everyday life&lt;/h2>
&lt;p>&lt;a href="http://yann.lecun.com/exdb/lenet/">&lt;img src="images/lecun_lenet.gif" alt="LeCun - LeNet">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://twitter.com/mbrennanchina/status/1203687857849716736">&lt;img src="images/china_school_facial_reco.gif" alt="Facial recognition in Chinese elementary school">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="should-we-be-scared-of-ai">Should We Be Scared Of AI?&lt;/h2>
&lt;hr>
&lt;h2 id="ai-is-altering-the-job-market">AI is altering the job market&amp;hellip;&lt;/h2>
&lt;ul>
&lt;li>Machines outperform humans in a growing list of cognitive tasks.&lt;/li>
&lt;li>Repetitive tasks are most exposed (even complex ones, like medical diagnosis or financial analysis).&lt;/li>
&lt;li>Entire industries are on the verge of disruption (example: truck-based transportation, first employer in the U.S.).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="-for-better-or-worse">&amp;hellip; For better or worse&lt;/h2>
&lt;ul>
&lt;li>Net impact of AI on job quantity is unknown.&lt;/li>
&lt;li>Most jobs will be &lt;strong>transformed&lt;/strong>, not replaced by AI.
&lt;ul>
&lt;li>Boring and repetitive stuff will be automated.&lt;/li>
&lt;li>AI will add new insight to help human decision.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Human/machine interactions will multiply.&lt;/li>
&lt;li>Their quality will be a key factor of performance for organizations.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="real-or-fake">Real or fake?&lt;/h2>
&lt;p>&lt;a href="https://twitter.com/goodfellow_ian/status/1084973596236144640">&lt;img src="images/gan_2014_2018.jpg" alt="GAN progress from 2014 to 2018">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="agi-is-very-far-away">AGI is very far away&lt;/h2>
&lt;ul>
&lt;li>Current AI systems are &lt;strong>weak&lt;/strong>: highly tuned to perform well in one task.&lt;/li>
&lt;li>&lt;strong>Artificial General Intelligence&lt;/strong> a.k.a. &lt;strong>strong AI&lt;/strong>, the ability to perform any task as well as a human, is out of reach.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://twitter.com/ylecun/status/1204013978210320384">&lt;img src="images/ylecun_tweet_agi.png" alt="Y. LeCun tweet on AGI, Déc. 2019">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="the-intelligence-debate">The intelligence debate&lt;/h2>
&lt;ul>
&lt;li>Despite their complexity, ML and DL algorithms can be viewed as merely &lt;a href="https://diginomica.com/ai-curve-fitting-not-intelligence">curve fitting&lt;/a>.&lt;/li>
&lt;li>On the contrary, some AI researchers envision DL as a new form of &lt;strong>algorithmic reasoning&lt;/strong>, somehow mimicking the human brain.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="the-human-brain-is-a-masterpiece">The human brain is a masterpiece&lt;/h2>
&lt;ul>
&lt;li>Approx. 86 billions neurons in 1.4 kg.&lt;/li>
&lt;li>Typical energy consumption: 20 W (!)&lt;/li>
&lt;li>So much of it is still unknown.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/human_brain.jpg" alt="The human brain">&lt;/p>
&lt;hr>
&lt;h2 id="babies-are-outstanding-learners">Babies are outstanding learners&lt;/h2>
&lt;p>&lt;a href="http://www.lscp.net/persons/dupoux/">&lt;img src="images/conceptual_acquisition_infants.png" alt="Conceptuals acquisitions by babies">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="any-questions">Any questions?&lt;/h2>
&lt;p>&lt;img src="images/cutest_baby_ever.png" alt="The cutest baby ever">&lt;/p></description></item><item><title>Mon premier Kahoot</title><link>https://www.bpesquet.fr/posts/mon-premier-kahoot/</link><pubDate>Thu, 29 Nov 2018 23:26:45 +0100</pubDate><guid>https://www.bpesquet.fr/posts/mon-premier-kahoot/</guid><description>&lt;p>La &lt;em>gamification&lt;/em> de l&amp;rsquo;enseignement est dans l&amp;rsquo;air du temps, et il existe maintenant de nombreux outils permettant d&amp;rsquo;engager les apprenants de manière ludique et interactive. Cela faisait un petit moment que j&amp;rsquo;avais envie d&amp;rsquo;expérimenter un service de quiz interactif pendant un cours magistral. Le dernier CM de l&amp;rsquo;un de mes modules de cours m&amp;rsquo;en a récemment fourni l&amp;rsquo;occasion. Avant la séance, j&amp;rsquo;ai demandé aux étudiants de revoir l&amp;rsquo;ensemble des notions vues depuis le début du module, en leur annonçant un test de révision. Restait à trouver l&amp;rsquo;outil adéquat.&lt;/p>
&lt;p>&lt;a href="https://socrative.com/">&lt;img src="images/socrative-logo.png#center" alt="Socrative logo">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://socrative.com/">Socrative&lt;/a> est un service de quiz en ligne simple et efficace. Son éditeur de questions se révèle très complet et agréable à utiliser. Il y a quelques années, j&amp;rsquo;avais testé son mode &lt;a href="http://help.socrative.com/launch/space-race/deliver-a-space-race">space race&lt;/a>, dans lequel les bonnes réponses font avancer une fusée à l&amp;rsquo;écran : ambiance garantie !&lt;/p>
&lt;p>&lt;img src="images/Space-Race-Live-Results.png#center" alt="Space race">&lt;/p>
&lt;p>Socrative est un excellent outil qui peut convenir à de nombreux cas d&amp;rsquo;usage. Cependant, plusieurs limites m&amp;rsquo;ont conduit à rechercher une alternative pour satisfaire mes besoins particuliers :&lt;/p>
&lt;ul>
&lt;li>Le mode &lt;em>space race&lt;/em> est limité à 16 participants ou équipes, et je souhaitais que mes 75 étudiants jouent individuellement.&lt;/li>
&lt;li>La version gratuite fixe le nombre maximal de participants à 50 par activité.&lt;/li>
&lt;li>Avec le mode quiz classique de Socrative, les étudiants sont scotchés sur leur écran pendant toute la durée de l&amp;rsquo;activité, ce qui ne favorise pas l&amp;rsquo;interactivité.&lt;/li>
&lt;/ul>
&lt;p>Mon choix s&amp;rsquo;est porté sur un autre outil de plus en plus connu pour gamifier l&amp;rsquo;enseignement : Kahoot.&lt;/p>
&lt;p>&lt;a href="https://kahoot.com/">&lt;img src="images/logo-kahoot.png#center" alt="Kahoot logo">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://kahoot.com/">Kahoot&lt;/a> est également un service de quiz interactif. Plutôt destiné au départ à l&amp;rsquo;enseignement élémentaire, il peut être utilisé dans beaucoup d&amp;rsquo;autres contextes, y compris non scolaires (workshops en entreprise, réunions de famille, etc). Ce service permet de définir des quiz, appelés des &amp;ldquo;kahoots&amp;rdquo;, constitués de questions à choix unique (4 réponses dont 1 seule bonne). Le design et l&amp;rsquo;interface utilisateur sont volontairement très ludiques pour faire oublier aux élèves et au prof qu&amp;rsquo;il s&amp;rsquo;agit avant tout d&amp;rsquo;un outil d&amp;rsquo;évaluation formative.&lt;/p>
&lt;p>Son fonctionnement est ultra-simple. Après avoir créé en amont les questions (ce qui, ne nous en cachons pas, peut prendre un certain temps), on démarre l&amp;rsquo;activité en mode individuel ou par équipe. Les participants accèdent au quiz via un code PIN à 6 chiffres, puis saisissent leur pseudo. Quand tout le monde est inscrit, l&amp;rsquo;enseignant lance le jeu, et c&amp;rsquo;est parti ! Chaque question s&amp;rsquo;affiche sur l&amp;rsquo;écran vidéoprojeté du prof, et les participants ont un temps limité (paramétrable) pour choisir l&amp;rsquo;une des 4 réponses sur leur écran. Une fois ce temps écoulé, un histogrammes des réponses obtenues s&amp;rsquo;affiche, puis un leaderboard des 5 meilleurs scores depuis le début du quiz, et on passe à la question suivante. Autant dire que le jeu n&amp;rsquo;engendre pas la monotonie et qu&amp;rsquo;il faut s&amp;rsquo;attendre à entendre monter les décibels dans la classe ou l&amp;rsquo;amphi.&lt;/p>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/lGLy9jyGjkU" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;p>Pour terminer, voici quelques conseils pratiques pour que votre premier quiz se déroule au mieux.&lt;/p>
&lt;ul>
&lt;li>Afin de pouvoir utiliser Kahoot en classe, il faut évidemment que chaque participant puisse se connecter au service en ligne. Une application mobile est disponible, mais un simple navigateur ayant accès à Internet suffit pour jouer. Plusieurs configurations sont possibles :
&lt;ul>
&lt;li>Wifi + tablettes ;&lt;/li>
&lt;li>Wifi + smartphones personnels des étudiants ;&lt;/li>
&lt;li>Wifi + ordinateurs portables ;&lt;/li>
&lt;li>Réseau filaire + postes fixes.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dans tous les cas, pensez à valider ces aspects techniques avant la séance pour ne pas que tout tombe à l&amp;rsquo;eau en cas de problème bloquant.&lt;/li>
&lt;li>Attention aux pseudos fantaisistes (voire pires) choisis par certains élèves au moment de l&amp;rsquo;inscription. Même avec des étudiants ingénieurs, j&amp;rsquo;ai dû m&amp;rsquo;y reprendre à deux fois en les menaçant de leur faire un &amp;ldquo;vrai&amp;rdquo; cours magistral s&amp;rsquo;ils persistaient à mettre n&amp;rsquo;importe quoi ;)&lt;/li>
&lt;li>Une vingtaine de questions par quiz constitue à mon avis un maximum. Au-delà, on peut aboutir à une certaine lassitude en fin de jeu et on court le risque de problèmes techniques (déconnexion, batterie) qui enlèveraient beaucoup d&amp;rsquo;intérêt à la séance.&lt;/li>
&lt;li>Le délai par défaut de 20 secondes par question est trop court. A l&amp;rsquo;avenir, je laisserai au minimum 30 secondes, voire plus pour les questions complexes.&lt;/li>
&lt;li>On peut illustrer chaque question avec une image. Si celles-ci sont trop riches, leur lisibilité au videoprojecteur peut laisser à désirer.&lt;/li>
&lt;/ul>
&lt;p>J&amp;rsquo;espère que cet article vous aura donné envie de tester Kahoot, Socrative ou un autre outil de gamification. Si la technique suit, vous ne risquez pas grand-chose, à part rendre vos élèves accros à ce type de séance :)&lt;/p>
&lt;p>Pour ma part, l&amp;rsquo;expérience fut très concluante et je la renouvellerai dès que possible. Bons quiz !&lt;/p></description></item><item><title>Freelancing</title><link>https://www.bpesquet.fr/freelancing/</link><pubDate>Thu, 04 Oct 2018 19:02:15 +0200</pubDate><guid>https://www.bpesquet.fr/freelancing/</guid><description>&lt;p>Depending on my work schedule, I may be available for working with external partners. This could include:&lt;/p>
&lt;ul>
&lt;li>Consulting in one of my areas of knowledge.&lt;/li>
&lt;li>Creation of custom training material: courses, textbooks or assessments.&lt;/li>
&lt;li>Animation of courses or corporate workshops.&lt;/li>
&lt;li>Conference talks.&lt;/li>
&lt;/ul>
&lt;p>Feel free to &lt;a href="mailto:bpesquet%20%5Bat%5D%20gmail%20%5Bdot%5D%20com">reach out to me&lt;/a> for more details.&lt;/p></description></item><item><title>Introduction à Unity</title><link>https://www.bpesquet.fr/slides/unity-intro/</link><pubDate>Sat, 25 Aug 2018 16:13:52 +0200</pubDate><guid>https://www.bpesquet.fr/slides/unity-intro/</guid><description>&lt;h2 id="sommaire">Sommaire&lt;/h2>
&lt;ul>
&lt;li>Unity en bref&lt;/li>
&lt;li>Concepts-clés&lt;/li>
&lt;li>Versionnage d&amp;rsquo;un projet&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="unity-en-bref">Unity en bref&lt;/h2>
&lt;hr>
&lt;p>&lt;img src="images/Unity_Technologies_Logo.svg.png" alt="Logo Unity">&lt;/p>
&lt;ul>
&lt;li>Moteur de jeu développé par &lt;a href="https://en.wikipedia.org/wiki/Unity_Technologies">Unity Technologies&lt;/a> depuis 2004.&lt;/li>
&lt;li>Multiplateformes : PC, Mac, consoles, smartphones, web.&lt;/li>
&lt;li>&lt;a href="https://store.unity.com/fr/products/unity-personal">Licence personnelle&lt;/a> gratuite.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="made-with-unity">Made with Unity&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/ctNF6QlLBWo" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;hr>
&lt;p>&lt;img src="images/Editor-Breakdown.jpg" alt="Unity editor 1">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/unity-editor.png" alt="Unity editor 2">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/keep-calm-it-is-demo-time.png" alt="Demo time">&lt;/p>
&lt;hr>
&lt;h2 id="concepts-clés">Concepts-clés&lt;/h2>
&lt;hr>
&lt;h2 id="project">Project&lt;/h2>
&lt;ul>
&lt;li>Rassemble tous les éléments constituant le jeu.&lt;/li>
&lt;li>Peut être de type 2D ou 3D.&lt;/li>
&lt;li>Correspond physiquement à un répertoire stocké localement ou dans le &lt;em>cloud&lt;/em>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/AssetWorkflowFolderAndProjectWindow.png" alt="Fenêtre Project">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="asset">Asset&lt;/h2>
&lt;ul>
&lt;li>Ressource utilisable dans un projet.&lt;/li>
&lt;li>Nombreux types possibles : image, modèle 3D, texture, fichier audio, script, etc.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/AssetWorkflowImportingFiles.png" alt="Import d&amp;rsquo;un Asset">&lt;/p>
&lt;hr>
&lt;h2 id="packages">Packages&lt;/h2>
&lt;ul>
&lt;li>Plusieurs Assets peuvent être regroupés dans un &lt;strong>package&lt;/strong>.&lt;/li>
&lt;li>Unity est livré avec une collections d'&lt;strong>Assets standards&lt;/strong> : formes de base, gestion de la caméra, des entrées utilisateur, etc.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="asset-store">Asset Store&lt;/h2>
&lt;ul>
&lt;li>Magasin en ligne proposant de nombreux Assets gratuits ou payants.&lt;/li>
&lt;li>Permet d&amp;rsquo;importer des packages dans un projet.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/AssetStore-download.png" alt="Asset Store">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="scene">Scene&lt;/h2>
&lt;ul>
&lt;li>Correspond à une partie du jeu (un niveau).&lt;/li>
&lt;li>Sauvegardées parmi les Assets.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/NewEmptyScene.png" alt="Nouvelle scène">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="gameobject">GameObject&lt;/h2>
&lt;ul>
&lt;li>Objet qui représente un élément d&amp;rsquo;une scène.&lt;/li>
&lt;li>Constitué d&amp;rsquo;un ensemble de &lt;strong>composants&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/GameObjectsExamples.png" alt="Exemples de GameObjects">&lt;/p>
&lt;hr>
&lt;h3 id="hiérarchie-des-gameobjects">Hiérarchie des GameObjects&lt;/h3>
&lt;ul>
&lt;li>Création de hiérarchies parent/enfants à plusieurs niveaux en regroupant des GameObjects.&lt;/li>
&lt;li>Permet de refléter des relations de &lt;strong>dépendance&lt;/strong> ou de &lt;strong>composition&lt;/strong> entre objets.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/HierarchyParenting1.png" alt="Hiérarchie des GO">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="composant">Composant&lt;/h2>
&lt;p>Ajoute un comportement à un GameObject.&lt;/p>
&lt;p>&lt;img src="images/RigidBodyGO.png" alt="Exemples de composants">&lt;/p>
&lt;hr>
&lt;h2 id="le-composant-transform">Le composant Transform&lt;/h2>
&lt;p>Définit la position, la rotation et l&amp;rsquo;échelle d&amp;rsquo;un GameObject.&lt;/p>
&lt;p>&lt;img src="images/TransformExample2.png" alt="Transform 1">&lt;/p>
&lt;hr>
&lt;h2 id="transform-et-hiérarchie">Transform et hiérarchie&lt;/h2>
&lt;ul>
&lt;li>Position, rotation et échelle d&amp;rsquo;un GameObject sont relatives à son parent dans la hiérarchie.&lt;/li>
&lt;li>Les valeurs de Transform sont relatives à celles du GameObject parent (&lt;strong>coordonnées locales&lt;/strong>) ou absolues en l&amp;rsquo;absence de parent (&lt;strong>coordonnées globales&lt;/strong>).&lt;/li>
&lt;/ul>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="mesh">Mesh&lt;/h2>
&lt;p>Maillage géométrique d&amp;rsquo;une forme 3D.&lt;/p>
&lt;p>&lt;img src="images/mesh.png" alt="Mesh">&lt;/p>
&lt;hr>
&lt;h2 id="mesh-renderer">Mesh renderer&lt;/h2>
&lt;p>Composant assurant le rendu d&amp;rsquo;un Mesh à la position définie par le composant Transform du GameObject.&lt;/p>
&lt;p>&lt;img src="images/class-MeshRenderer-0.png" alt="Mesh renderer">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="rigidbody">RigidBody&lt;/h2>
&lt;p>Composant permettant à un GameObject de réagir selon les lois de la physique :&lt;/p>
&lt;ul>
&lt;li>Gestion de la masse, de la gravité, etc.&lt;/li>
&lt;li>Application de forces.&lt;/li>
&lt;li>Réaction aux collisions.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/Inspector-Rigidbody.png" alt="RigidBody">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="collider">Collider&lt;/h2>
&lt;p>Composant définissant la forme d&amp;rsquo;un GameObject pour la gestion des collisions :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Primitive Collider&lt;/strong> : formes géométriques de base (cube, sphère, cylindre, etc).&lt;/li>
&lt;li>&lt;strong>Mesh Collider&lt;/strong> : forme spécifique définie par un Mesh. Plus coûteux en temps de calcul.&lt;/li>
&lt;/ul>
&lt;p>Par défaut, des GameObjects possédant un Collider ne peuvent pas se chevaucher.&lt;/p>
&lt;hr>
&lt;h2 id="rigidbody-collider">RigidBody Collider&lt;/h2>
&lt;p>GameObject possédant un Collider et un RigidBody.&lt;/p>
&lt;ul>
&lt;li>Soumis aux lois de la physique.&lt;/li>
&lt;li>Déclenche des collisions avec les autres (non-Trigger) Colliders.&lt;/li>
&lt;li>Doit être déplacé en lui appliquand des forces.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="static-collider">Static Collider&lt;/h2>
&lt;p>GameObject possédant un Collider mais pas de RigidBody.&lt;/p>
&lt;ul>
&lt;li>Déclenche des collisions avec les RigidBody Colliders, mais ne bouge pas.&lt;/li>
&lt;li>Ne doit pas être déplacé.&lt;/li>
&lt;li>Destiné aux éléments immobiles de la scène (murs, obstacles, etc).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="kinematic-rigidbody-collider">Kinematic RigidBody Collider&lt;/h2>
&lt;p>GameObject possédant un Collider et un RigidBody défini comme Kinematic.&lt;/p>
&lt;ul>
&lt;li>N&amp;rsquo;est pas soumis aux lois de la physique.&lt;/li>
&lt;li>Déclenche des collisions avec les RigidBody Colliders, mais ne bouge pas.&lt;/li>
&lt;li>Peut être déplacé en modifiant son Transform.&lt;/li>
&lt;li>Destiné aux éléments animés du décor (portes, objets à récupérer, etc).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="trigger-collider">Trigger Collider&lt;/h2>
&lt;p>GameObject dont le Collider est défini comme Trigger.&lt;/p>
&lt;p>&lt;img src="images/is-trigger-check-box.jpg" alt="IsTrigger">&lt;/p>
&lt;ul>
&lt;li>Autorise le chevauchement sans déclencher de collision.&lt;/li>
&lt;li>Permet de définir une &lt;strong>zone&lt;/strong> et de réagir lorsque des RigidBody Colliders y pénètrent.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://docs.unity3d.com/Manual/CollidersOverview.html">&lt;img src="images/UnityCollisionMatrix.png" alt="Collision Matrix">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="prefab">Prefab&lt;/h2>
&lt;ul>
&lt;li>Type d&amp;rsquo;Asset permettant d&amp;rsquo;instancier des GameObjects à partir d&amp;rsquo;un modèle commun.&lt;/li>
&lt;li>Changements d&amp;rsquo;un Prefab appliqués à toutes ses instances.&lt;/li>
&lt;li>Une instance de Prefab peut aussi être modifiée individuellement.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/PrefabWithOverride.png" alt="Prefab">&lt;/p>
&lt;hr>
&lt;h2 id="light">Light&lt;/h2>
&lt;p>Type de GameObject permettant d&amp;rsquo;ajouter une source de lumière à la scène.&lt;/p>
&lt;p>&lt;img src="images/Light-Spot.png" alt="Lights">&lt;/p>
&lt;hr>
&lt;h2 id="camera">Camera&lt;/h2>
&lt;p>Type de GameObject qui calcule la vue de la scène affichée au joueur.&lt;/p>
&lt;p>&lt;img src="images/CameraPerspectiveAndOrtho.jpg" alt="Différentes caméras">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="script">Script&lt;/h2>
&lt;ul>
&lt;li>Type d&amp;rsquo;Asset permettant de coder le comportement d&amp;rsquo;un GameObject en langage C# ou UnityScript.&lt;/li>
&lt;li>Doit faire partie des composants du GameObject.&lt;/li>
&lt;li>Peut accéder aux propriétés du GameObject définies par ses autres composants.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="anatomie-dun-script">Anatomie d&amp;rsquo;un script&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ... (directives using)
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// MonoBehaviour : superclasse de tous les scripts Unity
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MainPlayer : MonoBehaviour {
&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Appelée juste avant le rendu de la première image
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Start() { ... }
&lt;pre>&lt;code>&amp;lt;span style=&amp;quot;color:#080;background-color:#0f140f;font-style:italic&amp;quot;&amp;gt;// Appelée à chaque nouvelle image
&lt;/code>&lt;/pre>
&lt;p>&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// L'intervalle de temps entre deux appels peut varier
&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Update() { &amp;hellip; }&lt;/p>
&lt;pre>&lt;code>&amp;lt;span style=&amp;quot;color:#080;background-color:#0f140f;font-style:italic&amp;quot;&amp;gt;// Appelée à intervalles réguliers (0.02s par défaut)
&lt;/code>&lt;/pre>
&lt;p>&lt;/span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> FixedUpdate() { &amp;hellip; }
}
&lt;/code>&lt;/pre>&lt;/div>&lt;hr>&lt;/p>
&lt;h2 id="déplacements-scriptés">Déplacements scriptés&lt;/h2>
&lt;p>&lt;a href="https://unity3d.com/fr/learn/tutorials/topics/scripting/delta-time">&lt;img src="images/time.deltatime.gif" alt="Time.deltaTtime">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="versionnage-dun-projet">Versionnage d&amp;rsquo;un projet&lt;/h2>
&lt;hr>
&lt;h2 id="le-problème">Le problème&lt;/h2>
&lt;ul>
&lt;li>Taille de certains Assets.&lt;/li>
&lt;li>Nombreux fichiers binaires dans un projet : modèles 3D, images, sons, etc.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="les-solutions">Les solutions&lt;/h2>
&lt;ul>
&lt;li>Partage manuel (disque commun, Drive, etc).&lt;/li>
&lt;li>Dépôt Git standard.&lt;/li>
&lt;li>Git LFS.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="git-large-file-system">Git Large File System&lt;/h2>
&lt;p>&lt;a href="https://git-lfs.github.com">&lt;img src="images/git-lfs.gif" alt="Git LFS">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="fichier-gitattributes">Fichier .gitattributes&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">* &lt;span style="color:#fb660a">text&lt;/span>=auto
&lt;p>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Unity files&lt;/span>
*.meta -text -merge=unityamlmerge
*.unity -text -merge=unityamlmerge
*.asset -text -merge=unityamlmerge
*.prefab -text -merge=unityamlmerge&lt;/p>
&lt;p>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Image formats&lt;/span>
*.psd &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.jpg &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.png &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.gif &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.bmp &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.tga &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.tiff &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.iff &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.pict &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.dds &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.xcf &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text&lt;/p>
&lt;p>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Audio formats&lt;/span>
*.mp3 &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.ogg &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.wav &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.aiff &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.aif &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.mod &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.it &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.s3m &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.xm &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text&lt;/p>
&lt;p>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Video formats&lt;/span>
*.mov &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.avi &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.asf &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.mpg &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.mpeg &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.mp4 &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text&lt;/p>
&lt;p>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># 3D formats&lt;/span>
*.fbx &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.obj &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.max &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.blend &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.dae &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.mb &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.ma &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.3ds &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.dfx &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.c4d &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.lwo &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.lwo2 &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.abc &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.3dm &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text&lt;/p>
&lt;p>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Build&lt;/span>
*.dll &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.pdb &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.mdb &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text&lt;/p>
&lt;p>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Packaging&lt;/span>
*.zip &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.7z &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.gz &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.rar &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
*.tar &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text&lt;/p>
&lt;p>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://gist.github.com/bpesquet/4e28b431b673addef1774d497b614b33">Source&lt;/a>&lt;/p>&lt;/p>
&lt;hr>
&lt;h2 id="github-for-unity">GitHub For Unity&lt;/h2>
&lt;p>&lt;a href="https://unity.github.com/">https://unity.github.com/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Extension qui intègre Git et GitHub dans Unity.&lt;/li>
&lt;li>Authentification GitHub, LFS, etc.&lt;/li>
&lt;li>Version 1.0 : encore instable.&lt;/li>
&lt;/ul>
&lt;/section></description></item><item><title>PAISS 2018 : le debrief</title><link>https://www.bpesquet.fr/posts/paiss-2018-debrief/</link><pubDate>Mon, 09 Jul 2018 08:48:56 +0200</pubDate><guid>https://www.bpesquet.fr/posts/paiss-2018-debrief/</guid><description>&lt;p>La session 2018 de la &lt;em>summer school&lt;/em> de l&amp;rsquo;INRIA consacrée à l&amp;rsquo;IA, nommée &lt;a href="https://project.inria.fr/paiss/">PAISS&lt;/a>, s&amp;rsquo;est déroulée à Grenoble du 2 au 6 juillet 2018. Voici un petit compte-rendu de ce qui s&amp;rsquo;y est dit et fait.&lt;/p>
&lt;p>&lt;img src="https://project.inria.fr/paiss/files/2018/04/te%CC%82tie%CC%80re-3.jpg" alt="Logo PAISS">&lt;/p>
&lt;p>Le P de PAISS correspond à l&amp;rsquo;institut &lt;a href="https://inria.fr/actualite/actualites-inria/creation-de-l-institut-prairie">PRAIRIE&lt;/a>, le centre français d&amp;rsquo;excellence en IA dont la création a été annoncée lors du sommet &lt;a href="https://www.aiforhumanity.fr/">AI for Humanity&lt;/a> en mars 2018.&lt;/p>
&lt;h2 id="quelques-chiffres">Quelques chiffres&lt;/h2>
&lt;p>L&amp;rsquo;école d&amp;rsquo;été 2018 a rassemblé environ 200 participants sélectionnés parmi plus de 700 candidatures. 44 nationalités étaient représentées. La composition du public était la suivante :&lt;/p>
&lt;ul>
&lt;li>60% d&amp;rsquo;étudiants, presque tous thésards ou post-doctorants ;&lt;/li>
&lt;li>15% d&amp;rsquo;académiques (dont votre serviteur) ;&lt;/li>
&lt;li>25% de professionnels.&lt;/li>
&lt;/ul>
&lt;p>De quoi prendre un petit coup de vieux au milieu de nombreux visages juvéniles&amp;hellip;&lt;/p>
&lt;p>En dépit des efforts des organisateurs, il n&amp;rsquo;y avait &amp;ldquo;que&amp;rdquo; 25% de femmes parmi les participants. Elles ont pourtant toute leur place en IA comme dans les autres secteurs scientifiques. Allez les filles !&lt;/p>
&lt;p>L&amp;rsquo;agenda de l&amp;rsquo;école d&amp;rsquo;été fut très dense, avec au total 15 conférences et 3 sessions pratiques réparties sur cinq jours. Le peu de temps restant fut occupé par une soirée de bienvenue sur les hauteurs de Grenoble, une session &amp;ldquo;posters&amp;rdquo; et une réception dans les somptueux locaux de &lt;a href="http://www.europe.naverlabs.com/">Naver Labs&lt;/a>, l&amp;rsquo;ancien laboratoire de recherche en IA de Xerox.&lt;/p>
&lt;figure>
&lt;img src="images/Grenoble_Bastille.jpg"
alt="Vue de Grenoble depuis la Bastille"/> &lt;figcaption>
&lt;p>Vue de Grenoble depuis la Bastille&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;h2 id="le-contenu">Le contenu&lt;/h2>
&lt;p>Le casting des intervenants a rassemblé de nombreuses pointures de la recherche en IA, dont une véritable &lt;em>dream team&lt;/em> francophone composée de Yann LeCun (patron de l&amp;rsquo;IA chez Facebook), Rémi Munos (responsable du laboratoire DeepMind à Paris), Hugo Larochelle (Google Brain) et bien d&amp;rsquo;autres.&lt;/p>
&lt;figure>
&lt;img src="images/paiss_selfie.jpg"
alt="Je sais, on avait dit pas de selfie avec Yann LeCun&amp;amp;hellip;"/> &lt;figcaption>
&lt;p>Je sais, on avait dit pas de selfie avec Yann LeCun&amp;hellip;&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Les sujets présentés correspondent aux grands axes actuels de la recherche en IA : apprentissages semi-supervisé et non supervisé, apprentissage profond par renforcement, meta-learning (apprendre à apprendre), etc. Les principaux thèmes d&amp;rsquo;application étaient la vision par ordinateur, le traitement du langage naturel (NLP), et dans une moindre mesure la robotique.&lt;/p>
&lt;p>Le niveau général des interventions, toutes en anglais, était très élevé. Après une contextualisation plus ou moins brève, la grande majorité des intervenants a présenté ses résultats de recherche les plus récents. Sans surprise, le Deep Learning occupe actuellement une position quasiment hégémonique. Les réseaux profonds convolutifs (CNN) sont mis à toutes les sauces dans de nombreux domaines, comme par exemple le NLP. Cela n&amp;rsquo;est pas sans créer quelques petites tensions avec les tenants de techniques plus traditionnelles et les défenseurs d&amp;rsquo;approches scientifiques alternatives.&lt;/p>
&lt;p>Voici quelques liens pour accéder au contenu présenté :&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://project.inria.fr/paiss/program/">Diaporamas&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/almazan/paiss">Session pratique sur la recherche visuelle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/criteo-research/paiss_deeprl">Session pratique sur l&amp;rsquo;apprentissage profond par renforcement&lt;/a>&lt;/li>
&lt;li>La session pratique sur PyTorch correspond aux &lt;a href="https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html">tutoriels&lt;/a> du site officiel.&lt;/li>
&lt;/ul>
&lt;h2 id="bilan-personnel">Bilan personnel&lt;/h2>
&lt;p>Cette école d&amp;rsquo;été m&amp;rsquo;a permis de mesurer l&amp;rsquo;écart entre mes connaissances actuelles et l&amp;rsquo;état de l&amp;rsquo;art. J&amp;rsquo;ai bien l&amp;rsquo;intention de continuer à travailler pour réduire cet écart, même si mes objectifs en matière d&amp;rsquo;IA sont avant tout d&amp;rsquo;ordre pédagogique (pour le moment).&lt;/p>
&lt;p>La recherche en IA semble plutôt une affaire de mathématiciens que d&amp;rsquo;informaticiens. Toutes les présentations se sont basées sur un formalisme mathématique important, avec dans certains cas la mobilisation de concepts qui m&amp;rsquo;ont ramené tout droit à mes lointaines années de prépa.&lt;/p>
&lt;figure>
&lt;img src="images/paiss_bottou.jpg"
alt="Extrait de la présentation de Léon Bottou sur l&amp;amp;rsquo;apprentissage non supervisé"/> &lt;figcaption>
&lt;p>Extrait de la présentation de Léon Bottou sur l&amp;rsquo;apprentissage non supervisé&lt;/p>
&lt;/figcaption>
&lt;/figure>
&lt;p>Une expérience parfois douloureuse : pas facile de redevenir étudiant et de se sentir largué par le prof. Je tâcherai de m&amp;rsquo;en souvenir pour mes prochains cours :)&lt;/p>
&lt;p>Malgré une variété des thèmes et un niveau des interventions très stimulantes intellectuellement, cette école d&amp;rsquo;été a parfois ressemblé à un &lt;em>workshop&lt;/em> de recherche. L&amp;rsquo;enseignant que je suis a regretté que les aspects didactiques et pédagogiques aient été, à mon sens, trop négligés par certains intervenants. Avec un meilleur niveau théorique, mon impression aurait probablement été différente.&lt;/p>
&lt;p>Je reste cependant très content d&amp;rsquo;avoir participé à cette école d&amp;rsquo;été qui a été l&amp;rsquo;occasion de cogitations intenses et de rencontres variées et enrichissantes.&lt;/p>
&lt;p>D&amp;rsquo;après mes discussions avec les organisateurs, la prochaine session devrait avoir lieu à Paris en 2019. Avis aux amateurs !&lt;/p></description></item><item><title>Artistes et spécifieurs, un jeu pour découvrir l'agilité</title><link>https://www.bpesquet.fr/posts/artistes-et-specifieurs/</link><pubDate>Thu, 24 May 2018 15:57:43 +0200</pubDate><guid>https://www.bpesquet.fr/posts/artistes-et-specifieurs/</guid><description>&lt;p>Dans le cadre du module de cours Gestion de projet, j&amp;rsquo;ai testé avec succès un atelier ludique et efficace pour s&amp;rsquo;initier aux valeurs de l&amp;rsquo;agilité : le jeu &lt;strong>artistes et spécifieurs&lt;/strong>. Imaginé par &lt;a href="http://alistair.cockburn.us/">Alistair Cockburn&lt;/a>, l&amp;rsquo;un des signataires du &lt;a href="http://agilemanifesto.org/">manifeste agile&lt;/a>, ce jeu est souvent utilisé par les coachs agiles en entreprise.&lt;/p>
&lt;p>Par rapport à d&amp;rsquo;autres ateliers similiaires comme &lt;a href="https://www.lego4scrum.com/">lego4scrum&lt;/a>, il a l&amp;rsquo;avantage de ne nécessiter presque aucun matériel. En 1h30 environ, il offre une première approche de certains principes agiles dans un cadre propice à la bonne humeur.&lt;/p>
&lt;h2 id="principe-du-jeu">Principe du jeu&lt;/h2>
&lt;p>Pour commencer, on forme des équipes de 4 à 6 personnes selon le nombre total de participants à l&amp;rsquo;atelier. Chaque équipe se scinde en deux : les spécifieurs d&amp;rsquo;une part et les artistes de l&amp;rsquo;autre.&lt;/p>
&lt;p>L&amp;rsquo;objectif est pour les artistes de reproduire aussi fidèlement que possible un dessin à partir des spécifications fournies par les spécifieurs de l&amp;rsquo;équipe.&lt;/p>
&lt;p>Les contraintes sont les suivantes :&lt;/p>
&lt;ul>
&lt;li>Les spécifieurs sont les seuls à avoir accès au dessin.&lt;/li>
&lt;li>La communication entre spécifieurs et artistes est uniquement écrite.&lt;/li>
&lt;li>Les spécifieurs ne peuvent pas dessiner.&lt;/li>
&lt;li>Les artistes ne peuvent pas se déplacer.&lt;/li>
&lt;/ul>
&lt;p>Le reste de l&amp;rsquo;organisation spécifieurs/artistes est libre : nombre d&amp;rsquo;allers-retours, format de communication écrite, attente d&amp;rsquo;un spécifieur aux côtés des artistes, etc.&lt;/p>
&lt;h2 id="matériel-nécessaire">Matériel nécessaire&lt;/h2>
&lt;ul>
&lt;li>Trois dessins de complexité croissante, imprimés en autant d&amp;rsquo;exemplaires qu&amp;rsquo;il y aura d&amp;rsquo;équipes. Afin de conserver l&amp;rsquo;effet de surprise pour mes étudiants, je ne mets pas en ligne ceux que j&amp;rsquo;utilise. Contactez-moi si vous souhaitez les obtenir.&lt;/li>
&lt;li>Des feuilles A3 ou A4 vierges et des marqueurs pour dessiner dessus.&lt;/li>
&lt;li>Des feuilles de brouillon pour écrire les spécifications.&lt;/li>
&lt;/ul>
&lt;p>Ce jeu peut être gourmand en papier. Je donne à mes étudiants des consignes d&amp;rsquo;économie pour éviter le gaspillage.&lt;/p>
&lt;h2 id="déroulement">Déroulement&lt;/h2>
&lt;p>Une fois les consignes de jeu données à tous les participants, on sépare physiquement le groupe des spécifieurs et celui des artistes. Il est possible de les placer dans deux salles limitrophes, ou de les éloigner au maximum dans une même salle. La partie peut commencer !&lt;/p>
&lt;p>Chaque phase de jeu dure 10 minutes. L&amp;rsquo;idéal pour rythmer la session et instiller une petite dose de stress est de vidéoprojeter un &lt;a href="https://www.online-stopwatch.com/full-screen-stopwatch/">compte à rebours&lt;/a> aux spécifieurs. Une fois le temps écoulé, on récupère les dessins de chaque équipe et tous les participants sont regroupés pour un debriefing collectif souvent très drôle.&lt;/p>
&lt;p>On laisse ensuite quelques minutes à chaque équipe pour trouver des axes d&amp;rsquo;amélioration avant la prochaine phase. Les participants peuvent décider de changer de rôle d&amp;rsquo;une phase à l&amp;rsquo;autre.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Au bout de trois phases de jeu, on observe l&amp;rsquo;adoption naturelle de plusieurs des grands principes agiles :&lt;/p>
&lt;ul>
&lt;li>Fonctionnement en boucle courte.&lt;/li>
&lt;li>Echanges réguliers entre les parties prenantes.&lt;/li>
&lt;li>Travail incrémental avec priorisation.&lt;/li>
&lt;li>Amélioration par auto-organisation.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>Dès la seconde phase, on constate également une nette amélioration de la qualité des productions.&lt;/p>
&lt;p>La séance se termine par un debriefing global qui est le bon moment pour formaliser les liens avec les principes de l&amp;rsquo;agilité.&lt;/p>
&lt;p>Vous trouverez plus de détails sur ce jeu dans &lt;a href="http://www.agilex.fr/2013/01/mon-jeu-agile-prefere/">cet article&lt;/a>.&lt;/p></description></item><item><title>How to launch your own open source book that’s popular and profitable</title><link>https://www.bpesquet.fr/posts/how-to-launch-your-own-open-source-book/</link><pubDate>Tue, 03 Oct 2017 20:29:18 +0000</pubDate><guid>https://www.bpesquet.fr/posts/how-to-launch-your-own-open-source-book/</guid><description>&lt;p>&lt;img src="images/1.jpeg" alt="A Soyuz rocket launched from the Baikonur cosmodrome in Kazakhstan">&lt;/p>
&lt;p>I am the author of &lt;a href="https://github.com/bpesquet/thejsway">The JavaScript Way&lt;/a>, a self-published open source book for learning to code. Despite the lack of any initial audience, it topped GitHub trending charts worldwide during its launch.&lt;/p>
&lt;p>This is the story of this unexpected success.&lt;/p>
&lt;h3 id="project-inception">Project inception&lt;/h3>
&lt;p>At the beginning of this project, I &lt;a href="https://www.bpesquet.fr/posts/walk-this-javascript-way/">explained&lt;/a> why I started it and went over some of my initial choices. In short:&lt;/p>
&lt;ul>
&lt;li>There was a need for a book teaching modern JavaScript to beginners.&lt;/li>
&lt;li>I decided to self-publish this book and write it in the open on &lt;a href="https://github.com">GitHub&lt;/a>. Doing so, I was hoping to reach as many people as possible. Also, to leverage the great &lt;a href="https://en.wikipedia.org/wiki/Open-source_model">collaborative model&lt;/a> that is at the heart of open source.&lt;/li>
&lt;li>The book would have a Creative Commons &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">BY-NC-SA&lt;/a> license. It allows anyone to share or build upon my work as long as some rules are observed. In particular, no commercial purposes outside of mine are allowed.&lt;/li>
&lt;/ul>
&lt;p>Also, some key factors in the decision were:&lt;/p>
&lt;ul>
&lt;li>Text is still a great medium to convey knowledge. So, the choice of a book instead of some video-based material.&lt;/li>
&lt;li>I already authored two online courses on the same topic (&lt;a href="https://openclassrooms.com/courses/learn-the-basics-of-javascript">here&lt;/a> and &lt;a href="https://openclassrooms.com/courses/use-javascript-on-the-web">there&lt;/a>). The feedback for them has been very positive, so I knew that I had some pretty solid content at hand.&lt;/li>
&lt;li>I wanted to hone my JavaScript skills, and knew firsthand that teaching something is a great way to master it.&lt;/li>
&lt;/ul>
&lt;p>What I lacked was an initial audience, something often seen as a critical asset for this kind of project. Since someone has to start somewhere, I went on anyway.&lt;/p>
&lt;h3 id="choosing-a-business-model">Choosing a business model&lt;/h3>
&lt;p>Every creator faces the same dilemma. How to share your work with the world that would make an impact and also be profitable? There is no definitive answer to this age-old question.&lt;/p>
&lt;p>The digital revolution has turned things upside down for authors. It has lowered the distribution and sharing costs to zero. In our “reputation economy”, content creators must battle to gain consumer attention. As a new player in this field, meeting success will be very difficult if all your content sits behind a paywall. Some of it &lt;em>has&lt;/em> to be available for free.&lt;/p>
&lt;p>For authors, the most common marketing tactic is now to split your work into several parts. The first one free, gives potential customers a glimpse of your content and style. In the hope that hooked up customers will buy the other parts.&lt;/p>
&lt;p>Kyle Simpson’s alternative &lt;a href="https://github.com/getify/You-Dont-Know-JS/blob/master/CONTRIBUTING.md#reading-experience-chaptersection-links-etc">choice&lt;/a> for its quite successful &lt;a href="https://github.com/getify/You-Dont-Know-JS">You Don’t Know JS&lt;/a> book series appealed to me. Like him, I decided to give away the entire book content for free, but let users pay for a better reading experience through the ebook version.&lt;/p>
&lt;p>Taking example from &lt;a href="https://leanpub.com/rprogramming">another self-published bestseller&lt;/a>, I chose to include coding exercises and projects right into the book, but sell their solutions as an extra.&lt;/p>
&lt;p>This “hybrid” business model seemed a reasonable balance between openness and potential profit.&lt;/p>
&lt;h3 id="building-an-audience-or-not">Building an audience (or not)&lt;/h3>
&lt;p>Another common marketing advice is building some audience through a mailing list, using some existing content (for example, your own blog) as a magnet.&lt;/p>
&lt;p>I don’t like this approach very much and didn’t want to bother my readers with any subscription.&lt;/p>
&lt;p>I also considered launching a crowdfunding campaign. Without any initial audience, this seemed to me as a lot of work for a very uncertain outcome, so I shied away from it. Maybe next time!&lt;/p>
&lt;h3 id="tools-and-process">Tools and process&lt;/h3>
&lt;p>The very best file format for authoring &lt;em>any&lt;/em> book (not only technical ones) is &lt;strong>plain text&lt;/strong>. No need for a dedicated editor. No interoperability issue. The ability to use a &lt;a href="https://en.wikipedia.org/wiki/Version_control">version control&lt;/a> system like &lt;a href="https://git-scm.com/">Git&lt;/a> to keep track of changes.&lt;/p>
&lt;p>Among the various text-based markup languages available. I chose &lt;a href="https://en.wikipedia.org/wiki/Markdown">Markdown&lt;/a> because I already knew and liked its syntax. Markdown is also a first-class citizen on GitHub, which was essential for this project.&lt;/p>
&lt;p>A self-published author needs a toolchain to transform the raw manuscript files into various ebook formats (PDF, EPUB, MOBI). For me, the &lt;a href="https://leanpub.com">Leanpub&lt;/a> platform ticked all the boxes: Markdown support, integration with GitHub and a fair royalty structure (90% minus 50 cents per sale).&lt;/p>
&lt;p>I used the free text editor &lt;a href="https://code.visualstudio.com/">Visual Studio Code&lt;/a> for authoring the book files on my computer. It has great Markdown support out of the box and a very convenient side-by-side file preview (see image below). Extensions like &lt;a href="https://marketplace.visualstudio.com/items?itemName=mdickin.markdown-shortcuts">Markdown Shortcuts&lt;/a> and &lt;a href="https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint">markdownlint&lt;/a> can be installed to become even more productive.&lt;/p>
&lt;p>&lt;img src="images/2.png" alt="image">&lt;/p>
&lt;p>After all tools were chosen, I drafted the book outline (a very important first step) using my previous courses as a basis. Then I dived into the writing process.&lt;/p>
&lt;h3 id="early-publishing">Early publishing&lt;/h3>
&lt;p>Leanpub’s motto is “Publish early, publish often”. The platform empowers you to publish early drafts of your work. Receive feedback and create traction, enabling an &lt;a href="https://en.wikipedia.org/wiki/Minimum_viable_product">MVP&lt;/a>-like approach to book authoring.&lt;/p>
&lt;p>It’s a great idea on paper… Which unfortunately didn’t work at all for me. One month after the writing process started, I made the book public on Leanpub. By that time, the ebook price was $0, so anyone could get it for free.&lt;/p>
&lt;p>I told my personal network about it, &lt;a href="https://twitter.com/bpesquet/status/836354787616641024">twitted&lt;/a> about it, submitted it to &lt;a href="https://www.reddit.com/r/javascript/comments/5wmw8q/the_javascript_way_a_new_book_for_learning_modern/">Reddit&lt;/a> and &lt;a href="https://news.ycombinator.com/item?id=13749641">Hacker News&lt;/a>. I also reached out to other book authors or prominent individuals. I also reached out to Kyle Simpson, &lt;a href="https://www.robinwieruch.de/">Robin Wieruch&lt;/a> and freeCodeCamp’s &lt;a href="https://twitter.com/ossia">Quincy Larson&lt;/a>, looking for advice and support.&lt;/p>
&lt;p>The outcome was a mixed bag. A few GitHub stars, a handful of messages on Twitter and Reddit. An HN thread that went out-of-topic and got buried. Execution was poor, the lack of any initial audience was too much of a disadvantage there.&lt;/p>
&lt;p>A majority of comments were like “Ping me back when it’s finished”. People may not want to invest time to read in-progress books, which is understandable after all.&lt;/p>
&lt;p>But, individual responses from Kyle, Robin and Quincy were hearthwarming. They played a big role in keeping me motivated. I’m very thankful to them.&lt;/p>
&lt;h3 id="the-writing-phase">The writing phase&lt;/h3>
&lt;p>Even after this underwhelming early launch, I was still convinced that my book was worth something. I didn’t want to give up after having already spent dozens of hours on it. Using an unchanged book outline, I went for a no-feedback route and kept on writing all by myself until the book got finished.&lt;/p>
&lt;p>That was the hardest part. Spending countless hours, day after day, only to see things take shape very slow. Inevitably, doubts surface: how could it ever succeed? Is this all a giant waste of time? Why am I inflicting this to myself?&lt;/p>
&lt;p>The key to overcome these obstacles is &lt;strong>putting the right amount of pressure on yourself&lt;/strong>. If your time commitment is too scarce, you will lose motivation and give up. But, trying to move forward too fast, neglecting other important aspects of your life along the way, is risky on many levels.&lt;/p>
&lt;p>After all, this was only a side project. Low risk, low pressure! Self-publishing means I had no deadlines to meet, which can be both a blessing and a curse. I tried to use this to my advantage: I was free to invest time in something I believed into, but at my own pace.&lt;/p>
&lt;p>I found a reasonable balance (about 10–15 hours a week) between work, personal life and the writing process. Limited long and hazardous breaks. This &lt;a href="https://open.buffer.com/side-projects-creative-hobbies/">article on side projects&lt;/a> gives useful advice to keep things going during this phase.&lt;/p>
&lt;p>&lt;img src="images/3.png" alt="My commit statistics on GitHub during the writing phase">&lt;/p>
&lt;p>Luckily, I had some existing material to build upon. Some experience writing content on my own… And also a very understanding spouse ;)&lt;/p>
&lt;h3 id="launch-day">Launch day&lt;/h3>
&lt;p>After eight months of steady work and a few last hours feverishly spent fixing things here and there, my book was ready at last!&lt;/p>
&lt;p>The upside of writing in a vacuum like I did is that your book launch becomes a pretty big event. After such a huge time investment, it’s a great feeling (and also a huge relief) to show your finished creation to the world.&lt;/p>
&lt;p>For lack of anything better, I reused my previous launch strategy. &lt;a href="https://twitter.com/bpesquet/status/890564975596630017">Twitter&lt;/a>, &lt;a href="https://www.reddit.com/r/javascript/comments/6poszc/the_javascript_way_a_new_book_for_learning_modern/">Reddit&lt;/a> and &lt;a href="https://news.ycombinator.com/item?id=14865043">Hacker News&lt;/a> (&lt;a href="https://www.quora.com/When-is-the-best-time-to-post-on-Hacker-News-to-get-and-stay-long-on-the-front-page">timing submissions&lt;/a> for most visibility). Also, the same nice people that kept me motivated after the early launch.&lt;/p>
&lt;p>To my astonishment, the result was this time overwhelmingly positive. Kyle Simpson and Quincy Larson kindly tweeted about the book to their dozens of thousands of followers.&lt;/p>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Pretty excited about this new book by &lt;a href="https://twitter.com/bpesquet?ref_src=twsrc%5Etfw">@bpesquet&lt;/a> called &amp;quot;The JavaScript Way&amp;quot;: &lt;a href="https://t.co/lbbzQNwL4e">https://t.co/lbbzQNwL4e&lt;/a> Looks like a great companion to &lt;a href="https://twitter.com/YDKJS?ref_src=twsrc%5Etfw">@YDKJS&lt;/a>!&lt;/p>&amp;mdash; You Don&amp;#39;t Know JS Yet (@YDKJS) &lt;a href="https://twitter.com/YDKJS/status/890594260226949125?ref_src=twsrc%5Etfw">July 27, 2017&lt;/a>&lt;/blockquote>
&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;p>Hour after hour, I watched in awe of disbelief as rave comments and retweets piled into my inbox. I finally knew that my book would have an impact.&lt;/p>
&lt;p>Launch is also the blissful moment where the magic of open source happens. People can read and share your book for free. Creating traction without any marketing effort. But they can also improve its quality through contributions using GitHub &lt;a href="https://guides.github.com/features/issues/">issues&lt;/a> and &lt;a href="https://help.github.com/articles/about-pull-requests/">pull requests&lt;/a>.&lt;/p>
&lt;p>Since I’m not an English native and didn’t have an editor by my side to proof check the content. I knew that my book contained many typos and errors at launch. I hoped people would help to spot and correct them, and wasn’t disappointed.&lt;/p>
&lt;p>Here are a few figures gathered two days after launch:&lt;/p>
&lt;ul>
&lt;li>The book repository on GitHub had more than &lt;strong>51k views&lt;/strong> from &lt;strong>17k unique visitors&lt;/strong>. The bulk of this traffic came from Hacker News, followed by Reddit.&lt;/li>
&lt;li>It gained more than &lt;strong>2,400 stars&lt;/strong>, and becoming the &lt;strong>#1 trending repo&lt;/strong>worldwide for a day.&lt;/li>
&lt;li>The Hacker News story climbed to &lt;strong>#5 rank&lt;/strong> on the front page, generating more than a hundred comments.&lt;/li>
&lt;li>Readers submitted &lt;strong>30 pull requests&lt;/strong>, correcting many of the book’s initial mistakes. Small typos for the most part, but also grammatical improvements and even a few coding errors.&lt;/li>
&lt;li>I already received &lt;strong>two translation requests&lt;/strong>, to Spanish and Chinese.&lt;/li>
&lt;/ul>
&lt;p>All in all, far more than what I could dream of.&lt;/p>
&lt;h3 id="financial-outcome">Financial outcome&lt;/h3>
&lt;p>Can an open source book be profitable after all? Of course, it’s too soon to tell. Two days after launch, it became Leanpub’s bestselling book of the week, with more than &lt;strong>$1,000&lt;/strong> in royalties.&lt;/p>
&lt;p>&lt;img src="images/4.png" alt="Leanpub royalties dashboard two days after launch">&lt;/p>
&lt;p>Profitability was not the reason this project was started in the first place. Yet the hybrid pricing model, with free sources and paid ebook/corrections, will ultimately contribute to the book’s reputation while making for some welcome passive income.&lt;/p>
&lt;p>Later on, I may create a paperback version of the book (Maybe &lt;a href="https://www.createspace.com/">Amazon CreateSpace&lt;/a>) if there is any demand for it. An interactive online course offering a richer user experience is already under way.&lt;/p>
&lt;p>Most importantly, I have the deep satisfaction of having contributed something meaningful to the community. Thousands of people around the world will use my book to learn to code, improve at JavaScript and it may change their lives for the better.&lt;/p>
&lt;p>And that is priceless.&lt;/p>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>It wasn’t all roses, but self-publishing a successful open source book without any prior audience is definitely possible.&lt;/p>
&lt;p>I hope this little story has entertained you. I also hope it might inspire you to start a creative project on your own, be it a book or something completely different.&lt;/p>
&lt;p>I look forward to see what you will achieve!&lt;/p></description></item><item><title>Walk This (JavaScript) Way</title><link>https://www.bpesquet.fr/posts/walk-this-javascript-way/</link><pubDate>Mon, 27 Feb 2017 23:15:37 +0000</pubDate><guid>https://www.bpesquet.fr/posts/walk-this-javascript-way/</guid><description>&lt;p>&lt;img src="images/1.jpeg" alt="Run DMC and Aerosmith">&lt;/p>
&lt;p>So I’ve decided to go ahead and write a &lt;a href="https://hackernoon.com/tagged/book">book&lt;/a> about &lt;a href="https://hackernoon.com/tagged/javascript">JavaScript&lt;/a>. It’s called &lt;strong>The JavaScript Way&lt;/strong> and is available through &lt;a href="https://leanpub.com/thejsway">Leanpub&lt;/a> and &lt;a href="https://github.com/bpesquet/thejsway">GitHub&lt;/a> (more on that later).&lt;/p>
&lt;h3 id="but-why">But… Why?&lt;/h3>
&lt;p>It’s true there are tons of learning resources about JS. However, many are outdated and teach obsolete practices. Many others cover advanced topics like design patterns, language internals, or frameworks that are of little interest to newcomers.&lt;/p>
&lt;p>I’m starting this project because I think there is room for a beginner-centric book teaching modern JavaScript. I hope to make it a useful companion for anyone wishing to (re)discover the many facets of JS.&lt;/p>
&lt;h3 id="design-and-content">Design and content&lt;/h3>
&lt;p>The book is targeted towards JavaScript newcomers: complete beginners with no programming experience whatsoever or “switchers” coming from another language background. It won’t be a in-depth study of JavaScript (which is &lt;a href="https://github.com/getify/You-Dont-Know-JS">already existing&lt;/a>, by the way). I’ll try to keep it as beginner-friendly as possible while covering some advanced concepts and good practices.&lt;/p>
&lt;p>It was pretty obvious from the start that the book would be written entirely using the more future-proof and often easier to explain ES6/ES2015 standard. As I want to keep things simple, many tricky and primarily ES5-related topics like &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Hoisting">hoisting&lt;/a> or &lt;a href="http://bjorn.tipling.com/all-this">&lt;em>this&lt;/em> behavior&lt;/a> won’t be covered.&lt;/p>
&lt;p>As a teacher myself, I know that real learning comes from practicing. Each book chapter will be accompanied by a series of exercises to put the newly acquired skills into practice.&lt;/p>
&lt;p>I also know that students don’t like to lose hours configuring their environment before getting their feet wet. So there won’t be any complex setup: throughout the book, all you’ll need is a JavaScript playground (&lt;a href="http://codepen.io">CodePen&lt;/a> and &lt;a href="http://gomix.com">Gomix&lt;/a> are the recommended ones) for coding along.&lt;/p>
&lt;h3 id="publication">Publication&lt;/h3>
&lt;p>After much afterthought, I’ve decided to self-publish my book through &lt;a href="https://leanpub.com/thejsway">Leanpub&lt;/a> and to make its source code available on &lt;a href="https://github.com/bpesquet/thejsway">GitHub&lt;/a>.&lt;/p>
&lt;p>I’d like to reach as many people as possible, regardless of wealth. I also hope to leverage the open source collaborative model to improve and validate the content.&lt;/p>
&lt;p>The chosen license, Creative Commons &lt;a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">BY-NC-SA&lt;/a>, lets anyone share or build upon this work for non-commercial purposes, as long as it is properly attributed and using the same license.&lt;/p>
&lt;h3 id="lets-roll">Let’s roll!&lt;/h3>
&lt;p>Publishing a book is a lot of work, but also a pretty exciting journey. Thanks for reading this, and I hope you’ll soon join me on the JavaScript Way.&lt;/p></description></item><item><title>Admission Post-Bac côté recruteur</title><link>https://www.bpesquet.fr/posts/apb-cote-recruteur/</link><pubDate>Thu, 09 Jun 2016 20:56:38 +0000</pubDate><guid>https://www.bpesquet.fr/posts/apb-cote-recruteur/</guid><description>&lt;p>L’orientation scolaire des jeunes bacheliers français est un sujet sensible. Le fonctionnement du portail &lt;a href="http://www.admission-postbac.fr/">Admission Post-Bac&lt;/a> (APB), pierre angulaire du dispositif d’orientation, est source &lt;a href="http://www.studyrama.com/revision-examen/bac/admission-postbac-fr/apb-vos-questions-nos-reponses-sur-les-phases-d-84327">d’interrogations&lt;/a> et &lt;a href="http://www.francetvinfo.fr/bac/demoralises-decourages-les-lyceens-face-a-la-galere-des-admissions-post-bac_1489753.html">d’angoisses&lt;/a> pour de nombreux élèves et leurs familles.&lt;/p>
&lt;p>&lt;a href="http://www.lesitedaurel.com/">&lt;img src="images/1.jpeg" alt="image">&lt;/a>&lt;/p>
&lt;p>Pendant plusieurs années, j’ai été amené à piloter le recrutement d’une section de BTS dans un lycée public. Voici comment les choses se passent de l’intérieur.&lt;/p>
&lt;blockquote>
&lt;p>Ce témoignage est personnel et n’engage ni mon établissement, ni l’institution Education Nationale.&lt;/p>
&lt;/blockquote>
&lt;h3 id="tldr-pour-les-candidats">TL:DR pour les candidats&lt;/h3>
&lt;p>Voici quelques conseils pour maximiser vos chances d’être retenu(e) dans une formation sélective sur APB :&lt;/p>
&lt;ul>
&lt;li>Construisez-vous &lt;em>sur plusieurs années&lt;/em> un dossier scolaire d’élève méritant(e).&lt;/li>
&lt;li>Dans vos bulletins, évitez à tout pris les critiques sur le (manque de) travail, l’attitude en classe et les absences répétées.&lt;/li>
&lt;li>Envisagez un projet d’orientation en cohérence avec votre parcours. Dans le cas contraire, préparez-vous à devoir justifier votre choix.&lt;/li>
&lt;li>Soignez et personnalisez votre lettre de motivation.&lt;/li>
&lt;li>Essayez de rencontrer l’équipe pédagogique de la formation ciblée pour vous présenter et leur expliquer votre projet.&lt;/li>
&lt;li>Soyez réactif et restez optimiste pendant la phase d’admission.&lt;/li>
&lt;/ul>
&lt;h3 id="apb-pour-les-établissements-daccueil">APB pour les établissements d’accueil&lt;/h3>
&lt;p>Une très grande majorité des établissements d’enseignement supérieur français utilisent le portail APB pour gérer leur recrutement. Ils disposent d’une version adaptée à leurs besoins présentée dans &lt;a href="https://documentation.admission-postbac.fr/guide_usr_destinataire/A_Les_informations_de_base_05-01-2016.pdf">ce document&lt;/a>.&lt;/p>
&lt;p>A partir du mois de mai, un établissement présent sur APB peut consulter la liste complète des candidatures pour sa formation.&lt;/p>
&lt;p>&lt;img src="images/2.png" alt="image">&lt;/p>
&lt;p>L’ordre des voeux des candidats n’est pas accessible aux formations. La seule information donnée par APB est le total de voeux 1, autrement dit le nombre de candidats ayant classé la formation en première position dans leur liste de vœux.&lt;/p>
&lt;p>Courant mai, chaque établissement d’accueil examine toutes ces candidatures et génère un &lt;strong>classement&lt;/strong> qui sera utilisé par APB afin d’affecter les candidats. Pour une formation sélective, le classement répond à un double objectif :&lt;/p>
&lt;ul>
&lt;li>Retenir des candidats ayant le profil pour réussir dans la formation.&lt;/li>
&lt;li>Sélectionner un maximum de candidats ayant placé la formation dans leurs tous premiers voeux. En effet, ce sont les plus susceptibles de venir pour de bon plutôt que d’aller voir ailleurs : la concurrence existe aussi entre les établissements !&lt;/li>
&lt;/ul>
&lt;h3 id="le-classement-des-candidatures">Le classement des candidatures&lt;/h3>
&lt;p>Il n’existe pas de règle absolue pour classer les candidats à une formation. Chaque établissement est libre de choisir ses critères et d’appliquer sa propre politique.&lt;/p>
&lt;h4 id="lexamen-des-dossiers">L’examen des dossiers&lt;/h4>
&lt;p>Le portail APB permet aux établissements d’accéder au dossier scolaire des candidats, qui comprend notamment leurs bulletins des dernières années (notes + appréciations) ainsi que leurs résultats au bac pour les candidats déjà scolarisés dans le supérieur et en réorientation. Les établissements peuvent exploiter ces notes afin de calculer des moyennes servant à classer les candidats.&lt;/p>
&lt;p>A ce critère &lt;strong>quantitatif&lt;/strong> s’ajoute presque toujours un critère &lt;strong>qualitatif&lt;/strong> lié à l’étude du dossier de candidature. Pour la formation dont j’ai eu la responsabilité, chaque dossier se voyait attribué une note qualitative qui comptait pour un tiers de la note finale.&lt;/p>
&lt;p>Les avis et appréciations des différents bulletins sont examinés avec soin : un élève souvent qualifié de “sérieux” ou de “travailleur” verra sa candidature favorisée. A l’inverse, les mentions fortement négatives (“aucun travail”, “trop de bavardages”, etc) ainsi qu’un nombre élevé d’absences non justifiées sont des signaux d’alarme qui entraineront systématiquement une pénalisation, voire un rejet pur et simple de la candidature.&lt;/p>
&lt;p>D’après mon expérience personnelle en BTS, un établissement choisira un candidat moyen mais méritant plutôt qu’un bon candidat au dossier problématique. Un “des difficultés, mais fait des efforts” sera mieux perçu qu’un “n’exploite pas son potentiel”.&lt;/p>
&lt;p>Afin d’être certain de compléter ses effectifs, un établissement classe toujours bien plus de dossiers qu’il n’a de places disponibles. En revanche, les candidatures rejetées ne sont pas classées : dans ce cas, le candidat ne peut plus rejoindre la formation durant la phase d’admission (voir plus loin).&lt;/p>
&lt;h4 id="comment-sortir-du-lot-">Comment sortir du lot ?&lt;/h4>
&lt;p>Comme je l’ai évoqué plus haut, chaque formation tente “à l’aveugle” de classer en priorité des candidats réellement désireux de la rejoindre. Comme l’ordre des voeux est inaccessible aux établissements d’accueil, c’est au candidat d’agir afin de démontrer sa volonté réelle d’intégrer une formation. Les deux possibilités à sa disposition sont :&lt;/p>
&lt;ul>
&lt;li>Personnaliser et soigner sa &lt;strong>lettre de motivation&lt;/strong> afin de justifier explicitement son choix. La lecture de cette lettre fait partie intégrante de l’examen du dossier. Attention aux lettres trop génériques qui sentent le copier/coller, ou pire à une candidature en BTS qui commence par “Mon grand intérêt pour le DUT…” (j’en lis tous les ans). Toute candidature “exotique”, tout changement de filière et/ou d’académie doit impérativement être justifié en détail dans la lettre.&lt;/li>
&lt;li>Rencontrer l’équipe pédagogique par le biais des &lt;strong>salons&lt;/strong> et des &lt;strong>journées portes ouvertes&lt;/strong>. Ce sera l’occasion d’avoir une vision plus concrète de la formation et de vérifier la validité d’un projet d’orientation. Les établissements conservent souvent les coordonnées de leurs visiteurs et bonifient leur candidature quand ils les retrouvent quelques semaines plus tard dans APB.&lt;/li>
&lt;/ul>
&lt;h4 id="les-contraintes-externes">Les contraintes externes&lt;/h4>
&lt;p>La liberté de recrutement des établissements du supérieur est soumise à certaines contraintes, comme le nombre de places disponibles. Récemment, de nouvelles règles concernant l’origine scolaire des candidats ont vu le jour. Elles font suite à la volonté ministérielle d’offrir des débouchés à toutes les séries du baccalauréat, en particulier les sections technologiques (vers les IUT) et professionnelles (vers les BTS).&lt;/p>
&lt;p>Concrètement, les IUT se voient imposer un pourcentage minimal de bacheliers technologiques dans leur recrutement, et les BTS un pourcentage minimal de bacheliers professionnels. Pour l’académie de Lyon, les pourcentages de 2016 varient entre 6% et 50% selon le type de BTS. Ces chiffres sont destinés à augmenter dans les années à venir.&lt;/p>
&lt;blockquote>
&lt;p>Les établissements privés sous contrat, pourtant tout aussi concernés que les établissements publics par ces exigences, sont pour l’instant très peu nombreux à les appliquer. Cette situation injuste devra évoluer.&lt;/p>
&lt;/blockquote>
&lt;p>Conséquence logique : &lt;strong>il devient plus difficile d’intégrer un BTS ou un IUT après un baccalauréat général&lt;/strong>. C’est une donnée importante à prendre en compte dès la classe de Seconde pour choisir son orientation.&lt;/p>
&lt;p>Afin d’affiner leur recrutement et de respecter ces contraintes, les établissement d’accueil définissent souvent des &lt;strong>groupes&lt;/strong> de candidats selon leur série d’origine au baccalauréat. Il n’y a plus un classement unique mélangeant tous les dossiers, mais un classement pour chaque groupe.&lt;/p>
&lt;h3 id="la-phase-dadmission">La phase d’admission&lt;/h3>
&lt;p>Début juin commence sur APB la phase d’admission. A trois reprises, le logiciel exploite les classements remontés par chaque établissement et les voeux des candidats pour leur proposer (ou pas) une affectation.&lt;/p>
&lt;p>Les établissements d’accueil suivent attentivement les résultats d’admission afin d’éviter de se retrouver en déficit de candidats. Durant cette phase, chaque établissement a une vue actualisée au jour le jour de l’état de son recrutement.&lt;/p>
&lt;p>&lt;img src="images/3.png" alt="image">&lt;/p>
&lt;p>Il peut se passer beaucoup de choses pendant la phase d’admission :&lt;/p>
&lt;ul>
&lt;li>Certains candidats sortent des classements en cas de départ en apprentissage ou vers une formations hors APB, d’échec au baccalauréat ou de démission.&lt;/li>
&lt;li>Les établissements peuvent rectifier leurs &lt;strong>données d’appel&lt;/strong>, c’est-à-dire le nombre de candidats qu’ils souhaitent appeler pour chacun de leurs groupes. C’est notamment le cas lorsqu’une liste de classement est épuisée (plus aucun candidat à appeler dans un groupe).&lt;/li>
&lt;/ul>
&lt;p>Les candidats doivent surveiller avec attention l’évolution des résultats d’admission, afin de respecter les délais de réponse imposés par APB. Malgré l’incertitude et le stress inhérents à cette phase, il faut essayer de rester optimiste et positif : les propositions d’APB ne peuvent évoluer que dans leur sens, et il est fréquent que des situations se débloquent entre le début et la fin de la phase d’admission.&lt;/p>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>J’espère que ce rapide tour d’horizon vous aura permis de mieux comprendre comment les établissements de formation peuvent gérer leur recrutement post-bac.&lt;/p>
&lt;p>Bonne orientation avec APB !&lt;/p></description></item><item><title>Pourquoi JavaScript est devenu essentiel</title><link>https://www.bpesquet.fr/posts/pourquoi-javascript-est-devenu-essentiel/</link><pubDate>Wed, 17 Feb 2016 09:42:35 +0000</pubDate><guid>https://www.bpesquet.fr/posts/pourquoi-javascript-est-devenu-essentiel/</guid><description>&lt;p>&lt;a href="http://somethingkindawierd.com/presentations/native-javascript/presentation/index.html">&lt;img src="images/1.jpeg" alt="Eating the world">&lt;/a>&lt;/p>
&lt;p>Pour plusieurs générations de développeurs et d’enseignants en informatique, le langage JavaScript a une image fortement négative. Mal fichu, plein de limitations et de défauts. il serait tout juste bon à animer des pages Web et rien de plus.&lt;/p>
&lt;p>Tout cela était vrai à l’époque où JavaScript n’était qu’un langage de script peu standardisé et cantonné au petit monde des navigateurs Web.&lt;/p>
&lt;p>Mais les choses ont changé.&lt;/p>
&lt;p>Je résume ici les principaux arguments développés dans l’excellent article &lt;a href="https://medium.com/triled-engineering/why-you-should-embrace-javascript-64b2b8209145#.geu6ljwjh">Why you should embrace JavaScript&lt;/a> de &lt;a href="https://medium.com/u/326ef1bd6e31">Maarten Huijsmans&lt;/a>, dont je vous recommande la lecture.&lt;/p>
&lt;ul>
&lt;li>Unique langage de programmation reconnu par tous les navigateurs Web, JavaScript est maintenant implanté côté serveur grâce à &lt;a href="https://nodejs.org/">Node.js&lt;/a> et pour le développement d’applications mobiles multi-plateformes, avec des outils comme &lt;a href="https://cordova.apache.org/">Cordova&lt;/a>, &lt;a href="http://ionic.io/">Ionic&lt;/a> ou &lt;a href="https://facebook.github.io/react-native/">React Native&lt;/a>. On le retrouve dans le monde du stockage de données (&lt;a href="https://www.mongodb.org/">MongoDB&lt;/a>) et dans celui, encore en chantier, des objets connectés.&lt;/li>
&lt;li>Les optimisations réalisées pour accélérer le rendu des sites Web dans les navigateurs ont boosté les performances du langage.&lt;/li>
&lt;li>Il dispose d’un foisonnant écosystème de composants centré autour de la plate-forme &lt;a href="https://www.npmjs.com/">npm&lt;/a> et d’une immense communauté de développeurs.&lt;/li>
&lt;li>Ses défauts de jeunesse sont peu à peu gommés par les évolutions du langage, et notamment la norme &lt;a href="https://babeljs.io/docs/learn-es2015/">ES6/ES2015&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>On peut ajouter d’autres aspects qui jouent en faveur de JavaScript.&lt;/p>
&lt;ul>
&lt;li>Une fois ses spécificités digérées, le langage JavaScript s’avère riche et peut offrir une belle expérience de développement. De nombreux outils sont apparus pour faciliter la vie (et donc augmenter la productivité) du développeur JavaScript : détection d’erreurs et de maladresses dans le code, débogage, optimisation, etc. Lisez &lt;a href="https://medium.com/javascript-scene/must-see-javascript-dev-tools-that-put-other-dev-tools-to-shame-aca6d3e3d925#.h2bej6zam">cet article&lt;/a> d’&lt;a href="https://medium.com/u/c359511de780">Eric Elliott&lt;/a> pour découvrir des outils essentiels tels que &lt;a href="http://babeljs.io/">Babel&lt;/a> ou &lt;a href="http://eslint.org/">ESLint&lt;/a>.&lt;/li>
&lt;li>Maîtriser JavaScript est nécessaire pour créer les applications Web de demain. Tous les services modernes qui offrent sur le Web une &lt;a href="https://fr.wikipedia.org/wiki/Exp%C3%A9rience_utilisateur">expérience utilisateur&lt;/a> proche de celle d’une application native (&lt;a href="https://fr.wikipedia.org/wiki/Google_Documents">Google Docs&lt;/a>, &lt;a href="https://www.uber.com/">Uber&lt;/a>, &lt;a href="http://www.airbnb.com/">AirBnb&lt;/a>…) font un usage intensif de JavaScript, souvent par le biais de &lt;em>frameworks&lt;/em> comme &lt;a href="https://angularjs.org/">AngularJS&lt;/a> ou de librairies comme &lt;a href="https://facebook.github.io/react/">React&lt;/a>.&lt;/li>
&lt;li>Pour les développeurs, le marché français de l’emploi avant bac+5 est centré sur le Web. A l’heure actuelle, la compétence en JavaScript est recherchée par de nombreux employeurs : c’est donc un atout précieux pour l’employabilité.&lt;/li>
&lt;/ul>
&lt;p>Qu’on le veuille ou non, JavaScript est partout. L’ignorer, c’est laisser le monde du développement logiciel avancer sans vous. Le combattre, c’est gaspiller du temps et de l’énergie.&lt;/p>
&lt;p>Et si vous l’adoptiez plutôt ?&lt;/p></description></item></channel></rss>