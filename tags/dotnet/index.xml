<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dotnet on Baptiste Pesquet</title><link>https://www.bpesquet.fr/tags/dotnet/</link><description>Baptiste Pesquet (dotnet)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 26 Sep 2022 15:12:20 +0200</lastBuildDate><atom:link href="https://www.bpesquet.fr/tags/dotnet/index.xml" rel="self" type="application/rss+xml"/><item><title>Entity Framework Core</title><link>https://www.bpesquet.fr/slides/efcore/</link><pubDate>Mon, 26 Sep 2022 15:12:20 +0200</pubDate><guid>https://www.bpesquet.fr/slides/efcore/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Des objets et des tables&lt;/li>
&lt;li>Présentation d&amp;rsquo;EF Core&lt;/li>
&lt;li>Mise en oeuvre d&amp;rsquo;EF Core&lt;/li>
&lt;li>Mapping d&amp;rsquo;un modèle métier&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="des-objets-et-des-tables" >Des objets et des tables
&lt;span>
&lt;a href="#des-objets-et-des-tables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="les-données-persistantes" >Les données persistantes
&lt;span>
&lt;a href="#les-donn%c3%a9es-persistantes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Ne disparaissent pas entre deux utilisations d&amp;rsquo;une application.&lt;/li>
&lt;li>Contraire : données &lt;em>volatiles&lt;/em>.&lt;/li>
&lt;li>Indispensable pour une très grande majorité des applications (données métier, configuration, etc).&lt;/li>
&lt;li>Leur stockage nécessite :
&lt;ul>
&lt;li>un support dédié, appelé parfois mémoire de masse (disque dur, SSD, mémoire Flash, etc) ;&lt;/li>
&lt;li>un format adapté.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="les-sgbdr-et-leurs-avantages" >Les SGBDR et leurs avantages
&lt;span>
&lt;a href="#les-sgbdr-et-leurs-avantages">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Standard actuel pour la gestion de données persistantes.&lt;/li>
&lt;li>Technologie connue depuis les années 1970.&lt;/li>
&lt;li>Fiabilité.&lt;/li>
&lt;li>Capacité à gérer de forts volumes de données.&lt;/li>
&lt;li>Sécurité (authentification, réplication, etc).&lt;/li>
&lt;li>Langage d’interrogation (SQL) standard.&lt;/li>
&lt;li>Offre logicielle riche : de ORACLE à SQLite en passant par PostgreSQL, MySQL/MariaDB ou SQL Server.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="le-modèle-relationnel" >Le modèle relationnel
&lt;span>
&lt;a href="#le-mod%c3%a8le-relationnel">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Unité de représentation : table.&lt;/li>
&lt;li>Caractéristiques : colonnes.&lt;/li>
&lt;li>Entité : tuple (ligne).&lt;/li>
&lt;li>Types de données : simples (nombres, chaîne, date, etc).&lt;/li>
&lt;li>Identifiant : explicite (clé primaire).&lt;/li>
&lt;li>Relations entre éléments : jointures SQL.&lt;/li>
&lt;li>Concepts spécifiques : déclencheurs, procédures stockées&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="le-modèle-objet" >Le modèle objet
&lt;span>
&lt;a href="#le-mod%c3%a8le-objet">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Unité de représentation : classe.&lt;/li>
&lt;li>Caractéristiques : propriétés et méthodes.&lt;/li>
&lt;li>Entité : objet.&lt;/li>
&lt;li>Types de données : simples ou complexes.&lt;/li>
&lt;li>Identifiant : implicite (référence mémoire).&lt;/li>
&lt;li>Relations entre éléments : navigation des associations.&lt;/li>
&lt;li>Concepts spécifiques : encapsulation, héritage, interfaces&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="objectrelational-mapping-orm" >Object/Relational Mapping (O/RM)
&lt;span>
&lt;a href="#objectrelational-mapping-orm">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Lien entre une base de données et les objets manipulés par l’application.&lt;/li>
&lt;li>Deux modèles très éloignés (&amp;quot;&lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_impedance_mismatch">Impedance mismatch&lt;/a>&amp;quot;).&lt;/li>
&lt;li>Pas de solution idéale.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="orm-is-the-vietnam-of-computer-sciencehttpsblogcodinghorrorcomobject-relational-mapping-is-the-vietnam-of-computer-science" >&lt;a href="https://blog.codinghorror.com/object-relational-mapping-is-the-vietnam-of-computer-science/">&amp;ldquo;O/RM is the Vietnam of Computer Science&amp;rdquo;&lt;/a>
&lt;span>
&lt;a href="#orm-is-the-vietnam-of-computer-sciencehttpsblogcodinghorrorcomobject-relational-mapping-is-the-vietnam-of-computer-science">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/orm_vietnam.png" alt="Welcome to the jungle!">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="solutions-possibles-pour-lorm" >Solutions possibles pour l&amp;rsquo;O/RM
&lt;span>
&lt;a href="#solutions-possibles-pour-lorm">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approches radicales : suppression du SGBDR (utilisation d&amp;rsquo;une autre technologie de stockage) ou des objets (programmation procédurale ou fonctionnelle).&lt;/li>
&lt;li>O/RM manuel : gestion de la (dé)connexion, requêtage avec SQL puis transformation des résultats en objets, etc doivent être codées.&lt;/li>
&lt;li>O/RM automatisé : utilisation d&amp;rsquo;un outil dédié pour gérer les problématiques précédentes. Le requêtage SQL est effectué par l&amp;rsquo;outil.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="orm-automatisé-un-bon-choix-" >O/RM automatisé, un bon choix ?
&lt;span>
&lt;a href="#orm-automatis%c3%a9-un-bon-choix-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Avantages :
&lt;ul>
&lt;li>Automatisation de la gestion du &lt;em>mapping&lt;/em>.&lt;/li>
&lt;li>Diminution du volume de code.&lt;/li>
&lt;li>Mise en œuvre de bonnes pratiques.&lt;/li>
&lt;li>Performances (le plus souvent).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Inconvénients :
&lt;ul>
&lt;li>Nécessité de maitriser un outil dédié.&lt;/li>
&lt;li>Certaines limitations liées à l’outil.&lt;/li>
&lt;li>Aspect &amp;ldquo;boîte noire&amp;rdquo;.&lt;/li>
&lt;li>Performances (dans certains cas).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="présentation-def-core" >Présentation d&amp;rsquo;EF Core
&lt;span>
&lt;a href="#pr%c3%a9sentation-def-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="entity-framework-core" >Entity Framework Core
&lt;span>
&lt;a href="#entity-framework-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Outil d&amp;rsquo;O/RM &lt;a href="https://github.com/dotnet/efcore">open source&lt;/a> maintenu par Microsoft.&lt;/li>
&lt;li>Supporte de nombreux SGDBR : SQL Server, SQLite, MySQL/MariaDB, PostgreSQL, etc.&lt;/li>
&lt;li>Standard pour l&amp;rsquo;accès aux données persistantes dans l&amp;rsquo;environnement ASP.NET Core.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="sqlite" >SQLite
&lt;span>
&lt;a href="#sqlite">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>SGBDR minimaliste mais suffisamment fiable, complet et performant pour la plupart des usages standards.&lt;/li>
&lt;li>Toute la base de données tient dans un seul fichier de quelques dizaines/centaines de Ko.&lt;/li>
&lt;li>&lt;a href="https://sqlite.org/mostdeployed.html">&amp;ldquo;Le SGBD le plus utilisé dans le monde&amp;rdquo;&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://sqlite.org">&lt;img src="images/sqlite370_banner.gif" alt="Logo SQLite">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="installation-def-core-pour-sqlite" >Installation d&amp;rsquo;EF Core pour SQLite
&lt;span>
&lt;a href="#installation-def-core-pour-sqlite">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Installation globale de l&amp;rsquo;outil EF Core CLI :&lt;/p>
&lt;p>&lt;code>&amp;gt; dotnet tool install --global dotnet-ef&lt;/code>&lt;/p>
&lt;p>Installation des packages nécessaires dans le répertoire du projet :&lt;/p>
&lt;p>&lt;code>&amp;gt; dotnet add package Microsoft.EntityFrameworkCore.Design&lt;/code>&lt;/p>
&lt;p>&lt;code>&amp;gt; dotnet add package Microsoft.EntityFrameworkCore.Sqlite&lt;/code>&lt;/p>
&lt;hr>
&lt;h3 id="support-de-sqlite-par-ef-core" >Support de SQLite par EF Core
&lt;span>
&lt;a href="#support-de-sqlite-par-ef-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Des &lt;a href="https://docs.microsoft.com/en-us/ef/core/providers/?tabs=dotnet-core-cli">fournisseurs de données&lt;/a> permettent l&amp;rsquo;utilisation de EF Core avec un grand nombre de sources de données, dont SQLite.&lt;/li>
&lt;li>Son fournisseur possède cependant certaines petites &lt;a href="https://docs.microsoft.com/en-us/ef/core/providers/sqlite/limitations">limitations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="principe-de-fonctionnement-def-core" >Principe de fonctionnement d&amp;rsquo;EF Core
&lt;span>
&lt;a href="#principe-de-fonctionnement-def-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Modèle&lt;/strong> : un ensemble de classes POCO, parfois appelées &lt;em>classes métier&lt;/em>, qui modélisent les entités manipulées par l&amp;rsquo;application.&lt;/li>
&lt;li>&lt;strong>Contexte BD&lt;/strong> : une classe héritant de &lt;code>DbContext&lt;/code> qui représente une session d&amp;rsquo;échanges (lecture/écriture de données) avec une BD. Elle spécifie les classes du modèle à synchroniser avec la BD.&lt;/li>
&lt;li>&lt;strong>BD&lt;/strong> : la base de données dans laquelle les instances du modèle sont lues/écrites.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="migrations" >Migrations
&lt;span>
&lt;a href="#migrations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approche &lt;em>&lt;strong>code first&lt;/strong>&lt;/em> : le modèle objet constitue la modélisation de référence. La base de données est automatiquement synchronisée avec lui.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/ef/core/managing-schemas/migrations/?tabs=dotnet-core-cli">Migrations&lt;/a> : modifications incrémentales du schéma relationnel reflétant les évolutions du modèle.&lt;/li>
&lt;li>Permettent à la BD d&amp;rsquo;être synchronisée avec les évolutions du modèle, sans perte de données.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="commandes-liées-aux-migrations" >Commandes liées aux migrations
&lt;span>
&lt;a href="#commandes-li%c3%a9es-aux-migrations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet ef migrations add {MigrationName}&lt;/code>&lt;/p>
&lt;p>Crée une nouvelle migration dans le répertoire &lt;strong>Migrations/&lt;/strong> du projet. Elle contient les mises à jour à réaliser au niveau du schéma relationnel pour le synchroniser avec le modèle objet.&lt;/p>
&lt;p>&lt;code>&amp;gt; dotnet ef database update&lt;/code>&lt;/p>
&lt;p>Synchronise la base de données configurée par le contexte BD avec la migration la plus récente.&lt;/p>
&lt;hr>
&lt;h3 id="interactions-avec-la-bd" >Interactions avec la BD
&lt;span>
&lt;a href="#interactions-avec-la-bd">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;instanciation d&amp;rsquo;un contexte BD permet de débuter une session de travail avec la base de données.&lt;/li>
&lt;li>Sa méthode &lt;code>SaveChanges()&lt;/code> implante dans la BD tous les changements ayant eu lieu depuis l&amp;rsquo;ouverture de la session.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> {App}Context())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ... (Opérations on model classes)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Synchronize all changes with database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="mise-en-oeuvre-def-core" >Mise en oeuvre d&amp;rsquo;EF Core
&lt;span>
&lt;a href="#mise-en-oeuvre-def-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="exemple-de-modèle-métier" >Exemple de modèle métier
&lt;span>
&lt;a href="#exemple-de-mod%c3%a8le-m%c3%a9tier">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/efcore_blog_uml.png" alt="Exemple de modèle EF Core">&lt;/p>
&lt;hr>
&lt;h3 id="création-de-lapplication" >Création de l&amp;rsquo;application
&lt;span>
&lt;a href="#cr%c3%a9ation-de-lapplication">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet new console -o EFBlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd EFBlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet new gitignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet add package Microsoft.EntityFrameworkCore.Design
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet add package Microsoft.EntityFrameworkCore.Sqlite
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csproj" data-lang="csproj">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;Project&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Sdk=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;Microsoft.NET.Sdk&amp;#34;&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;OutputType&amp;gt;&lt;/span>Exe&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/OutputType&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;TargetFramework&amp;gt;&lt;/span>net6.0&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/TargetFramework&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;ImplicitUsings&amp;gt;&lt;/span>enable&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/ImplicitUsings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;Nullable&amp;gt;&lt;/span>enable&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/Nullable&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;ItemGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PackageReference&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Include=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;Microsoft.EntityFrameworkCore.Design&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Version=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;6.0.9&amp;#34;&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;IncludeAssets&amp;gt;&lt;/span>runtime; build; native; contentfiles; analyzers; buildtransitive&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/IncludeAssets&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PrivateAssets&amp;gt;&lt;/span>all&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/PrivateAssets&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/PackageReference&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PackageReference&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Include=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;Microsoft.EntityFrameworkCore.Sqlite&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Version=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;6.0.9&amp;#34;&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/ItemGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/Project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="implémentation-du-modèle" >Implémentation du modèle
&lt;span>
&lt;a href="#impl%c3%a9mentation-du-mod%c3%a8le">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Chaque classe est codée dans son propre fichier &lt;code>.cs&lt;/code>, dans le sous-répertoire &lt;code>Models/&lt;/code> du projet.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Url { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> List&amp;lt;Post&amp;gt; Posts { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> List&amp;lt;Post&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Title { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Content { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> BlogId { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> Blog Blog { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="lopérateur-de-null-suppression" >L&amp;rsquo;opérateur de null-suppression
&lt;span>
&lt;a href="#lop%c3%a9rateur-de-null-suppression">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Appelée aussi &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/null-forgiving">null-forgiving operator&lt;/a>.&lt;/li>
&lt;li>Précise au compilateur qu&amp;rsquo;une expression de type référence ne vaudra jamais &lt;code>null&lt;/code> (donc qu&amp;rsquo;elle pourra être déréférencée sans risque).&lt;/li>
&lt;li>&lt;code>= null!&lt;/code> permet d&amp;rsquo;&lt;a href="https://learn.microsoft.com/en-us/ef/core/miscellaneous/nullable-reference-types">initialiser les propriétés C# gérées par EF Core&lt;/a> dans le contexte &lt;em>null-aware&lt;/em> de .NET 6+.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://youtu.be/g25G1M4EXrQ?t=93">&lt;img src="images/we-choose.png" alt="JKK &amp;lsquo;62 speech">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="création-du-contexte-bd" >Création du contexte BD
&lt;span>
&lt;a href="#cr%c3%a9ation-du-contexte-bd">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Classe créée dans le sous-répertoire &lt;code>Data/&lt;/code> du projet.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.Extensions.Logging;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> BloggingContext : DbContext
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;Blog&amp;gt; Blogs { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;Post&amp;gt; Posts { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DbPath { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> BloggingContext()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Path to SQLite database file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DbPath = &lt;span style="color:#0086d2">&amp;#34;EFBlog.db&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The following configures EF to create a SQLite database file locally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">protected&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">override&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> OnConfiguring(DbContextOptionsBuilder options)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use SQLite as database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.UseSqlite(&lt;span style="color:#0086d2">$&amp;#34;Data Source={DbPath}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Optional: log SQL queries to console&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.LogTo(Console.WriteLine, &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span>[] { DbLoggerCategory.Database.Command.Name }, LogLevel.Information);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="initialisation-de-la-base-de-données" >Initialisation de la base de données
&lt;span>
&lt;a href="#initialisation-de-la-base-de-donn%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>(&lt;code>dotnet-ef&lt;/code> doit avoir été installé globalement)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet ef migrations add InitialCreate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet ef database update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="extrait-de-la-migration-créée" >Extrait de la migration créée
&lt;span>
&lt;a href="#extrait-de-la-migration-cr%c3%a9%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>migrationBuilder.CreateTable(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#0086d2">&amp;#34;Blogs&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> columns: table =&amp;gt; &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = table.Column&amp;lt;&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>&amp;gt;(type: &lt;span style="color:#0086d2">&amp;#34;INTEGER&amp;#34;&lt;/span>, nullable: &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Annotation(&lt;span style="color:#0086d2">&amp;#34;Sqlite:Autoincrement&amp;#34;&lt;/span>, &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Url = table.Column&amp;lt;&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>&amp;gt;(type: &lt;span style="color:#0086d2">&amp;#34;TEXT&amp;#34;&lt;/span>, nullable: &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> constraints: table =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.PrimaryKey(&lt;span style="color:#0086d2">&amp;#34;PK_Blogs&amp;#34;&lt;/span>, x =&amp;gt; x.Id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="base-de-données-créée" >Base de données créée
&lt;span>
&lt;a href="#base-de-donn%c3%a9es-cr%c3%a9%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Capture d&amp;rsquo;écran de &lt;a href="https://sqlitebrowser.org/">DB Browser pour SQLite&lt;/a> :&lt;/p>
&lt;p>&lt;img src="images/efcore_blog_schema.png" alt="Schéma BD généré par EF Core">&lt;/p>
&lt;p>La colonne &lt;code>BlogId&lt;/code> est une clé étrangère vers la colonne &lt;code>Id&lt;/code> de la table &lt;code>Blogs&lt;/code>.&lt;/p>
&lt;hr>
&lt;h3 id="structure-de-lapplication" >Structure de l&amp;rsquo;application
&lt;span>
&lt;a href="#structure-de-lapplication">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-glog/EFBlog">https://github.com/ensc-glog/EFBlog&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/efcore-efblog.png" alt="Structure de l&amp;rsquo;application d&amp;rsquo;exemple">&lt;/p>
&lt;hr>
&lt;h3 id="opérations-crud" >Opérations CRUD
&lt;span>
&lt;a href="#op%c3%a9rations-crud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;--- Inserting a new blog ---&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.Add(&lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Blog { Url = &lt;span style="color:#0086d2">&amp;#34;http://blogs.msdn.com/adonet&amp;#34;&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;--- Retrieve blog with lowest id ---&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blog = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .OrderBy(b =&amp;gt; b.Id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .First();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;--- Updating the blog and adding a post ---&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> blog.Url = &lt;span style="color:#0086d2">&amp;#34;https://devblogs.microsoft.com/dotnet&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> blog.Posts.Add(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Post { Title = &lt;span style="color:#0086d2">&amp;#34;Hello World&amp;#34;&lt;/span>, Content = &lt;span style="color:#0086d2">&amp;#34;I wrote an app using EF Core!&amp;#34;&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;--- Deleting the blog ---&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.Remove(blog);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="requêtage-avec-linq" >Requêtage avec LINQ
&lt;span>
&lt;a href="#requ%c3%aatage-avec-linq">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/">Language Integrated Query (LINQ)&lt;/a> est le langage standard pour le requêtage en C#, quelle que soit la source de données (SGBDR, XML, service web, etc).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Retrieve a list of blogs with a rating greater than 3,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ordered by URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Where(b =&amp;gt; b.Rating &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .OrderBy(b =&amp;gt; b.Url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemples-dutilisation-de-linq" >Exemples d&amp;rsquo;utilisation de LINQ
&lt;span>
&lt;a href="#exemples-dutilisation-de-linq">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get all blogs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = context.Blogs.ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get the blog with id 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blog = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Single(b =&amp;gt; b.Id == &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get all blogs containing &amp;#34;dotnet&amp;#34; in their URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Where(b =&amp;gt; b.Url.Contains(&lt;span style="color:#0086d2">&amp;#34;dotnet&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Plus de détails :&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/">Querying data&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/basic-linq-query-operations">Basic LINQ Query Operations&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="syntaxe-alternative-pour-linq" >Syntaxe alternative pour LINQ
&lt;span>
&lt;a href="#syntaxe-alternative-pour-linq">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Pour plus de souplesse, il est possible de manipuler des requêtes LINQ en tant que variables.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get all blogs containing &amp;#34;dotnet&amp;#34; in their URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> query = &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> b &lt;span style="color:#fb660a;font-weight:bold">in&lt;/span> context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">select&lt;/span> b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> query = query.Where(b =&amp;gt; b.Url.Contains(&lt;span style="color:#0086d2">&amp;#34;dotnet&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = query.ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="mapping-dun-modèle-métier" >Mapping d&amp;rsquo;un modèle métier
&lt;span>
&lt;a href="#mapping-dun-mod%c3%a8le-m%c3%a9tier">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="configuration-du-modèle" >Configuration du modèle
&lt;span>
&lt;a href="#configuration-du-mod%c3%a8le">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Effectuée via des &lt;a href="https://docs.microsoft.com/en-us/ef/core/modeling/entity-properties?tabs=data-annotations%2Cwithout-nrt">annotations&lt;/a> dans les classes du modèle.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(200, MinimumLength = 7), Required]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Url { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [Display(Name = &amp;#34;Average Rating&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [Column(TypeName = &amp;#34;decimal(5, 2)&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [DisplayFormat(NullDisplayText = &amp;#34;No rating&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">decimal?&lt;/span> Rating { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="propriétés-obligatoires-et-optionnelles" >Propriétés obligatoires et optionnelles
&lt;span>
&lt;a href="#propri%c3%a9t%c3%a9s-obligatoires-et-optionnelles">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une propriété est considérée comme optionnelle si elle peut contenir &lt;code>null&lt;/code>. La colonne BD associée accepte les valeurs nulles.&lt;/li>
&lt;li>L&amp;rsquo;attribut &lt;code>[Required]&lt;/code> permet de rendre obligatoire une propriété ayant un type référence (exemple : &lt;code>string&lt;/code>).&lt;/li>
&lt;li>L&amp;rsquo;utilisation d&amp;rsquo;un &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-value-types">type valeur nullable&lt;/a> (exemples : &lt;code>int?&lt;/code>, &lt;code>bool?&lt;/code>) rend la propriété optionnelle.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="clés-primaires" >Clés primaires
&lt;span>
&lt;a href="#cl%c3%a9s-primaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une propriété nommée &lt;code>Id&lt;/code> ou &lt;code>{NomDeLaClasse}Id&lt;/code> est considérée comme clé primaire.&lt;/li>
&lt;li>Par défaut, une stratégie d&amp;rsquo;&lt;a href="https://docs.microsoft.com/en-us/ef/core/modeling/generated-properties?tabs=data-annotations">auto-génération des valeurs&lt;/a> est utilisée.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/ef/core/modeling/keys?tabs=data-annotations">Plus de détails&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="mapping-des-associations" >Mapping des associations
&lt;span>
&lt;a href="#mapping-des-associations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une propriété utilisant un type autre que scalaire est dite &lt;strong>propriété de navigation&lt;/strong>.&lt;/li>
&lt;li>La détection d&amp;rsquo;une propriété de navigation entraine la création d&amp;rsquo;une &lt;strong>relation&lt;/strong> entre les deux classes impliquées.&lt;/li>
&lt;li>Cette relation se traduit dans la base de données par la création d&amp;rsquo;une &lt;strong>clé étrangère&lt;/strong> dans la table associée à la classe dépendante (fille) de la relation.&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/ef/core/modeling/relationships">Plus de détails&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="association-un-à-plusieurs" >Association un-à-plusieurs
&lt;span>
&lt;a href="#association-un-%c3%a0-plusieurs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Propriété de navigation de type collection dans la classe principale (mère).&lt;/li>
&lt;li>Propriété de navigation et propriété de clé étrangère dans la classe dépendante (fille).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> List&amp;lt;Post&amp;gt; Posts { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> List&amp;lt;Post&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> BlogId { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// FK&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> Blog Blog { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Navigation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="association-un-à-un" >Association un-à-un
&lt;span>
&lt;a href="#association-un-%c3%a0-un">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> BlogImage BlogImage { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> BlogImage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">byte&lt;/span>[] Image { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Caption { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> BlogId { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// FK&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> Blog Blog { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="association-plusieurs-à-plusieurs" >Association plusieurs-à-plusieurs
&lt;span>
&lt;a href="#association-plusieurs-%c3%a0-plusieurs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Entraîne la création d&amp;rsquo;une table de jointure contenant deux clés étrangères dans la base de données.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> ICollection&amp;lt;Tag&amp;gt; Tags { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Tag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> ICollection&amp;lt;Post&amp;gt; Posts { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="chargement-des-associations" >Chargement des Associations
&lt;span>
&lt;a href="#chargement-des-associations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les méthodes &lt;code>.Include()&lt;/code> et &lt;code>.ThenInclude()&lt;/code> permettent de spécifier les données associées à inclure dans les résultats d&amp;rsquo;une requête.&lt;/li>
&lt;li>Ce mécanisme est appelé &lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/related-data/eager">chargement hâtif&lt;/a> (&lt;em>eager loading&lt;/em>).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Load posts for each blog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Uncomment the .ThenInclude line to load post author&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Include(blog =&amp;gt; blog.Posts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// .ThenInclude(post =&amp;gt; post.Author)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mapping-de-lhéritage" >Mapping de l&amp;rsquo;héritage
&lt;span>
&lt;a href="#mapping-de-lh%c3%a9ritage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Problème épineux : les SGBDR ne supportent pas le concept d’héritage.&lt;/li>
&lt;li>Plusieurs stratégies possibles, avec chacune des avantages et des inconvénients :
&lt;ul>
&lt;li>une table pour toute la hiérarchie (TPH) ;&lt;/li>
&lt;li>une table par classe concrète (TPC) ;&lt;/li>
&lt;li>une table par type (TPT).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Le choix dépend du contexte. Donnée-clé : nombre de propriétés communes.&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/ef/core/modeling/inheritance">Plus de détails&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="la-stratégie-tph-avec-ef-core" >La stratégie TPH avec EF Core
&lt;span>
&lt;a href="#la-strat%c3%a9gie-tph-avec-ef-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Solution par défaut (souvent la plus simple).&lt;/li>
&lt;li>Ajoute à l&amp;rsquo;unique table qui mappe la hiérarchie :
&lt;ul>
&lt;li>une colonne par propriété de chacune des classes de la hiérarchie ;&lt;/li>
&lt;li>une colonne &lt;code>Discriminator&lt;/code> qui détermine le type concret de l&amp;rsquo;objet stocké en BD.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-mapping-de-lhéritage" >Exemple de mapping de l&amp;rsquo;héritage
&lt;span>
&lt;a href="#exemple-de-mapping-de-lh%c3%a9ritage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">internal&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> BloggingContext : DbContext
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;Blog&amp;gt; Blogs { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;RssBlog&amp;gt; RssBlogs { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> BlogId { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> RssBlog : Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> RssUrl { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="schéma-bd-après-migration" >Schéma BD après migration
&lt;span>
&lt;a href="#sch%c3%a9ma-bd-apr%c3%a8s-migration">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet ef migrations add RssBlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet ef database update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="images/efcore_tph_tables.png" alt="Stratégie TPH - Tables">&lt;/p>
&lt;p>&lt;img src="images/inheritance-tph-data.png" alt="Stratégie YPH - Enregistrements">&lt;/p></description></item><item><title>.NET et C#</title><link>https://www.bpesquet.fr/slides/dotnet-csharp/</link><pubDate>Tue, 20 Sep 2022 10:27:11 +0200</pubDate><guid>https://www.bpesquet.fr/slides/dotnet-csharp/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Introduction à .NET&lt;/li>
&lt;li>La notion de programme&lt;/li>
&lt;li>Premiers pas avec C#&lt;/li>
&lt;li>Guide de codage C#&lt;/li>
&lt;li>Variables, valeurs et types&lt;/li>
&lt;li>Expressions&lt;/li>
&lt;li>Conditions et alternatives&lt;/li>
&lt;li>Structures répétitives&lt;/li>
&lt;li>Sous-programmes&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="introduction-à-net" >Introduction à .NET
&lt;span>
&lt;a href="#introduction-%c3%a0-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="aux-origines-de-net" >Aux origines de .NET
&lt;span>
&lt;a href="#aux-origines-de-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Plate-forme de développement d&amp;rsquo;applications créée par Microsoft en 2002.&lt;/li>
&lt;li>Réponse à la domination de Java (premier langage multi-plateformes).&lt;/li>
&lt;li>Inclut plusieurs langages de programmation : C#, VB.NET, F#, PowerShell&amp;hellip;&lt;/li>
&lt;li>A l&amp;rsquo;origine :
&lt;ul>
&lt;li>Uniquement disponible sous Windows.&lt;/li>
&lt;li>Licence propriétaire.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/.NET_Framework">&lt;img src="images/dotnet_stack.png" alt="Pile .NET">&lt;/a>&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="architecture-technique-de-net" >Architecture technique de .NET
&lt;span>
&lt;a href="#architecture-technique-de-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une application .NET s&amp;rsquo;exécute dans un environnement contrôlé appelé &lt;a href="https://github.com/dotnet/runtime/blob/main/docs/design/coreclr/botr/intro-to-clr.md">CLR&lt;/a> (&lt;em>Common Language Runtime&lt;/em>).&lt;/li>
&lt;li>La compilation du code source produit un résultat indépendant du système d&amp;rsquo;exploitation, conformément à un standard nommé &lt;strong>CIL&lt;/strong> (&lt;em>Common Intermediate Language&lt;/em>).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Common_Language_Infrastructure">&lt;img src="images/dotnet_cli_clr.png" alt="CLI et CLR">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="net-framework-et-net-core" >.NET Framework et .NET Core
&lt;span>
&lt;a href="#net-framework-et-net-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://www.mono-project.com/docs/about-mono/history/">2004&lt;/a> : le projet &lt;strong>Mono&lt;/strong>, indépendant de Microsoft, débute le portage de .NET vers Linux.&lt;/li>
&lt;li>&lt;a href="https://devblogs.microsoft.com/dotnet/net-core-is-open-source/">2014&lt;/a> : Microsoft publie &lt;strong>.NET Core&lt;/strong>, la première version open source et multi-plateformes de .NET. La version WIndows-only de .NET est renommée &lt;strong>.NET Framework&lt;/strong>.&lt;/li>
&lt;li>&lt;a href="https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/">2019&lt;/a> : la nouvelle version de .NET Core est renommée &lt;strong>.NET&lt;/strong>, et .NET Framework passe en mode maintenance.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="net-5--multiplateforme-par-défaut" >.NET 5+ : multiplateforme par défaut
&lt;span>
&lt;a href="#net-5--multiplateforme-par-d%c3%a9faut">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La version actuelle est .NET 6 (2021).&lt;/p>
&lt;p>&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-6/">&lt;img src="images/dotnet-unified-platform.png" alt=".NET 5">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="la-ligne-de-commande-net" >La ligne de commande .NET
&lt;span>
&lt;a href="#la-ligne-de-commande-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>.NET CLI&lt;/strong> (&lt;em>Command Line Interface&lt;/em>) permet d&amp;rsquo;interagir avec .NET depuis un terminal.&lt;/li>
&lt;li>Nécessite que .NET soit installé sur la machine.&lt;/li>
&lt;li>Syntaxe : &lt;code>dotnet &amp;lt;commande&amp;gt; &amp;lt;options&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="création-dune-application" >Création d&amp;rsquo;une application
&lt;span>
&lt;a href="#cr%c3%a9ation-dune-application">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet new &amp;lt;template&amp;gt; -o &amp;lt;output directory&amp;gt;&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Type d&amp;rsquo;application&lt;/th>
&lt;th>Template&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Console&lt;/td>
&lt;td>&lt;code>console&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bibliothèque de classes&lt;/td>
&lt;td>&lt;code>classlib&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (vide)&lt;/td>
&lt;td>&lt;code>web&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (API)&lt;/td>
&lt;td>&lt;code>webapi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (MVC)&lt;/td>
&lt;td>&lt;code>mvc&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="création-dun-fichier-gitignore" >Création d&amp;rsquo;un fichier .gitignore
&lt;span>
&lt;a href="#cr%c3%a9ation-dun-fichier-gitignore">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet new gitignore&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Le fichier &lt;code>.gitignore&lt;/code> permet d&amp;rsquo;exclure certains fichiers/dossiers de la gestion des versions avec &lt;a href="https://git-scm.com/">Git&lt;/a>. Il le plus souvent s&amp;rsquo;agit de fichiers locaux (exemple : configuration de l&amp;rsquo;environnement de développement) ou de fichiers recréés systématiquement par le processus de génération de l&amp;rsquo;application.&lt;/li>
&lt;li>Cette commande crée un fichier &lt;code>.gitignore&lt;/code> adapté aux projets .NET.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="gestion-des-packages" >Gestion des packages
&lt;span>
&lt;a href="#gestion-des-packages">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet add package &amp;lt;name&amp;gt;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Utilise &lt;a href="https://www.nuget.org/">NuGet&lt;/a> pour télécharger un package et l&amp;rsquo;ajouter au projet.&lt;/li>
&lt;li>Vérifie la compatibilité du package à installer avec le projet.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>&amp;gt; dotnet list package&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Liste les packages installés pour un projet.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="lancement-dune-application" >Lancement d&amp;rsquo;une application
&lt;span>
&lt;a href="#lancement-dune-application">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet run&lt;/code>&lt;/p>
&lt;p>Si nécessaire, effectue la restauration des dépendances du projet (équivalent de &lt;code>dotnet restore&lt;/code>).&lt;/p>
&lt;hr>
&lt;h3 id="surveillance-des-changements" >Surveillance des changements
&lt;span>
&lt;a href="#surveillance-des-changements">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet watch run&lt;/code>&lt;/p>
&lt;p>Pour une application web, jnjecte un script qui met à jour le contenu affiché par le navigateur lorsque des fichiers surveillés sont modifiés.&lt;/p>
&lt;hr>
&lt;h3 id="autres-possibilités" >Autres possibilités
&lt;span>
&lt;a href="#autres-possibilit%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Nettoyage, test, publication, gestion des packages installés, etc.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/">Plus d&amp;rsquo;informations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="la-notion-de-programme" >La notion de programme
&lt;span>
&lt;a href="#la-notion-de-programme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="quest-ce-quun-programme-" >Qu&amp;rsquo;est-ce qu&amp;rsquo;un programme ?
&lt;span>
&lt;a href="#quest-ce-quun-programme-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Programme&lt;/strong> (application, logiciel) : implémentation (réalisation) d&amp;rsquo;un algorithme sous la forme d&amp;rsquo;un ensemble de commandes textuelles appelées &lt;strong>instructions&lt;/strong>.&lt;/li>
&lt;li>Ces instructions sont spécifiques à un langage de programmation.&lt;/li>
&lt;li>Elles sont ensuite traduites dans un langage compris par (le processeur de) la machine qui exécute le programme.&lt;/li>
&lt;li>L&amp;rsquo;ensemble des instructions d&amp;rsquo;un programme est appelé son &lt;strong>code source&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="au-plus-près-de-la-machine--lassembleur" >Au plus près de la machine : l&amp;rsquo;assembleur
&lt;span>
&lt;a href="#au-plus-pr%c3%a8s-de-la-machine--lassembleur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Jeu d&amp;rsquo;instructions élémentaires comprises par une famille de processeurs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-asm" data-lang="asm">&lt;span style="display:flex;">&lt;span>str:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">.ascii&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Bonjour\n&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">.global&lt;/span> &lt;span style="color:#0086d2">_start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>_start:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$4&lt;/span>, &lt;span style="color:#fb660a">%eax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$1&lt;/span>, &lt;span style="color:#fb660a">%ebx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$str&lt;/span>, &lt;span style="color:#fb660a">%ecx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$8&lt;/span>, &lt;span style="color:#fb660a">%edx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">int&lt;/span> &lt;span style="color:#0086d2">$0x80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$1&lt;/span>, &lt;span style="color:#fb660a">%eax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$0&lt;/span>, &lt;span style="color:#fb660a">%ebx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">int&lt;/span> &lt;span style="color:#0086d2">$0x80&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="langages-compilés" >Langages compilés
&lt;span>
&lt;a href="#langages-compil%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Compilation&lt;/strong> = phase de traduction du code source en langage machine, puis exécution du résultat de la compilation.
&lt;ul>
&lt;li>Performances optimales.&lt;/li>
&lt;li>Permet de détecter les erreurs syntaxiques avant l&amp;rsquo;exécution.&lt;/li>
&lt;li>Recompilation nécessaire sur un nouvel environnement.&lt;/li>
&lt;li>Exemples : C, C++.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="langages-interprétés" >Langages interprétés
&lt;span>
&lt;a href="#langages-interpr%c3%a9t%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Interprétation&lt;/strong> = exécution du code source d&amp;rsquo;un programme ligne après ligne.
&lt;ul>
&lt;li>Pas de phase de compilation (gain de temps).&lt;/li>
&lt;li>Code directement portable d&amp;rsquo;un environnement à l&amp;rsquo;autre.&lt;/li>
&lt;li>Performances inférieures aux langages compilés.&lt;/li>
&lt;li>Détection tardive des erreurs syntaxiques (durant l&amp;rsquo;exécution).&lt;/li>
&lt;li>Exemples : Python, JavaScript, PHP.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="langages-pseudo-compilés" >Langages pseudo-compilés
&lt;span>
&lt;a href="#langages-pseudo-compil%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Code source compilé vers un format intermédiaire multi-plaformes (&amp;quot;&lt;em>Write once, run anywhere&lt;/em>&amp;quot;).
&lt;ul>
&lt;li>Erreurs syntaxiques détectées à la compilation.&lt;/li>
&lt;li>Evite les recompilations.&lt;/li>
&lt;li>Nécessite que l&amp;rsquo;environnement soit supporté par la plate-forme d&amp;rsquo;exécution du code intermédiaire.&lt;/li>
&lt;li>Exemples : Java, C#.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="notion-dalgorithme" >Notion d&amp;rsquo;algorithme
&lt;span>
&lt;a href="#notion-dalgorithme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;blockquote>
&lt;p>&amp;ldquo;Un algorithme est une méthode de calcul qui indique la démarche à suivre pour résoudre une série de problèmes équivalents en appliquant dans un ordre précis une suite finie de règles.&amp;rdquo; (Académie Française)&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="exemple-dalgorithme" >Exemple d&amp;rsquo;algorithme
&lt;span>
&lt;a href="#exemple-dalgorithme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>Début
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sortir une casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mettre de l&amp;#39;eau dans la casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du sel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mettre la casserole sur le feu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que l&amp;#39;eau ne bout pas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attendre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sortir les pâtes du placard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans la casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que les pâtes ne sont pas cuites
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attendre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans une passoire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Egoutter les pâtes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans un plat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Goûter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que les pâtes sont trop fades
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du sel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Goûter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Si on préfère le beurre à l&amp;#39;huile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du beurre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sinon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter de l&amp;#39;huile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>&lt;img src="images/P%C3%A2tes-ricotta_69287116.jpeg" alt="Miam!">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="le-rôle-du-programmeur" >Le rôle du programmeur
&lt;span>
&lt;a href="#le-r%c3%b4le-du-programmeur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Créer des programmes qui réalisent de manière fiable les tâches attendues.&lt;/li>
&lt;li>Maîtriser la complexité qui apparaît inévitablement lorsque les fonctionnalités du programme évoluent.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&amp;ldquo;Le programmeur est un créateur d&amp;rsquo;univers dont il est seul responsable.&amp;rdquo; (Joseph Weizenbaum).&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="premiers-pas-avec-c" >Premiers pas avec C#
&lt;span>
&lt;a href="#premiers-pas-avec-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="c-en-quelques-mots" >C# en quelques mots
&lt;span>
&lt;a href="#c-en-quelques-mots">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Langage de programmation apparu en 2002 avec la première version de .NET (Framework).&lt;/li>
&lt;li>Syntaxe très inspirée de Java et de C++.&lt;/li>
&lt;li>Typage statique, orienté objet.&lt;/li>
&lt;li>Permet de créer une grande variété d&amp;rsquo;applications (bureau, web, mobile, cloud, etc).&lt;/li>
&lt;li>Version associée à .NET 6 : C# 10.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="coder-en-c" >Coder en C#
&lt;span>
&lt;a href="#coder-en-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Environnements de développement intégré (IDE) :
&lt;ul>
&lt;li>&lt;a href="https://visualstudio.microsoft.com/fr/">Visual Studio&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jetbrains.com/rider/">Rider&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Editeurs de code :
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/">Visual Studio Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://atom.io/">Atom&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sublimetext.com/">Sublime Text&lt;/a>&lt;/li>
&lt;li>&lt;del>Notepad++&lt;/del>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="création-dune-application-console-avec-net" >Création d&amp;rsquo;une application console avec .NET
&lt;span>
&lt;a href="#cr%c3%a9ation-dune-application-console-avec-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Type d&amp;rsquo;application basique qui s&amp;rsquo;exécute dans un terminal.&lt;/li>
&lt;li>UI pauvre, interactions limitées au clavier.&lt;/li>
&lt;li>Création d&amp;rsquo;un projet console .NET nommé &lt;strong>HelloCSharp&lt;/strong> :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Le projet est créé dans le sous-répertoire HelloCSharp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet new console -o HelloCSharp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="résultat-obtenu" >Résultat obtenu
&lt;span>
&lt;a href="#r%c3%a9sultat-obtenu">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/vscode-hellocsharp.png" alt="VS Code - HelloCSharp">&lt;/p>
&lt;hr>
&lt;h3 id="le-fichier-csproj" >Le fichier .csproj
&lt;span>
&lt;a href="#le-fichier-csproj">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Décrit la configuration du projet.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;Project&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Sdk=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;Microsoft.NET.Sdk&amp;#34;&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;OutputType&amp;gt;&lt;/span>Exe&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/OutputType&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;TargetFramework&amp;gt;&lt;/span>net6.0&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/TargetFramework&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;ImplicitUsings&amp;gt;&lt;/span>enable&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/ImplicitUsings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;Nullable&amp;gt;&lt;/span>enable&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/Nullable&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/Project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-fichier-programcs" >Le fichier Program.cs
&lt;span>
&lt;a href="#le-fichier-programcs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier source principal contenant le code C#.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// See https://aka.ms/new-console-template for more information&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Hello, World!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exécution-du-programme" >Exécution du programme
&lt;span>
&lt;a href="#ex%c3%a9cution-du-programme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Cette commande doit être lancée dans le répertoire HelloCSharp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="images/vscode-hellocsharp-run.png" alt="VS Code - HelloCSharp run">&lt;/p>
&lt;hr>
&lt;h3 id="littéraux" >Littéraux
&lt;span>
&lt;a href="#litt%c3%a9raux">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Un littéral est une valeur donnée explicitement dans le code source.&lt;/li>
&lt;li>Exemples : &lt;code>2&lt;/code>, &lt;code>3.14&lt;/code>, &lt;code>&amp;quot;Hello World!&amp;quot;&lt;/code>.&lt;/li>
&lt;li>Séparateur décimal : le point &lt;code>.&lt;/code>&lt;/li>
&lt;li>Chaînes de caractères (texte) : guillemets doubles &lt;code>&amp;quot;...&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="instructions" >Instructions
&lt;span>
&lt;a href="#instructions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une instruction est un ordre écrit dans le code.&lt;/li>
&lt;li>Elles se terminent par &lt;code>;&lt;/code> en C#.&lt;/li>
&lt;li>Elles peuvent être regroupées dans des &lt;strong>blocs&lt;/strong> délimités par des accolades &lt;code>{ ... }&lt;/code>.&lt;/li>
&lt;li>Durant l&amp;rsquo;exécution, chaque instruction est &amp;ldquo;lue&amp;rdquo; séquentiellement et produit un résultat.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="commentaires" >Commentaires
&lt;span>
&lt;a href="#commentaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Rôle : expliquer &lt;em>aux humains&lt;/em> certaines parties du code.&lt;/li>
&lt;li>Syntaxe : &lt;code>//...&lt;/code> (monoligne) ou &lt;code>/* ... */&lt;/code> (multilignes).&lt;/li>
&lt;li>Peuvent être ajoutés/supprimés automatiquement par les éditeurs de code et les IDE.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="guide-de-codage-c" >Guide de codage C#
&lt;span>
&lt;a href="#guide-de-codage-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="nommage-des-identifiants" >Nommage des identifiants
&lt;span>
&lt;a href="#nommage-des-identifiants">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Un &lt;strong>identifiant&lt;/strong> est le nom donné à un élément du code créé par le développeur.&lt;/li>
&lt;li>Ils doivent commencer par une lettre ou un &lt;em>underscore&lt;/em> &lt;code>_&lt;/code>.&lt;/li>
&lt;li>Ils sont sensibles à la casse (distinction majuscules/minuscules).&lt;/li>
&lt;li>Au sein d&amp;rsquo;un bloc, le même identifiant ne peut pas être attribué à des éléments distincts.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="mots-réservés-du-c" >Mots réservés du C#
&lt;span>
&lt;a href="#mots-r%c3%a9serv%c3%a9s-du-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>abstract
as
base
bool
break
byte
case
catch
char
checked
class
const
continue
decimal
default
delegate
do
double
else
enum
event
explicit
extern
false
file finally
fixed
float
for
foreach
goto
if
implicit
in
int
interface
internal
is
lock
long
namespace
new
null
object
operator
out
override
params
private
protected
public
readonly
ref
return
sbyte
sealed
short
sizeof
stackalloc
static
string
struct
switch
this
throw
true
try
typeof
uint
ulong
unchecked
unsafe
ushort
using
virtual
void
volatile
while&lt;/p>
&lt;hr>
&lt;h3 id="conventions-de-nommage" >Conventions de nommage
&lt;span>
&lt;a href="#conventions-de-nommage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Plus l&amp;rsquo;élément est utilisé dans le code, plus il faut le nommer avec soin.&lt;/li>
&lt;li>Notation &lt;a href="https://fr.wikipedia.org/wiki/Camel_case">camelCase&lt;/a> : &lt;code>totalFacturesClient&lt;/code>.
&lt;ul>
&lt;li>Pas d&amp;rsquo;underscores entre les mots (!= Python).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Notation PascalCase (première lettre en majuscule) pour certains éléments (fonctions, méthodes, structures, classes) : &lt;code>CompteBancaire&lt;/code>.&lt;/li>
&lt;li>Pas d&amp;rsquo;accents ! (même si ça fonctionne)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="formatage-du-code" >Formatage du code
&lt;span>
&lt;a href="#formatage-du-code">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Pas plus d&amp;rsquo;une instruction par ligne.&lt;/li>
&lt;li>Longueur maximum d&amp;rsquo;une ligne : 80-ish caractères.&lt;/li>
&lt;li>Accolades ouvrantes et fermantes sur des lignes distinctes.&lt;/li>
&lt;li>Indentation = 4 espaces.&lt;/li>
&lt;li>&amp;hellip; Utiliser le formateur automatique de son éditeur/IDE !
&lt;ul>
&lt;li>Activer le formatage à la sauvegarde pour plus de confort.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="formatage-des-commentaires" >Formatage des commentaires
&lt;span>
&lt;a href="#formatage-des-commentaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Placer les commentaires sur des lignes distinctes.&lt;/li>
&lt;li>Débuter par une majuscule et terminer par un point.&lt;/li>
&lt;li>Laisser un espace entre le symbole de début et le texte.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ceci est un commentaire tellement long qu&amp;#39;il est réparti&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// sur plusieurs lignes.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">Encore
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">un
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">commentaire.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="ressources" >Ressources
&lt;span>
&lt;a href="#ressources">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/coding-conventions">C# Coding Conventions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/coding-style.md">C# Coding Style&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/docs/editor/codebasics#_formatting">Visual Studio Code - Formatting&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="variables-valeurs-et-types" >Variables, valeurs et types
&lt;span>
&lt;a href="#variables-valeurs-et-types">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="valeur-vs-type" >Valeur Vs type
&lt;span>
&lt;a href="#valeur-vs-type">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Valeur&lt;/strong> = morceau d&amp;rsquo;information utilisée dans un programme.&lt;/li>
&lt;li>Chaque valeur possède un &lt;strong>type&lt;/strong> qui détermine :
&lt;ul>
&lt;li>son encodage en mémoire ;&lt;/li>
&lt;li>la plage des valeurs possibles ;&lt;/li>
&lt;li>les opérations permises.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>C# est un langage à &lt;strong>typage statique&lt;/strong> : les types doivent être explicitement précisés (!= Python).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="variables" >Variables
&lt;span>
&lt;a href="#variables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Variable&lt;/strong> = zone de stockage d&amp;rsquo;information dans la mémoire allouée au programme.
&lt;ul>
&lt;li>Sorte de &amp;ldquo;boîte&amp;rdquo; dans laquelle on range des choses.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Caractérisée par :
&lt;ul>
&lt;li>son nom (identifiant) ;&lt;/li>
&lt;li>sa valeur ;&lt;/li>
&lt;li>son type.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="déclaration-dune-variable" >Déclaration d&amp;rsquo;une variable
&lt;span>
&lt;a href="#d%c3%a9claration-dune-variable">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Type défini explicitement à la déclaration.&lt;/li>
&lt;li>Valeur modifiée par l&amp;rsquo;opérateur d&amp;rsquo;affectation &lt;code>=&lt;/code>.
&lt;ul>
&lt;li>Ne pas confondre avec l&amp;rsquo;égalité mathématique !&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Possibilité de définir la valeur initiale au moment de la déclaration.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> x; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Déclaration : aucune valeur dans la variable x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Affectation de la valeur 3 à x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> y = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Déclaration et initialisation de la variable y&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y = &lt;span style="color:#0086d2">&amp;#34;Coucou&amp;#34;&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : valeur incompatible avec le type de y&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="portée-dune-variable" >Portée d&amp;rsquo;une variable
&lt;span>
&lt;a href="#port%c3%a9e-dune-variable">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Portée&lt;/strong> (&lt;em>scope&lt;/em>) = portion du code source dans laquelle une variable est visible et donc utilisable.&lt;/li>
&lt;li>L&amp;rsquo;unité de portée est le bloc de code &lt;code>{ ... }&lt;/code> ainsi que ses sous-blocs éventuels.&lt;/li>
&lt;li>En l&amp;rsquo;absence d&amp;rsquo;accolades, un bloc par défaut est implicitement défini.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a = &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK : a est déclarée dans le bloc parent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> b = &lt;span style="color:#0086f7;font-weight:bold">4&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La portée de b se limite au bloc actuel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(a); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK : a est déclarée dans le bloc courant&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(b); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : b n&amp;#39;est pas visible ici&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="types-prédéfinis" >Types prédéfinis
&lt;span>
&lt;a href="#types-pr%c3%a9d%c3%a9finis">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Extrait du vaste éventail de &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/built-in-types">types prédéfinis du C#&lt;/a> :&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Mot-clé&lt;/th>
&lt;th>Nom complet&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/integral-numeric-types">int&lt;/a>&lt;/td>
&lt;td>&lt;code>System.Int32&lt;/code>&lt;/td>
&lt;td>Entier (signé)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/floating-point-numeric-types">double&lt;/a>&lt;/td>
&lt;td>&lt;code>System.Double&lt;/code>&lt;/td>
&lt;td>Réel&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/bool">bool&lt;/a>&lt;/td>
&lt;td>&lt;code>System.Boolean&lt;/code>&lt;/td>
&lt;td>Booléen&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/char">char&lt;/a>&lt;/td>
&lt;td>&lt;code>System.Char&lt;/code>&lt;/td>
&lt;td>Caractère&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/reference-types#the-string-type">string&lt;/a>&lt;/td>
&lt;td>&lt;code>System.String&lt;/code>&lt;/td>
&lt;td>Chaîne de caractères&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="valeurs-prédéfinies" >Valeurs prédéfinies
&lt;span>
&lt;a href="#valeurs-pr%c3%a9d%c3%a9finies">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Plusieurs valeurs constantes sont associées à certains types.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.MaxValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus grande valeur gérée par int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> j = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.MinValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus petite valeur gérée par int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> a = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.MaxValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus grande valeur gérée par double&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> b = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.MinValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus petite valeur gérée par double&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> c = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.Epsilon; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus petite valeur réelle positive&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> d = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.NaN; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Pas un nombre (Not a Number)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> e = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.PositiveInfinity; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// +∞&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> f = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.NegativeInfinity; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// −∞&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="notation-suffixée" >Notation suffixée
&lt;span>
&lt;a href="#notation-suffix%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les litéraux réels sont considérés par défaut comme ayant le type &lt;code>double&lt;/code>.&lt;/li>
&lt;li>Dans certaines situations, il est utile de préciser explicitement le type souhaité en utilisant la &lt;strong>notation suffixée&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">float&lt;/span> f = &lt;span style="color:#0086f7;font-weight:bold">1.2f&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Réel sur 32 bits&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> d = &lt;span style="color:#0086f7;font-weight:bold">1.2d&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Réel sur 64 bits&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">decimal&lt;/span> m = &lt;span style="color:#0086f7;font-weight:bold">1.2&lt;/span>m; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Réel sur 128 bits&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="types-valeur-vs-types-référence" >Types valeur Vs types référence
&lt;span>
&lt;a href="#types-valeur-vs-types-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les types C# se divisent en deux catégories.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-types">Types valeur&lt;/a> : la variable contient directement la valeur qu&amp;rsquo;elle stocke.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/reference-types">Types référence&lt;/a> : la variable contient une référence vers la valeur ($\approx$ son adresse dans la mémoire). Cette &lt;em>indirection&lt;/em> permet d&amp;rsquo;optimiser certaines opérations (comparaison, copie, etc).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Tous les exemples précédents sont des types valeur, sauf &lt;code>string&lt;/code> (mais qui s&amp;rsquo;utilise comme un type valeur).&lt;/p>
&lt;hr>
&lt;h3 id="hiérarchie-des-types-c" >Hiérarchie des types C#
&lt;span>
&lt;a href="#hi%c3%a9rarchie-des-types-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/types/">&lt;img src="images/value-reference-types-common-type-system.png" alt="Hiérarchie des types C#">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="types-valeur-nullables" >Types valeur nullables
&lt;span>
&lt;a href="#types-valeur-nullables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le mot-clé &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/null">null&lt;/a> indique l&amp;rsquo;absence de référence.&lt;/li>
&lt;li>C&amp;rsquo;est la &amp;ldquo;valeur&amp;rdquo; par défaut des variables de type référence.&lt;/li>
&lt;li>Un type valeur est &lt;em>non-nullable&lt;/em> par défaut. Il peut devenir &lt;a href="(https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-value-types)">nullable&lt;/a> en le suffixant par &lt;code>?&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : type valeur non nullable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> b = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, type nullable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="types-référence-nullables" >Types référence nullables
&lt;span>
&lt;a href="#types-r%c3%a9f%c3%a9rence-nullables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Depuis C# 8, on peut paramétrer un projet C# afin que les types référence deviennent &lt;em>non-nullables&lt;/em>, cad &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-reference-types">qu&amp;rsquo;on ne puisse pas leur affecter&lt;/a> &lt;code>null&lt;/code> ou une valeur potentiellement égale à &lt;code>null&lt;/code>.
&lt;ul>
&lt;li>C&amp;rsquo;est le cas par défaut avec .NET 6.&lt;/li>
&lt;li>Objectif : améliorer la sûreté du code.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Le préfixage par &lt;code>?&lt;/code> autorise &lt;code>null&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> s; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, valeur de s = null (variable inutilisable en l&amp;#39;état)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK, type référence non nullable (C# 8+)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string?&lt;/span> t = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, type nullable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="conversions-de-types-implicites" >Conversions de types implicites
&lt;span>
&lt;a href="#conversions-de-types-implicites">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>En C#, le type d&amp;rsquo;une variable ne peut plus être modifié après sa déclaration (typage statique).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Une &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions#implicit-conversions">conversion implicite&lt;/a> a lieu quand la nouvelle valeur est directement compatible avec le type actuel (exemples : entier vers entier de plus grande précision, entier vers réel).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086d2">&amp;#34;Bonjour&amp;#34;&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK, valeur incompatible avec le type int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> n = &lt;span style="color:#0086f7;font-weight:bold">2147483647&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> d = n; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, conversion implicite&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Le type entier long peut stocker n&amp;#39;importe quel int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">long&lt;/span> l = n; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, conversion implicite&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="conversions-de-types-explicites" >Conversions de types explicites
&lt;span>
&lt;a href="#conversions-de-types-explicites">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions#explicit-conversions">Transtypage&lt;/a> (&lt;em>cast&lt;/em>) : on force le type de la nouvelle valeur en la préfixant par le nouveau type entre parenthèses.
&lt;ul>
&lt;li>Perte possible d&amp;rsquo;information.&lt;/li>
&lt;li>Potentiellement dangereux !&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Fonctions de conversion C# : &lt;code>{type}.Parse&lt;/code> ou &lt;code>Convert.To{type}&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> x = (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>)&lt;span style="color:#0086f7;font-weight:bold">12.3&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK : transtypage possible, x vaut 12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> y = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.Parse(&lt;span style="color:#0086d2">&amp;#34;123&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, y vaut 123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> z = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.Parse(&lt;span style="color:#0086d2">&amp;#34;12.3&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : nouvelle valeur non entière&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="booléens" >Booléens
&lt;span>
&lt;a href="#bool%c3%a9ens">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le type &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/bool">bool&lt;/a> représente une valeur booléenne &lt;code>true&lt;/code> ou &lt;code>false&lt;/code>.&lt;/li>
&lt;li>Booléen nullable : &lt;code>bool?&lt;/code>&lt;/li>
&lt;li>Un conversion explicite est requise vers/depuis les types entier : toutes les valeurs non-zéro sont converties à &lt;code>true&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> b = &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">bool?&lt;/span> n = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK : type nullable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> p = Convert.ToBoolean(&lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// p vaut true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> q = Convert.ToBoolean(&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// r vaut false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="caractères" >Caractères
&lt;span>
&lt;a href="#caract%c3%a8res">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le type &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/char">char&lt;/a> représente un caractère alphanumérique &lt;a href="https://en.wikipedia.org/wiki/Unicode">Unicode&lt;/a>.&lt;/li>
&lt;li>On peut lui affecter un caractère litéral délimité par des guillemets simples &lt;code>''&lt;/code> ou sa &lt;a href="https://en.wikipedia.org/wiki/List_of_Unicode_characters#Basic_Latin">valeur Unicode&lt;/a> transtypée.&lt;/li>
&lt;li>Le caractère d&amp;rsquo;échappement est &lt;code>\&lt;/code>.&lt;/li>
&lt;li>La conversion est implicite vers les principaux types entiers et réels.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span> c = &lt;span style="color:#0086d2">&amp;#39;a&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> cVal = c; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// cVal vaut 97, la valeur Unicode de &amp;#39;a&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span> cBis = (&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span>)&lt;span style="color:#0086f7;font-weight:bold">97&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Initialisation à partir de la valeur Unicode&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="séquences-déchappement" >Séquences d&amp;rsquo;échappement
&lt;span>
&lt;a href="#s%c3%a9quences-d%c3%a9chappement">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Extrait de la &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/#string-escape-sequences">liste complète des séquences d&amp;rsquo;échappement C#&lt;/a> :&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Séquence&lt;/th>
&lt;th>Valeur&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>\'&lt;/code>&lt;/td>
&lt;td>Guillemet simple&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\&amp;quot;&lt;/code>&lt;/td>
&lt;td>Guillemet double&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\\&lt;/code>&lt;/td>
&lt;td>Antislash&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\n&lt;/code>&lt;/td>
&lt;td>Saut de ligne&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\t&lt;/code>&lt;/td>
&lt;td>Tabulation&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="chaînes-de-caractères" >Chaînes de caractères
&lt;span>
&lt;a href="#cha%c3%aenes-de-caract%c3%a8res">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le type &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/reference-types#the-string-type">string&lt;/a> représente une séquence de caractères Unicode.&lt;/li>
&lt;li>L&amp;rsquo;instruction &lt;code>{chaîne}.Length&lt;/code> renvoie le nombre de caractères d&amp;rsquo;une chaîne.&lt;/li>
&lt;li>La syntaxe entre crochets &lt;code>[]&lt;/code> permet d&amp;rsquo;accéder à un caractère de la chaîne à partir de son rang.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> s = &lt;span style="color:#0086d2">&amp;#34;abc&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span> premier = s[&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>]; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#39;a&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span> dernier = s[s.Length - &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>]; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#39;c&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="chaînes-verbatim" >Chaînes verbatim
&lt;span>
&lt;a href="#cha%c3%aenes-verbatim">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Placé devant son début, le caractère &lt;code>@&lt;/code> permet de créer une &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/verbatim">chaîne verbatim&lt;/a> dans laquelle on peut ajouter des caractères spéciaux sans les échapper.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ces deux chaînes contiennent &amp;#34;c:\Windows\Temp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> c1 = &lt;span style="color:#0086d2">&amp;#34;c:\\Windows\\Temp&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> c2 = &lt;span style="color:#0086d2">@&amp;#34;c:\Windows\Temp&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="void" >Void
&lt;span>
&lt;a href="#void">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le mot-clé &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/void">void&lt;/a> est utilisé pour indiquer l&amp;rsquo;absence de valeur de retour par une instruction.&lt;/li>
&lt;li>Une variable ou une expression ne peut pas être de type &lt;code>void&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="expressions" >Expressions
&lt;span>
&lt;a href="#expressions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="définition-dune-expression" >Définition d&amp;rsquo;une expression
&lt;span>
&lt;a href="#d%c3%a9finition-dune-expression">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/expressions">expression&lt;/a> est une combinaison de variables, de valeurs et d&amp;rsquo;opérateurs.&lt;/li>
&lt;li>Toute expression qui renvoie une valeur possède un type.&lt;/li>
&lt;li>Le résultat d&amp;rsquo;une expression peut être inclus dans une autre expression.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="opérateurs-arithmétiques" >Opérateurs arithmétiques
&lt;span>
&lt;a href="#op%c3%a9rateurs-arithm%c3%a9tiques">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Opérateur&lt;/th>
&lt;th>Rôle&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>+&lt;/code>&lt;/td>
&lt;td>Addition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-&lt;/code>&lt;/td>
&lt;td>Soustraction&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>*&lt;/code>&lt;/td>
&lt;td>Multiplication&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>/&lt;/code>&lt;/td>
&lt;td>Division&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>%&lt;/code>&lt;/td>
&lt;td>Modulo&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="opérateurs-de-comparaison" >Opérateurs de comparaison
&lt;span>
&lt;a href="#op%c3%a9rateurs-de-comparaison">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Ne pas confondre &lt;code>==&lt;/code> et &lt;code>=&lt;/code> (affectation) !&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Opérateur&lt;/th>
&lt;th>Rôle&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>==&lt;/code>&lt;/td>
&lt;td>Egal à&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>!=&lt;/code>&lt;/td>
&lt;td>Différent de&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;&lt;/code>&lt;/td>
&lt;td>Inférieur&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;=&lt;/code>&lt;/td>
&lt;td>Inférieur ou égal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;gt;&lt;/code>&lt;/td>
&lt;td>Supérieur&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;gt;=&lt;/code>&lt;/td>
&lt;td>Supérieur ou égal&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="opérateurs-logiques" >Opérateurs logiques
&lt;span>
&lt;a href="#op%c3%a9rateurs-logiques">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Opérateur&lt;/th>
&lt;th>Rôle&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>&amp;amp;&amp;amp;&lt;/code>&lt;/td>
&lt;td>ET logique&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>||&lt;/code>&lt;/td>
&lt;td>OU logique&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>!&lt;/code>&lt;/td>
&lt;td>NON logique&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="priorité-des-opérateurs" >Priorité des opérateurs
&lt;span>
&lt;a href="#priorit%c3%a9-des-op%c3%a9rateurs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Elle est gérée comme en mathématiques à l&amp;rsquo;aide de parenthèses &lt;code>()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> e = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span> * &lt;span style="color:#0086f7;font-weight:bold">4&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// e contient la valeur 11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> f = (&lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>) * &lt;span style="color:#0086f7;font-weight:bold">4&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// f contient la valeur 20&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="division-entière" >Division entière
&lt;span>
&lt;a href="#division-enti%c3%a8re">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une division entre deux entiers donne un résultat de type entier.&lt;/li>
&lt;li>Pour obtenir un résultat réel, il faut que l&amp;rsquo;un des deux opérandes soit de type réel ou que le résultat soit explicitement converti.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> q = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// q vaut 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> r = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> % &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// r vaut 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> d = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / &lt;span style="color:#0086f7;font-weight:bold">2.0&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// d vaut 2,5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> e = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / &lt;span style="color:#0086f7;font-weight:bold">2d&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// e vaut 2,5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> f = (&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>)&lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// f vaut 2,5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> z = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> g = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / z; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK, division par zéro à l&amp;#39;exécution&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="incrémentation-et-décrémentation" >Incrémentation et décrémentation
&lt;span>
&lt;a href="#incr%c3%a9mentation-et-d%c3%a9cr%c3%a9mentation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les opérateurs &lt;code>++&lt;/code> et &lt;code>--&lt;/code> permettent resp. d&amp;rsquo;augmenter et de diminuer de 1 la valeur d&amp;rsquo;une variable.&lt;/li>
&lt;li>Ils équivalent à &lt;code>variable = variable ± 1&lt;/code>.&lt;/li>
&lt;li>Attention, le résultat renvoyé par l&amp;rsquo;expression est différent selon la position de l&amp;rsquo;opérateur (pré- ou post-incrémentation/décrémentation).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a++; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// a vaut 4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> b = a++; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// a vaut 5, b vaut 4 !&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> c = ++a; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// a et c valent 6&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="opérateurs-combinés-daffectation" >Opérateurs combinés d&amp;rsquo;affectation
&lt;span>
&lt;a href="#op%c3%a9rateurs-combin%c3%a9s-daffectation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>De la forme &lt;code>variable {opérateur}= valeur&lt;/code>, ils équivalent à &lt;code>variable = variable {operateur} valeur&lt;/code>&lt;/li>
&lt;li>Ils permettent de raccourcir certaines expressions.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>i += &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Equivaut à i = i + 5, donc i vaut 15&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>i /= &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// i vaut 5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="dépassement-de-capacité" >Dépassement de capacité
&lt;span>
&lt;a href="#d%c3%a9passement-de-capacit%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les types numériques ont une taille finie en mémoire, et donc une capacité limitée.&lt;/li>
&lt;li>Dans certaines circonstances, les limites des plages de valeur peuvent être dépassées&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> x = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.MaxValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus grand int possible&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x++;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(x == &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.MinValue); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true !&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="erreurs-darrondi" >Erreurs d&amp;rsquo;arrondi
&lt;span>
&lt;a href="#erreurs-darrondi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;arithmétique sur les types à virgule flottante peut entrainer des imprécisions et des erreurs d&amp;rsquo;arrondi.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086f7;font-weight:bold">5.32&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">2.23&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 7,550000000000001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086f7;font-weight:bold">5.32&lt;/span>m + &lt;span style="color:#0086f7;font-weight:bold">2.23&lt;/span>m); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 7,55&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="concaténation-de-chaînes" >Concaténation de chaînes
&lt;span>
&lt;a href="#concat%c3%a9nation-de-cha%c3%aenes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Elle s&amp;rsquo;effectue à l&amp;rsquo;aide de l&amp;rsquo;opérateur &lt;code>+&lt;/code> lorsqu&amp;rsquo;au moins l&amp;rsquo;une des deux opérandes est une chaîne.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> s = &lt;span style="color:#0086d2">&amp;#34;I &amp;#34;&lt;/span> + &lt;span style="color:#0086d2">&amp;#34;feel &amp;#34;&lt;/span> + &lt;span style="color:#0086d2">&amp;#34;good!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(s);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nbFamilles = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> ecole = &lt;span style="color:#0086d2">&amp;#34;ENSC&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> t = &lt;span style="color:#0086d2">&amp;#34;Il y a &amp;#34;&lt;/span> + nbFamilles + &lt;span style="color:#0086d2">&amp;#34; familles à l&amp;#39;&amp;#34;&lt;/span> + ecole;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(t); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Il y a 5 familles à l&amp;#39;ENSC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="interpolation-de-chaînes" >Interpolation de chaînes
&lt;span>
&lt;a href="#interpolation-de-cha%c3%aenes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Placé devant son début, le caractère &lt;code>$&lt;/code> permet de créer une &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated">chaîne interpolée&lt;/a> dans laquelle on peut ajouter des expressions entre accolades &lt;code>{}&lt;/code>.&lt;/li>
&lt;li>Ces expressions seront évaluées au moment du calcul de la valeur de la chaîne interpolée.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nbFamilles = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> ecole = &lt;span style="color:#0086d2">&amp;#34;ENSC&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> u = &lt;span style="color:#0086d2">$&amp;#34;Il y a {nbFamilles} familles à l&amp;#39;{ecole}&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(u); &lt;span style="color:#0086d2">&amp;#34;Il y a 5 familles à l&amp;#39;ENSC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="conditions-et-alternatives" >Conditions et alternatives
&lt;span>
&lt;a href="#conditions-et-alternatives">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-notion-de-condition" >La notion de condition
&lt;span>
&lt;a href="#la-notion-de-condition">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une expression dont l&amp;rsquo;évaluation produit une valeur booléenne peut être utilisée comme &lt;strong>condition&lt;/strong>.&lt;/li>
&lt;li>Quand la valeur d&amp;rsquo;une condition est vraie, on dit que la condition est &lt;em>vérifiée&lt;/em>.&lt;/li>
&lt;li>Elles peuvent être &lt;strong>composées&lt;/strong> en utilisant des opérateurs logiques et des parenthèses.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(a == &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(a != &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="tables-de-vérité-des-opérateurs-logiques" >Tables de vérité des opérateurs logiques
&lt;span>
&lt;a href="#tables-de-v%c3%a9rit%c3%a9-des-op%c3%a9rateurs-logiques">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ET logique&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OU logique&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> || &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> || &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> || &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> || &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NON logique&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(!&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(!&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="evaluation-abrégée" >Evaluation abrégée
&lt;span>
&lt;a href="#evaluation-abr%c3%a9g%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans une condition composée avec &lt;code>&amp;amp;&amp;amp;&lt;/code>, la seconde sous-condition n&amp;rsquo;est évaluée que si la première vaut &lt;code>true&lt;/code> (&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators#conditional-logical-and-operator-">évaluation abrégée&lt;/a>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> s = &lt;span style="color:#0086d2">&amp;#34;Hi&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine((a == &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>) &amp;amp;&amp;amp; (s == &lt;span style="color:#0086d2">&amp;#34;Hello&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine((a == &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>) || (s == &lt;span style="color:#0086d2">&amp;#34;Hello&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La sous-condition (s == &amp;#34;Hi&amp;#34;) n&amp;#39;est pas évaluée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// puisque (a != 3) vaut false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine((a != &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>) &amp;amp;&amp;amp; (s == &lt;span style="color:#0086d2">&amp;#34;Hi&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="linstruction-conditionnelle-if" >L&amp;rsquo;instruction conditionnelle if
&lt;span>
&lt;a href="#linstruction-conditionnelle-if">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;instruction &lt;code>if&lt;/code> permet de soumettre l&amp;rsquo;exécution d&amp;rsquo;une partie du programme à une condition, qui doit être vérifiée.&lt;/li>
&lt;li>Le bloc de code associé est délimité par des accolades (!= Python).&lt;/li>
&lt;li>Lorsque ce bloc se réduit à une seule instruction, ces accolades peuvent être omises.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (condition) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées si la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Seule instruction exécutée si la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="lalternative-avec-ifelse" >L&amp;rsquo;alternative avec if/else
&lt;span>
&lt;a href="#lalternative-avec-ifelse">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Associée à un &lt;code>if&lt;/code>, le mot-clé &lt;code>else&lt;/code> permet d&amp;rsquo;exprimer une &lt;strong>alternative&lt;/strong>.&lt;/li>
&lt;li>Si la condition du &lt;code>if&lt;/code> est vérifiée, alors les instructions du bloc de code associé seront exécutées, sinon ce seront celles du bloc associé au &lt;code>else&lt;/code>.&lt;/li>
&lt;li>L&amp;rsquo;instruction &lt;code>if/else&lt;/code> permet de créer un branchement logique dans le code.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (condition) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées si la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées si la condition n&amp;#39;est pas vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="instructions-ifelse-imbriquées" >Instructions if/else imbriquées
&lt;span>
&lt;a href="#instructions-ifelse-imbriqu%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (nombre &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est positif&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{ &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// nombre &amp;lt;= 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (nombre &amp;lt; &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est négatif&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// nombre == 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est nul&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="flux-dexécution-de-lexemple-précédent" >Flux d&amp;rsquo;exécution de l&amp;rsquo;exemple précédent
&lt;span>
&lt;a href="#flux-dex%c3%a9cution-de-lexemple-pr%c3%a9c%c3%a9dent">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/chapter03-01.png" alt="Flux d&amp;rsquo;exécution if/else">&lt;/p>
&lt;hr>
&lt;h3 id="version-abrégée-de-lexemple-précédent" >Version abrégée de l&amp;rsquo;exemple précédent
&lt;span>
&lt;a href="#version-abr%c3%a9g%c3%a9e-de-lexemple-pr%c3%a9c%c3%a9dent">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le second &lt;code>if/else&lt;/code> constitue une seule instruction : les accolades peuvent donc être omises.&lt;/li>
&lt;li>Pas de &lt;code>elif&lt;/code> en C# !&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (nombre &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est positif&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (nombre &amp;lt; &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est négatif&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est nul&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="la-conditionnelle-ternaire" >La conditionnelle ternaire
&lt;span>
&lt;a href="#la-conditionnelle-ternaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>L&amp;rsquo;instruction &lt;code>?:&lt;/code> renvoie la valeur d&amp;rsquo;une expression parmi deux, selon la valeur d&amp;rsquo;une condition booléenne : &lt;code>(condition) ? valeur_si_vraie : valeur_si_fausse&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Appelée &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/conditional-operator">instruction conditionnelle ternaire&lt;/a>, elle constitue une alternative plus concise au &lt;code>if/else&lt;/code> dans certains scénarions.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> temperature = &lt;span style="color:#0086f7;font-weight:bold">38.5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> etat = (temperature &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">38&lt;/span>) ? &lt;span style="color:#0086d2">&amp;#34;malade&amp;#34;&lt;/span> : &lt;span style="color:#0086d2">&amp;#34;bien portant&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(etat); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;malade&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="linstruction-de-choix-switch" >L&amp;rsquo;instruction de choix switch
&lt;span>
&lt;a href="#linstruction-de-choix-switch">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;instruction &lt;code>switch&lt;/code> permet d&amp;rsquo;exécuter un bloc parmi plusieurs selon la valeur d&amp;rsquo;une expression.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> meteo = &lt;span style="color:#0086d2">&amp;#34;orage&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">switch&lt;/span> (meteo)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">case&lt;/span> &lt;span style="color:#0086d2">&amp;#34;soleil&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Sortez en t-shirt&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">case&lt;/span> &lt;span style="color:#0086d2">&amp;#34;vent&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Sortez en coupe-vent&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Restez au chaud à la maison !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="structures-répétitives" >Structures répétitives
&lt;span>
&lt;a href="#structures-r%c3%a9p%c3%a9titives">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-boucle-while" >La boucle while
&lt;span>
&lt;a href="#la-boucle-while">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;instruction &lt;code>while&lt;/code> permet de répéter des instructions tant qu&amp;rsquo;une condition est vérifiée.&lt;/li>
&lt;li>Ce type d&amp;rsquo;instruction est souvent appelée &lt;strong>boucle&lt;/strong>.&lt;/li>
&lt;li>Avant chaque tour de boucle, la condition du &lt;code>while&lt;/code> est évaluée :
&lt;ul>
&lt;li>Si elle est vraie, le bloc associé au &lt;code>while&lt;/code> (appelé &lt;em>corps de la boucle&lt;/em>) est exécuté, puis la condition est de nouveau évaluée.&lt;/li>
&lt;li>Sinon, l&amp;rsquo;exécution de la boucle est terminée.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">while&lt;/span> (condition) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées tant que la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-danger-des-boucles-infinies" >Le danger des boucles infinies
&lt;span>
&lt;a href="#le-danger-des-boucles-infinies">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;exécution d&amp;rsquo;une boucle &lt;code>while&lt;/code> dont la condition ne peut pas devenir fausse ne s&amp;rsquo;arrête jamais.&lt;/li>
&lt;li>On parle alors de &lt;strong>boucle infinie&lt;/strong>, qui nécessite une interruption externe brutale.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">while&lt;/span> (nombre &amp;lt;= &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(nombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// nombre n&amp;#39;est jamais modifiée =&amp;gt; condition toujours vraie&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="la-boucle-for" >La boucle for
&lt;span>
&lt;a href="#la-boucle-for">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Cette boucle permet de répéter des instructions en exécutant une instruction après chaque tour.
&lt;ul>
&lt;li>L&amp;rsquo;&lt;strong>initialisation&lt;/strong> se produit une seule fois, au début de l&amp;rsquo;exécution.&lt;/li>
&lt;li>La &lt;strong>condition&lt;/strong> est évaluée avant chaque tour de boucle afin d&amp;rsquo;effectuer un nouveau tour ou de sortir de la boucle.&lt;/li>
&lt;li>L&amp;rsquo;&lt;strong>étape&lt;/strong> est réalisée après chaque tour de boucle.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (initialisation; condition; étape) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instruction executées tant que la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="compteur-de-boucle" >Compteur de boucle
&lt;span>
&lt;a href="#compteur-de-boucle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La boucle &lt;code>for&lt;/code> est fréquemment utilisée avec une variable (appelée &lt;em>compteur&lt;/em>) qui permet d&amp;rsquo;identifier et de numéroter les tours de boucle.&lt;/li>
&lt;li>Le compteur peut également être exploité dans le corps de la boucle.
&lt;ul>
&lt;li>Sauf exception rare, il ne doit pas y être modifié !&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Il est souvent nommé &lt;code>i&lt;/code>, &lt;code>j&lt;/code> ou &lt;code>k&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (i = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>; i &amp;lt;= &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(i); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 6&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="déclaration-du-compteur-de-boucle" >Déclaration du compteur de boucle
&lt;span>
&lt;a href="#d%c3%a9claration-du-compteur-de-boucle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Afin de limiter sa portée au corps de la boucle, on peut déclarer la variable compteur dans l&amp;rsquo;initialisation d&amp;rsquo;une boucle &lt;code>for&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>; i &amp;lt; &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(i + &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(i); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : i est inaccessible ici&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="choix-entre-un-while-et-un-for" >Choix entre un while et un for
&lt;span>
&lt;a href="#choix-entre-un-while-et-un-for">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La boucle &lt;code>for&lt;/code> intègre la gestion du compteur, mais implique que le nombre de tours de boucle soit connu à l&amp;rsquo;avance.&lt;/li>
&lt;li>Les scénarios où le nombre de tours ne peut pas être prévu à l&amp;rsquo;avance sont plus simples à écrire avec un &lt;code>while&lt;/code>. En revanche, attention aux boucles infinies !&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="la-boucle-do-while" >La boucle do&amp;hellip; while
&lt;span>
&lt;a href="#la-boucle-do-while">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Variante de la boucle &lt;code>while&lt;/code> dans laquelle le corps de la boucle est toujours exécuté au moins une fois.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées tant que la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">while&lt;/span> (condition);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="sous-programmes" >Sous-programmes
&lt;span>
&lt;a href="#sous-programmes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="exemple-dalgorithme-monobloc" >Exemple d&amp;rsquo;algorithme monobloc
&lt;span>
&lt;a href="#exemple-dalgorithme-monobloc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>Début
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sortir une casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mettre de l&amp;#39;eau dans la casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du sel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mettre la casserole sur le feu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que l&amp;#39;eau ne bout pas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attendre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sortir les pâtes du placard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans la casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que les pâtes ne sont pas cuites
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attendre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans une passoire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Egoutter les pâtes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans un plat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Goûter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que les pâtes sont trop fades
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du sel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Goûter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Si on préfère le beurre à l&amp;#39;huile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du beurre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sinon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter de l&amp;#39;huile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple-dalgorithme-modularisé" >Exemple d&amp;rsquo;algorithme modularisé
&lt;span>
&lt;a href="#exemple-dalgorithme-modularis%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Début
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Faire bouillir de l&amp;#39;eau
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cuire les pâtes dans l&amp;#39;eau
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Egoutter les pâtes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assaisonner les pâtes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La recette est décomposée en sous-étapes :&lt;/p>
&lt;ul>
&lt;li>Gain en concision et en facilité d&amp;rsquo;interprétation&lt;/li>
&lt;li>Apparition de tâches plus élémentaires (&lt;em>Cuire&lt;/em>, &lt;em>Egoutter&lt;/em>, etc) qu&amp;rsquo;on peut envisager de réutiliser dans d&amp;rsquo;autres recettes.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="quest-ce-quun-sous-programme-" >Qu&amp;rsquo;est-ce qu&amp;rsquo;un sous-programme ?
&lt;span>
&lt;a href="#quest-ce-quun-sous-programme-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Regroupement d&amp;rsquo;instructions qui réalise une tâche donnée.&lt;/li>
&lt;li>Identifié par un nom (PascalCase en C#).
&lt;ul>
&lt;li>Comporte souvent un verbe à l&amp;rsquo;infinitif pour exprimer une action.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Appelé parfois &lt;strong>procédure&lt;/strong> ou &lt;strong>fonction&lt;/strong> (voir plus loin).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Définition du sous-programme DireBonjour&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> DireBonjour()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Début du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DireBonjour(); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Appel du sous-programme DireBonjour&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Fin du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="dynamique-dutilisation-dun-sous-programme" >Dynamique d&amp;rsquo;utilisation d&amp;rsquo;un sous-programme
&lt;span>
&lt;a href="#dynamique-dutilisation-dun-sous-programme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/chapter05-02.png" alt="Mécanisme d&amp;rsquo;utilisation d&amp;rsquo;un sous-programme">&lt;/p>
&lt;hr>
&lt;h3 id="ordre-de-définition" >Ordre de définition
&lt;span>
&lt;a href="#ordre-de-d%c3%a9finition">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Sauf cas particulier (voir plus loin), l&amp;rsquo;utilisation peut précéder la définition dans le code.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Début du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DireBonjour(); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Fin du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> DireBonjour()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="avantages-des-sous-programmes" >Avantages des sous-programmes
&lt;span>
&lt;a href="#avantages-des-sous-programmes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Permettent de décomposer un problème complexe en sous-parties plus élémentaires.&lt;/li>
&lt;li>Facilitent la maintenance, la réutilisation et les évolutions ultérieures.&lt;/li>
&lt;li>Evitent la duplication de code.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="type-de-retour" >Type de retour
&lt;span>
&lt;a href="#type-de-retour">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le mot-clé &lt;code>return&lt;/code> provoque la fin de l&amp;rsquo;exécution d&amp;rsquo;un sous-programme et définit l&amp;rsquo;expression associée comme sa &lt;strong>valeur de retour&lt;/strong>.&lt;/li>
&lt;li>Le type de cette expression doit être précisé dans la définition de la fonction.&lt;/li>
&lt;li>Un sous-programme C# ne peut avoir qu&amp;rsquo;une seule valeur de retour.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour2()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Début du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = DireBonjour2();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Fin du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="procédure-vs-fonction" >Procédure Vs fonction
&lt;span>
&lt;a href="#proc%c3%a9dure-vs-fonction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Un sous-programme sans valeur de retour est parfois appelé une &lt;strong>procédure&lt;/strong>.&lt;/li>
&lt;li>Un sous-programme avec une valeur de retour est parfois appelé une &lt;strong>fonction&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Procédure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> DireBonjour()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Fonction&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour2()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="nécessité-dune-valeur-de-retour-pour-les-fonctions" >Nécessité d&amp;rsquo;une valeur de retour pour les fonctions
&lt;span>
&lt;a href="#n%c3%a9cessit%c3%a9-dune-valeur-de-retour-pour-les-fonctions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La valeur doit également être compatible avec le type de retour précisé dans la définition.&lt;/li>
&lt;li>Dans les cas contraires : erreur à la compilation.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : aucune valeur de retour (pas de return)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> CalculerUnTruc()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Je calcule...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : tous les chemins de code ne retournent pas une valeur&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> CalculerUnTruc2()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (&lt;span style="color:#0086f7;font-weight:bold">2&lt;/span> &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : conversion implicite impossible d&amp;#39;une chaîne vers un entier&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> CalculerUnTruc3()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="non-utilisation-de-la-valeur-de-retour-dune-fonction" >Non-utilisation de la valeur de retour d&amp;rsquo;une fonction
&lt;span>
&lt;a href="#non-utilisation-de-la-valeur-de-retour-dune-fonction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Ne provoque pas d&amp;rsquo;erreur, mais risque de perte d&amp;rsquo;information.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Début du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DireBonjour2(); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// N&amp;#39;affiche rien !&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Fin du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="variables-locales" >Variables locales
&lt;span>
&lt;a href="#variables-locales">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>On peut déclarer des variables dans le corps d&amp;rsquo;une fonction.&lt;/li>
&lt;li>Elle sont dites &lt;em>locales&lt;/em> : leur portée se limite à la fonction.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour3()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour3()); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : message n&amp;#39;existe pas ici&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="variables-locales-et-nommage" >Variables locales et nommage
&lt;span>
&lt;a href="#variables-locales-et-nommage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Il est possible de déclarer des variables portant des noms identiques mais ayant des portées différentes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour4()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Déclaration d&amp;#39;une variable locale message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Bonjour&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message + &lt;span style="color:#0086d2">&amp;#34; !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Déclaration d&amp;#39;une variable message dans le programme principal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = DireBonjour4();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="variables-globales" >Variables globales
&lt;span>
&lt;a href="#variables-globales">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Visibles dans tous les sous-programmes si elles sont déclarées avant.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Bonjour&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour5()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message + &lt;span style="color:#0086d2">&amp;#34; !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour5()); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="masquage-dune-variable-globale-par-une-variable-locale" >Masquage d&amp;rsquo;une variable globale par une variable locale
&lt;span>
&lt;a href="#masquage-dune-variable-globale-par-une-variable-locale">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La déclaration locale masque la déclaration globale dans le corps du sous-programme.&lt;/li>
&lt;li>Pas d&amp;rsquo;erreur de compilation.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Bonjour&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour6()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La variable locale message masque la variable globale du même nom&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Hello&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message + &lt;span style="color:#0086d2">&amp;#34; !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour6()); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="variables-locales-vs-variables-globales" >Variables locales Vs variables globales
&lt;span>
&lt;a href="#variables-locales-vs-variables-globales">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>On favorise l&amp;rsquo;utilisation de variables locales pour :
&lt;ul>
&lt;li>concevoir les sous-programmes comme des entités autonomes et réutilisables ;&lt;/li>
&lt;li>limiter le risque d&amp;rsquo;&lt;strong>effet de bord&lt;/strong> (modification inattendue d&amp;rsquo;une variable globale dans un sous-programme).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>De manière générale, on essaie de :
&lt;ul>
&lt;li>déclarer les variables au plus près de leur utilisation ;&lt;/li>
&lt;li>limiter au strict nécessaire la portée des variables.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="passage-de-paramètres" >Passage de paramètres
&lt;span>
&lt;a href="#passage-de-param%c3%a8tres">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Paramètre = information dont le sous-programme a besoin pour jouer son rôle.&lt;/li>
&lt;li>Leur liste (types + noms) est définie juste après le nom du sous-programme.&lt;/li>
&lt;li>La &lt;strong>signature&lt;/strong> d&amp;rsquo;une fonction se compose de son nom et de la liste de ses paramètres.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour7(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> prenom)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">$&amp;#34;Bonjour, {prenom} !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour7(&lt;span style="color:#0086d2">&amp;#34;Alex&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour, Alex !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="paramètres-vs-arguments" >Paramètres Vs arguments
&lt;span>
&lt;a href="#param%c3%a8tres-vs-arguments">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La valeur de ses paramètres est fournie au moment de chaque appel du sous-programme.&lt;/li>
&lt;li>Si nécessaires, des conversion de type implicites sont parfois effectués.&lt;/li>
&lt;li>On appelle &lt;strong>argument&lt;/strong> (ou parfois &lt;em>paramètre effectif&lt;/em>) la valeur donnée à un paramètre lors d&amp;rsquo;un appel.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ici l&amp;#39;argument est &amp;#34;Alex&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour7(&lt;span style="color:#0086d2">&amp;#34;Alex&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour, Alex !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ici l&amp;#39;argument est &amp;#34;Marco&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour7(&lt;span style="color:#0086d2">&amp;#34;Marco&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour, Marco !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="paramètres-positionnels" >Paramètres positionnels
&lt;span>
&lt;a href="#param%c3%a8tres-positionnels">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les arguments doivent être compatibles en nombre et en type avec les paramètres.&lt;/li>
&lt;li>Comme dans d&amp;rsquo;autres langages, il est possible de préciser les noms des arguments afin de s&amp;rsquo;affranchir de l&amp;rsquo;ordre utilisé dans la définition du sous-programme.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Presenter(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> prenom, &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> age)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Tu es {prenom} et tu as {age} ans&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter(&lt;span style="color:#0086d2">&amp;#34;Garance&amp;#34;&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">14&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es Garance et tu as 14 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter(&lt;span style="color:#0086d2">&amp;#34;Gaëlle&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : pas de valeur pour le paramètre age&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter(&lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;Prosper&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : types des arguments incompatibles avec ceux des paramètres&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter(age: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>, prenom: &lt;span style="color:#0086d2">&amp;#34;Prosper&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es Prosper et tu as 10 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="valeurs-par-défaut" >Valeurs par défaut
&lt;span>
&lt;a href="#valeurs-par-d%c3%a9faut">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Comme d&amp;rsquo;autres langages, C# permet de définir des valeurs par défaut pour les paramètres non définis lors d&amp;rsquo;un appel.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Presenter2(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> prenom = &lt;span style="color:#0086d2">&amp;#34;inconnu&amp;#34;&lt;/span>, &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> age = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Tu es {prenom} et tu as {age} ans&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter2(&lt;span style="color:#0086d2">&amp;#34;Garance&amp;#34;&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">14&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es Garance et tu as 14 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter2(&lt;span style="color:#0086d2">&amp;#34;Gaëlle&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es Gaëlle et tu as 0 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter2(age: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es inconnu et tu as 10 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mode-de-passage-des-paramètres" >Mode de passage des paramètres
&lt;span>
&lt;a href="#mode-de-passage-des-param%c3%a8tres">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le mode par défaut en C# est le &lt;strong>passage par valeur&lt;/strong> : la valeur de chaque argument est copiée dans le paramètre correspondant.
&lt;ul>
&lt;li>Types valeur : valeur copiée de l’argument vers le paramètre =&amp;gt; zones mémoire distinctes.&lt;/li>
&lt;li>Types référence : référence copiée de l’argument vers le paramètre =&amp;gt; même zone mémoire.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Possibilité de modifier ce comportement avec les mots-clés &lt;code>ref&lt;/code> et &lt;code>out&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--affectation-entre-types-valeur" >Exemple : affectation entre types valeur
&lt;span>
&lt;a href="#exemple--affectation-entre-types-valeur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>int&lt;/code> est un type valeur : les valeurs sont directement stockées dans les variables.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre1 = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre2 = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre2 = nombre1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre1 = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(nombre1); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(nombre2); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>&lt;img src="images/value_types.png" alt="Dynamique de l&amp;rsquo;affectation entre entiers">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--affectation-entre-types-référence" >Exemple : affectation entre types référence
&lt;span>
&lt;a href="#exemple--affectation-entre-types-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>int[]&lt;/code> est un type référence : les variables stockent des &lt;em>références&lt;/em> ($\approx$ adresses mémoire) vers les valeurs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tab1 = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] { &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab2 = { &lt;span style="color:#0086f7;font-weight:bold">4&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">6&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tab2 = tab1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tab1[&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>] = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab1)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 0 2 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab2)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>&lt;img src="images/arrayaffectation.png" alt="Résultat de l&amp;rsquo;affectation entre tableaux">&lt;/p>
&lt;img class="fragment" src="images/omg.png">
&lt;hr>
&lt;p>&lt;img src="images/arrayaffectdynamic.png" alt="Dynamique de l&amp;rsquo;affectation entre tableaux">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--passage-dun-type-valeur-en-paramètre" >Exemple : passage d&amp;rsquo;un type valeur en paramètre
&lt;span>
&lt;a href="#exemple--passage-dun-type-valeur-en-param%c3%a8tre">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Augmenter(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> unNombre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Avant l&amp;#39;augmentation, unNombre = {unNombre}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unNombre++;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Après l&amp;#39;augmentation, unNombre = {unNombre}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Avant l&amp;#39;appel, nombre = {nombre}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Augmenter(nombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Après l&amp;#39;appel, nombre = {nombre}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>La valeur de l’argument (un nombre entier) est copiée dans le paramètre.&lt;/li>
&lt;li>Argument et paramètre correspondent à des zones mémoire différentes.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/value_types_parameter_passing_diagram.png" alt="Dynamique du passage d&amp;rsquo;un entier en paramètre">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--passage-dun-type-référence-en-paramètre" >Exemple : passage d&amp;rsquo;un type référence en paramètre
&lt;span>
&lt;a href="#exemple--passage-dun-type-r%c3%a9f%c3%a9rence-en-param%c3%a8tre">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> AugmenterTab(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] unTab)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Avant l&amp;#39;augmentation, unTab = {string.Join(&amp;#34;&lt;/span> &lt;span style="color:#0086d2">&amp;#34;, unTab)}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>; i &amp;lt; unTab.Length; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unTab[i]++;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Après l&amp;#39;augmentation, unTab = {string.Join(&amp;#34;&lt;/span> &lt;span style="color:#0086d2">&amp;#34;, unTab)}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab = { &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Avant l&amp;#39;appel, tab = {string.Join(&amp;#34;&lt;/span> &lt;span style="color:#0086d2">&amp;#34;, tab)}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 1 2 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AugmenterTab(tab);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Après l&amp;#39;appel, tab = {string.Join(&amp;#34;&lt;/span> &lt;span style="color:#0086d2">&amp;#34;, tab)}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>La valeur de l’argument (une &lt;strong>référence&lt;/strong>) est copiée dans le paramètre.&lt;/li>
&lt;li>Argument et paramètre pointent vers la même zone mémoire.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/arrayparampassing.png" alt="Dynamique du passage en paramète d&amp;rsquo;un tableau">&lt;/p>
&lt;hr>
&lt;h3 id="passage-de-paramètres-par-référence" >Passage de paramètres par référence
&lt;span>
&lt;a href="#passage-de-param%c3%a8tres-par-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Associé à un paramètre dans la signature d&amp;rsquo;un sous-programme, le mot-clé &lt;code>ref&lt;/code> indique que ce paramètre est &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/ref#passing-an-argument-by-reference">passé par référence&lt;/a>.&lt;/li>
&lt;li>Dans ce cas, argument et paramètre pointent vers la même zone mémoire.&lt;/li>
&lt;li>Le mot-clé &lt;code>ref&lt;/code> doit également être utilisé lors de l&amp;rsquo;appel du sous-programme.&lt;/li>
&lt;li>Le mot-clé &lt;code>out&lt;/code> est similaire à &lt;code>ref&lt;/code> mais n&amp;rsquo;oblige pas à initialiser la valeur de l&amp;rsquo;argument avant l&amp;rsquo;appel.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--passage-dun-type-valeur-par-référence" >Exemple : passage d&amp;rsquo;un type valeur par référence
&lt;span>
&lt;a href="#exemple--passage-dun-type-valeur-par-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Permuter(&lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a, &lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> temp = a;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a = b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b = temp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre1 = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre2 = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Permuter(&lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> nombre1, &lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> nombre2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre1} {nombre2}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--passage-dun-type-référence-par-référence" >Exemple : passage d&amp;rsquo;un type référence par référence
&lt;span>
&lt;a href="#exemple--passage-dun-type-r%c3%a9f%c3%a9rence-par-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> ResetTab(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] unTab)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unTab = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] { &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> ResetTabRef(&lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] unTab)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unTab = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] { &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab = { &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ResetTab(tab);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ResetTabRef(&lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> tab);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--passage-dun-type-valeur-par-référence-avec-out" >Exemple : passage d&amp;rsquo;un type valeur par référence avec out
&lt;span>
&lt;a href="#exemple--passage-dun-type-valeur-par-r%c3%a9f%c3%a9rence-avec-out">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Init(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Init2(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : le paramètre doit être modifié&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Init(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> nombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(nombre); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--passage-dun-type-référence-par-référence-avec-out" >Exemple : passage d&amp;rsquo;un type référence par référence avec out
&lt;span>
&lt;a href="#exemple--passage-dun-type-r%c3%a9f%c3%a9rence-par-r%c3%a9f%c3%a9rence-avec-out">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> InitTab(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] unTab)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unTab = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] { &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>InitTab(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> tab);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>ASP.NET Core</title><link>https://www.bpesquet.fr/slides/asp-net-core/</link><pubDate>Tue, 21 Sep 2021 09:40:11 +0200</pubDate><guid>https://www.bpesquet.fr/slides/asp-net-core/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Présentation de ASP.NET Core&lt;/li>
&lt;li>Le framework ASP.NET Core MVC&lt;/li>
&lt;li>Routage et environnement&lt;/li>
&lt;li>Interactions avec une base de données&lt;/li>
&lt;li>Création d&amp;rsquo;API web&lt;/li>
&lt;li>Création de vues HTML&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="présentation-daspnet-core" >Présentation d&amp;rsquo;ASP.NET Core
&lt;span>
&lt;a href="#pr%c3%a9sentation-daspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="histoire-daspnet-core" >Histoire d&amp;rsquo;ASP.NET Core
&lt;span>
&lt;a href="#histoire-daspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>A l&amp;rsquo;origine, .NET (Framework) incluait une technologie de création de pages web dynamiques nommée &lt;strong>ASP.NET&lt;/strong> (&lt;em>Active Server Pages&lt;/em>).&lt;/li>
&lt;li>&lt;strong>ASP.NET Core&lt;/strong> est une réécriture d&amp;rsquo;ASP.NET basée sur .NET (Core).&lt;/li>
&lt;li>Standard actuel pour le développement web sous .NET.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="points-clés-daspnet-core" >Points-clés d&amp;rsquo;ASP.NET Core
&lt;span>
&lt;a href="#points-cl%c3%a9s-daspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Permet de créer des applications web et des services web (API) utilisés comme &lt;em>backends&lt;/em> par des clients riches ou des applications mobiles.&lt;/li>
&lt;li>Léger, moderne et modulaire.&lt;/li>
&lt;li>Inclut des technologies facilitant la gestion des pages dynamiques, des appels temps réel, des tests, etc.&lt;/li>
&lt;li>Déployable sur plusieurs serveurs web : Kestrel, Apache, nginx, etc.&lt;/li>
&lt;li>Multi-plateformes et &lt;a href="https://github.com/dotnet/aspnetcore">open source&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="rappel--le-fonctionnement-du-web" >Rappel : le fonctionnement du web
&lt;span>
&lt;a href="#rappel--le-fonctionnement-du-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Le web est basé sur un modèle &lt;strong>client/serveur&lt;/strong> :&lt;/p>
&lt;ul>
&lt;li>Le client (navigateur, application mobile, robot d&amp;rsquo;indexation, etc) envoie une demande (&lt;strong>requête&lt;/strong>) au serveur.&lt;/li>
&lt;li>Le serveur prépare sa &lt;strong>réponse&lt;/strong> à la requête du client, puis la lui renvoie.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/web_request_response.png" alt="Modèle requête/réponse du web">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="rappel--le-protocole-http" >Rappel : le protocole HTTP
&lt;span>
&lt;a href="#rappel--le-protocole-http">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;em>HyperText Transfer Protocol&lt;/em>.&lt;/li>
&lt;li>Socle technique du web.&lt;/li>
&lt;li>Equivalent sécurisé : &lt;strong>HTTPS&lt;/strong>.&lt;/li>
&lt;li>Basé sur des &lt;strong>commandes&lt;/strong> textuelles exprimant les différentes actions possibles : &lt;em>GET&lt;/em>, &lt;em>PUT&lt;/em>, &lt;em>POST&lt;/em>, etc).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="ui-web-générée-côté-serveur" >UI web générée côté serveur
&lt;span>
&lt;a href="#ui-web-g%c3%a9n%c3%a9r%c3%a9e-c%c3%b4t%c3%a9-serveur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Structure HTML contenant les données générée côté serveur, puis renvoyée au client.&lt;/p>
&lt;ul>
&lt;li>Peu d&amp;rsquo;exigences techniques côté client (navigateur simple, trafic réseau limité).&lt;/li>
&lt;li>Accès BD et contrôles centralisés.&lt;/li>
&lt;li>Exemples d&amp;rsquo;usages : sites dynamiques, blogs, CMS&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://www.growth-rocket.com/blog/a-closer-look-at-client-side-server-side-rendering/">&lt;img src="images/Server-Side-Rendering-Flowchart.jpg" alt="SSR">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="ui-web-générée-côté-client" >UI web générée côté client
&lt;span>
&lt;a href="#ui-web-g%c3%a9n%c3%a9r%c3%a9e-c%c3%b4t%c3%a9-client">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Squelette HTML (sans données) initialement renvoyé au client. Ensuite, DOM mis à jour dynamiquement grâce à des appels asynchrones du client vers le serveur.&lt;/p>
&lt;ul>
&lt;li>Interactions riches avec l&amp;rsquo;utilisateur.&lt;/li>
&lt;li>Capacités matérielles et logicielles du client utilisables.&lt;/li>
&lt;li>Exemples d&amp;rsquo;usages : tableau de bord interactif, applications collaboratives&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://www.growth-rocket.com/blog/a-closer-look-at-client-side-server-side-rendering/">&lt;img src="images/Client-Side-Rendering-Flowchart.jpg" alt="CSR">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="loffre-technique-aspnet-core" >L&amp;rsquo;offre technique ASP.NET Core
&lt;span>
&lt;a href="#loffre-technique-aspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>UI générée côté serveur : &lt;strong>Razor Pages&lt;/strong>, &lt;strong>MVC&lt;/strong>.&lt;/li>
&lt;li>UI générée côté client : &lt;strong>Blazor&lt;/strong>, &lt;strong>SPA&lt;/strong> avec Angular ou React.&lt;/li>
&lt;li>Une approche hybride est possible (exemple : MVC + Blazor).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="le-framework-aspnet-core-mvc" >Le framework ASP.NET Core MVC
&lt;span>
&lt;a href="#le-framework-aspnet-core-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="larchitecture-mvc" >L&amp;rsquo;architecture MVC
&lt;span>
&lt;a href="#larchitecture-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;em>Model-View-Controller&lt;/em> (&lt;em>Modèle-Vue-Contrôleur&lt;/em>).&lt;/li>
&lt;li>Décomposition d’une application en trois grandes parties :
&lt;ul>
&lt;li>&lt;strong>Modèle&lt;/strong> : accès aux données et logique métier (&lt;em>business logic&lt;/em>).&lt;/li>
&lt;li>&lt;strong>Vue&lt;/strong> : affichage et interactions avec l’utilisateur.&lt;/li>
&lt;li>&lt;strong>Contrôleur&lt;/strong> : dynamique de l’application, lien entre Modèle et Vue.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Application du principe de séparation des responsabilités.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="mvc--un-peu-dhistoire" >MVC : un peu d&amp;rsquo;histoire
&lt;span>
&lt;a href="#mvc--un-peu-dhistoire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Apparu à la fin des années 1970 pour le langage OO &lt;strong>Smalltalk&lt;/strong>. Objectif : séparer le code de l’IHM de la logique applicative.&lt;/li>
&lt;li>Appliqué depuis dans de très nombreux contextes et langages :
&lt;ul>
&lt;li>web côté serveur : frameworks Symfony (PHP), Django (Python), Rails (Ruby), etc.&lt;/li>
&lt;li>web côté client : frameworks Angular, Ember (JavaScript), etc.&lt;/li>
&lt;li>desktop : bibliothèque Swing (Java), etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://symfony.com/doc/current/index.html">&lt;img src="images/symfony_mvc.png" alt="Dynamique d&amp;rsquo;un serveur web MVC">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="avantages-et-inconvénients" >Avantages et inconvénients
&lt;span>
&lt;a href="#avantages-et-inconv%c3%a9nients">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Avantages :&lt;/p>
&lt;ul>
&lt;li>Séparation nette des responsabilités =&amp;gt; couplage faible, cohésion forte, maintenance et évolutions facilitées.&lt;/li>
&lt;li>Standard connu et bien établi.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Inconvénients :&lt;/p>
&lt;ul>
&lt;li>Complexification de l’architecture.&lt;/li>
&lt;li>Rigidité.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="aspnet-core-mvc" >ASP.NET Core MVC
&lt;span>
&lt;a href="#aspnet-core-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Framework de création d&amp;rsquo;applications web basées sur l&amp;rsquo;architecture MVC.&lt;/li>
&lt;li>Implémente de nombreux services et bonnes pratiques, parmi lesquels :
&lt;ul>
&lt;li>Routage des requêtes entrantes.&lt;/li>
&lt;li>Gestion des pages dynamiques.&lt;/li>
&lt;li>Authentification.&lt;/li>
&lt;li>Injection de dépendance.&lt;/li>
&lt;li>Tests.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="creation-dune-application-aspnet-core-mvc" >Creation d&amp;rsquo;une application ASP.NET Core MVC
&lt;span>
&lt;a href="#creation-dune-application-aspnet-core-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet new mvc -o {AppName}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd {AppName}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet new gitignore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="structure-de-lapplication-créée" >Structure de l&amp;rsquo;application créée
&lt;span>
&lt;a href="#structure-de-lapplication-cr%c3%a9%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-glog/MvcMovie">https://github.com/ensc-glog/MvcMovie&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/aspnetcoremvc_structure.png" alt="Structure d&amp;rsquo;une application ASP.NET Core MVC">&lt;/p>
&lt;hr>
&lt;h3 id="les-contrôleurs" >Les contrôleurs
&lt;span>
&lt;a href="#les-contr%c3%b4leurs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Créés dans le répertoire &lt;code>Controllers/&lt;/code>.&lt;/li>
&lt;li>Définis dans l&amp;rsquo;espace de noms &lt;code>{AppName}/Controllers&lt;/code>.&lt;/li>
&lt;li>Héritent des classes abstraites &lt;code>Controller&lt;/code> (vues HTML) ou &lt;code>ControllerBase&lt;/code> (API web).&lt;/li>
&lt;li>Définissent les points d&amp;rsquo;entrée dans l&amp;rsquo;application sous la forme de méthodes d&amp;rsquo;action annotables.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-contrôleur" >Exemple de contrôleur
&lt;span>
&lt;a href="#exemple-de-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HomeController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Privacy()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="les-modèles" >Les modèles
&lt;span>
&lt;a href="#les-mod%c3%a8les">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Créés dans le répertoire &lt;code>Models/&lt;/code>.&lt;/li>
&lt;li>Définis dans l&amp;rsquo;espace de noms &lt;code>{AppName}/Models&lt;/code>.&lt;/li>
&lt;li>Implémentent la logique métier de l&amp;rsquo;application sous la forme de classes &lt;strong>POCO&lt;/strong> (&lt;em>Plain Old CLR Objects&lt;/em>) souvent associées à des tables BD.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="les-vues" >Les vues
&lt;span>
&lt;a href="#les-vues">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Créées dans le répertoire &lt;code>Views/{ControllerName}&lt;/code> sous la forme de fichiers &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-6.0&amp;amp;tabs=visual-studio">Razor&lt;/a> (&lt;code>.cshtml&lt;/code>).&lt;/li>
&lt;li>Représentent l&amp;rsquo;interface utilisateur (UI) de l&amp;rsquo;application.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span>] = &lt;span style="color:#0086d2">&amp;#34;Home Page&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;div class=&lt;span style="color:#0086d2">&amp;#34;text-center&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;h1 class=&lt;span style="color:#0086d2">&amp;#34;display-4&amp;#34;&lt;/span>&amp;gt;Welcome&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;p&amp;gt;Learn about &amp;lt;a href=&lt;span style="color:#0086d2">&amp;#34;https://docs.microsoft.com/aspnet/core&amp;#34;&lt;/span>&amp;gt;building Web apps with ASP.NET Core&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="code-et-librairies-client" >Code et librairies client
&lt;span>
&lt;a href="#code-et-librairies-client">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Regroupés dans le répertoire &lt;code>wwwroot/&lt;/code>.&lt;/li>
&lt;li>Rassemblent les fichiers CSS et JavaScript utilisés côté client.&lt;/li>
&lt;li>Intègrent par défaut Bootstrap et jQuery.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/aspnetcoremvc_wwwroot.png" alt="wwwroot folder structure">&lt;/p>
&lt;hr>
&lt;h3 id="le-fichier-appsettingsjson" >Le fichier appsettings.json
&lt;span>
&lt;a href="#le-fichier-appsettingsjson">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Centralise les paramètres de configuration de l&amp;rsquo;application.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;Logging&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;LogLevel&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;Default&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Information&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;Microsoft.AspNetCore&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Warning&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;Microsoft.EntityFrameworkCore.Database.Command&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Information&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-fichier-programcs" >Le fichier Program.cs
&lt;span>
&lt;a href="#le-fichier-programcs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Configure les services utilisés et le &lt;em>pipeline&lt;/em> de gestion des requêtes HTTP entrantes.&lt;/li>
&lt;li>Démarre l&amp;rsquo;application.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> builder = WebApplication.CreateBuilder(args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add services to the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddControllersWithViews();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> app = builder.Build();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.UseHttpsRedirection();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.UseStaticFiles();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.UseRouting();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.UseAuthorization();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.MapControllerRoute(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#0086d2">&amp;#34;default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pattern: &lt;span style="color:#0086d2">&amp;#34;{controller=Home}/{action=Index}/{id?}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.Run();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="lancement-de-lapplication" >Lancement de l&amp;rsquo;application
&lt;span>
&lt;a href="#lancement-de-lapplication">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>En ligne de commande avec &lt;code>dotnet run&lt;/code> ou depuis VS Code, après avoir généré les &lt;em>assets&lt;/em>.&lt;/li>
&lt;li>Compile le code puis écoute un port aléatoire &amp;gt; 1000 pour attendre les requêtes HTTP entrantes sur la machine locale.&lt;/li>
&lt;li>Recompilation nécessaire après tout changement.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/dotnet-run.png" alt="dotnet run">&lt;/p>
&lt;hr>
&lt;h2 id="routage-et-environnement" >Routage et environnement
&lt;span>
&lt;a href="#routage-et-environnement">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="routage-des-requêtes" >Routage des requêtes
&lt;span>
&lt;a href="#routage-des-requ%c3%aates">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Associe les requêtes HTTP entrantes au code à exécuter (méthodes des contrôleurs).&lt;/li>
&lt;li>Permet à l&amp;rsquo;application web d&amp;rsquo;utiliser des URL propres et &lt;em>SEO-friendly&lt;/em>, plutôt que des noms de fichiers.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing?view=aspnetcore-5.0">Plus d&amp;rsquo;informations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="routage-par-convention" >Routage par convention
&lt;span>
&lt;a href="#routage-par-convention">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Permet de définir globalement la correspondance entre le format de l&amp;rsquo;URL et la méthode d&amp;rsquo;action d&amp;rsquo;un contrôleur à exécuter.&lt;/li>
&lt;li>Format par défaut : &lt;code>/{ControllerName}/{ActionName}?{Parameters}&lt;/code>.&lt;/li>
&lt;li>Exemple : &lt;code>https://myapp/Student/Details?code=137&lt;/code> appelle la méthode &lt;code>Details&lt;/code> du contrôleur &lt;code>StudentController&lt;/code>, en lui passant un paramètre nommé &lt;code>code&lt;/code> ayant la valeur 137.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="configuration-du-routage-par-convention-dans-programcs" >Configuration du routage par convention dans Program.cs
&lt;span>
&lt;a href="#configuration-du-routage-par-convention-dans-programcs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>app.MapControllerRoute(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#0086d2">&amp;#34;default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pattern: &lt;span style="color:#0086d2">&amp;#34;{controller=Home}/{action=Index}/{id?}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Home&lt;/code>, &lt;code>Index&lt;/code> et &lt;code>id&lt;/code> sont resp. les noms par défaut du contrôleur, de l&amp;rsquo;action et du paramètre (optionnel).&lt;/p>
&lt;hr>
&lt;h3 id="exemple--ajout-dun-contrôleur" >Exemple : ajout d&amp;rsquo;un contrôleur
&lt;span>
&lt;a href="#exemple--ajout-dun-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Controllers/HelloController.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: /Hello/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Hello World!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="utilisation-du-contrôleur-créé" >Utilisation du contrôleur créé
&lt;span>
&lt;a href="#utilisation-du-contr%c3%b4leur-cr%c3%a9%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;URL &lt;a href="https://localhost:%7Bport%7D/hello">https://localhost:{port}/hello&lt;/a> est automatiquement routée vers la méthode &lt;code>Index&lt;/code> de la classe &lt;code>HelloController&lt;/code>.&lt;/li>
&lt;li>Même résultat avec &lt;a href="https://localhost:%7Bport%7D/hello/index">https://localhost:{port}/hello/index&lt;/a>, &lt;code>Index&lt;/code> étant le nom de l&amp;rsquo;action par défaut.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/helloworldcontroller.png" alt="Hello World!">&lt;/p>
&lt;hr>
&lt;h3 id="passage-de-paramètres-à-un-contrôleur" >Passage de paramètres à un contrôleur
&lt;span>
&lt;a href="#passage-de-param%c3%a8tres-%c3%a0-un-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>On définit des paramètres dans l&amp;rsquo;URL via la syntaxe &lt;code>?{name1}={value1}&amp;amp;{name2}=...&lt;/code>&lt;/li>
&lt;li>Leurs valeurs sont passées aux méthodes d&amp;rsquo;actions des contrôleurs.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> System.Text.Encodings.Web;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: /Hello/Welcome/ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Welcome(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> name, &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> numTimes = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Prevents injection attacks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> HtmlEncoder.Default.Encode(&lt;span style="color:#0086d2">$&amp;#34;Hello {name}, NumTimes is: {numTimes}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--passage-de-paramètres-au-contrôleur-créé" >Exemple : passage de paramètres au contrôleur créé
&lt;span>
&lt;a href="#exemple--passage-de-param%c3%a8tres-au-contr%c3%b4leur-cr%c3%a9%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;URL &lt;a href="https://localhost:%7Bport%7D/hello/welcome">https://localhost:{port}/hello/welcome&lt;/a> est automatiquement routée vers la méthode &lt;code>Welcome&lt;/code> de la classe &lt;code>HelloController&lt;/code>.&lt;/li>
&lt;li>On peut définir (ou pas) les valeurs des paramètres &lt;code>name&lt;/code> et &lt;code>numTimes&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/welcomecontroller.png" alt="Welcome">&lt;/p>
&lt;hr>
&lt;h3 id="environnements" >Environnements
&lt;span>
&lt;a href="#environnements">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Permettent d&amp;rsquo;adapter la configuration de l&amp;rsquo;application au contexte (développement, test ou production).&lt;/li>
&lt;li>Définis par la variable d&amp;rsquo;environnement &lt;code>ASPNETCORE_ENVIRONMENT&lt;/code>. En l&amp;rsquo;absence de cette variable, l&amp;rsquo;environnement est de type Production.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments?view=aspnetcore-5.0">Plus d&amp;rsquo;informations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="définition-de-lenvironnement-avec-visual-studio-code" >Définition de l&amp;rsquo;environnement avec Visual Studio Code
&lt;span>
&lt;a href="#d%c3%a9finition-de-lenvironnement-avec-visual-studio-code">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>./vscode/launch.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;0.2.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;configurations&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;.NET Core Launch (web)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ASPNETCORE_ENVIRONMENT&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Development&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="configuration-de-lapplication-selon-lenvironnement-détecté" >Configuration de l&amp;rsquo;application selon l&amp;rsquo;environnement détecté
&lt;span>
&lt;a href="#configuration-de-lapplication-selon-lenvironnement-d%c3%a9tect%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Program.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Configure the HTTP request pipeline.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (!app.Environment.IsDevelopment())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app.UseExceptionHandler(&lt;span style="color:#0086d2">&amp;#34;/Home/Error&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app.UseHsts();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app.UseDeveloperExceptionPage();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="interactions-avec-une-base-de-données" >Interactions avec une base de données
&lt;span>
&lt;a href="#interactions-avec-une-base-de-donn%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="ef-core-et-aspnet-core" >EF Core et ASP.NET Core
&lt;span>
&lt;a href="#ef-core-et-aspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Entity Framework Core est la solution de persistance par défaut sous ASP.NET Core.&lt;/li>
&lt;li>Après son installation, on configure l&amp;rsquo;application pour &lt;a href="https://docs.microsoft.com/en-us/ef/core/dbcontext-configuration/">associer&lt;/a> un contexte BD à chaque requête HTTP entrante.&lt;/li>
&lt;li>Il est ensuite utilisé par les contrôleurs pour interagir avec la base de données.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--ajout-dune-classe-métier" >Exemple : ajout d&amp;rsquo;une classe métier
&lt;span>
&lt;a href="#exemple--ajout-dune-classe-m%c3%a9tier">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Models/Movie.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> System.ComponentModel.DataAnnotations;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(100, MinimumLength = 3)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Title { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [Display(Name = &amp;#34;Release Date&amp;#34;), DataType(DataType.Date)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DateTime ReleaseDate { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(30)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Genre { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="création-du-contexte-bd" >Création du contexte BD
&lt;span>
&lt;a href="#cr%c3%a9ation-du-contexte-bd">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Data/MvcMovieContext.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MvcMovieContext : DbContext
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;Movie&amp;gt; Movies { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DbPath { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> MvcMovieContext()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Path to SQLite database file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DbPath = &lt;span style="color:#0086d2">&amp;#34;MvcMovie.db&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The following configures EF to create a SQLite database file locally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">protected&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">override&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> OnConfiguring(DbContextOptionsBuilder options)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use SQLite as database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.UseSqlite(&lt;span style="color:#0086d2">$&amp;#34;Data Source={DbPath}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Optional: log SQL queries to console&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.LogTo(Console.WriteLine, &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span>[] { DbLoggerCategory.Database.Command.Name }, LogLevel.Information);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="synchronisation-de-la-base-de-données-avec-le-modèle" >Synchronisation de la base de données avec le modèle
&lt;span>
&lt;a href="#synchronisation-de-la-base-de-donn%c3%a9es-avec-le-mod%c3%a8le">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Réalisée via des migrations.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Create a new migration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet ef migrations add {MigratioName}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Sync DB with most recent migrations&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet ef database update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="configuration-de-lapplication-pour-ef-core" >Configuration de l&amp;rsquo;application pour EF Core
&lt;span>
&lt;a href="#configuration-de-lapplication-pour-ef-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Program.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> builder = WebApplication.CreateBuilder(args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add services to the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddControllersWithViews();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Attach an EF Core database context to each query&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddDbContext&amp;lt;MvcMovieContext&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="gestion-des-fichiers-temporaires-sqlite" >Gestion des fichiers temporaires SQLite
&lt;span>
&lt;a href="#gestion-des-fichiers-temporaires-sqlite">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Edition du fichier &lt;code>.gitignore&lt;/code> pour ignorer ces fichiers.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Ignore SQLite temp files&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.db-shm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.db-wal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="remplissage-de-la-base-de-données" >Remplissage de la base de données
&lt;span>
&lt;a href="#remplissage-de-la-base-de-donn%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Classe &lt;code>SeedData&lt;/code> créée dans le répertoire &lt;code>Models/&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> SeedData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Init()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> MvcMovieContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Look for existing content&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (context.Movies.Any())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// DB already filled&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add several movies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.Movies.AddRange(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Title = &lt;span style="color:#0086d2">&amp;#34;When Harry Met Sally&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReleaseDate = DateTime.Parse(&lt;span style="color:#0086d2">&amp;#34;1989-2-12&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Genre = &lt;span style="color:#0086d2">&amp;#34;Romantic Comedy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Title = &lt;span style="color:#0086d2">&amp;#34;Rio Bravo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReleaseDate = DateTime.Parse(&lt;span style="color:#0086d2">&amp;#34;1959-4-15&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Genre = &lt;span style="color:#0086d2">&amp;#34;Western&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Commit changes into DB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exécution-du-code-de-remplissage" >Exécution du code de remplissage
&lt;span>
&lt;a href="#ex%c3%a9cution-du-code-de-remplissage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Program.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> builder = WebApplication.CreateBuilder(args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add services to the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddControllersWithViews();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Attach an EF Core database context to each query&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddDbContext&amp;lt;MvcMovieContext&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> app = builder.Build();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Seed data into DB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SeedData.Init();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="création-dapi-web" >Création d&amp;rsquo;API web
&lt;span>
&lt;a href="#cr%c3%a9ation-dapi-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-notion-dapi" >La notion d&amp;rsquo;API
&lt;span>
&lt;a href="#la-notion-dapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une &lt;strong>API&lt;/strong> (&lt;em>Application Programming Interface&lt;/em>) est un point d&amp;rsquo;entrée programmatique dans un système.&lt;/li>
&lt;li>Elle fournit un moyen d&amp;rsquo;interagir avec ce système.&lt;/li>
&lt;li>Les API permettent aux développeurs d&amp;rsquo;intégrer des services externes dans leurs applications.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="spécificités-des-api-web" >Spécificités des API web
&lt;span>
&lt;a href="#sp%c3%a9cificit%c3%a9s-des-api-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une &lt;strong>API web&lt;/strong> (appelée parfois service web) est une API accessible via les technologies du web : HTTP ou HTTPS.&lt;/li>
&lt;li>Les API web utilisent le plus souvent le format de donnée &lt;strong>JSON&lt;/strong>.&lt;/li>
&lt;li>Certaines sont librement utilisables mais la plupart nécessitent une authentification du client.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="le-format-json" >Le format JSON
&lt;span>
&lt;a href="#le-format-json">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>JSON = JavaScript Object Notation.&lt;/li>
&lt;li>Format de description de données structurées inspiré de la syntaxe des objets JavaScript.&lt;/li>
&lt;li>Contenu JSON = ensemble de paires champ/valeur.&lt;/li>
&lt;li>Types de valeur possibles : nombres, chaînes, booléens, tableaux, objets.&lt;/li>
&lt;li>A supplanté XML comme format standard pour les échanges de données via des API web.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-contenu-json" >Exemple de contenu JSON
&lt;span>
&lt;a href="#exemple-de-contenu-json">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;cars&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Peugeot&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;color&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;checkups&amp;#34;&lt;/span>: [&lt;span style="color:#0086f7;font-weight:bold">2015&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2017&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Citroën&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;color&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;white&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;checkups&amp;#34;&lt;/span>: [&lt;span style="color:#0086f7;font-weight:bold">2003&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2005&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2007&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2009&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2011&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2013&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="exemples-dapi-web" >Exemples d&amp;rsquo;API web
&lt;span>
&lt;a href="#exemples-dapi-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://pokeapi.co/">PokéAPI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://swapi.dev/">Star Wars API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/w/api.php?">Wikipedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.spotify.com/documentation/web-api/">Spotify&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.omdbapi.com/">OMDb API&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="outils-pour-la-gestion-des-api-web" >Outils pour la gestion des API web
&lt;span>
&lt;a href="#outils-pour-la-gestion-des-api-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>N&amp;rsquo;importe quel navigateur pour les tests basiques.&lt;/li>
&lt;li>Extension &lt;a href="https://addons.mozilla.org/fr/firefox/addon/restclient/">RESTClient&lt;/a> pour Firefox.&lt;/li>
&lt;li>&lt;a href="https://www.getpostman.com/">Postman&lt;/a>.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="les-api-restful" >Les API RESTful
&lt;span>
&lt;a href="#les-api-restful">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>REST&lt;/strong> (&lt;em>REpresentational State Transfer&lt;/em>) est un ensemble de principes pour créer des API : client/serveur, pas de gestion d&amp;rsquo;état, etc.&lt;/li>
&lt;li>Une API web &lt;em>RESTful&lt;/em> (conforme au standard REST) expose une interface basée sur les commandes HTTP. Exemples :
&lt;ul>
&lt;li>&lt;code>GET /&amp;lt;ResourceName&amp;gt;/&amp;lt;id&amp;gt;&lt;/code> pour accéder à une ressource.&lt;/li>
&lt;li>&lt;code>POST /&amp;lt;ResourceName&amp;gt;&lt;/code> (avec les informations nécessaires dans le corps de la requête) pour la créer.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="fonctionnement-dune-api-web-avec-aspnet-core-mvc" >Fonctionnement d&amp;rsquo;une API web avec ASP.NET Core MVC
&lt;span>
&lt;a href="#fonctionnement-dune-api-web-avec-aspnet-core-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-6.0&amp;amp;tabs=visual-studio">&lt;img src="images/aspnetcore_api.png" alt="API call with ASP.NET Core">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="création-dun-contrôleur-dapi" >Création d&amp;rsquo;un contrôleur d&amp;rsquo;API
&lt;span>
&lt;a href="#cr%c3%a9ation-dun-contr%c3%b4leur-dapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Dans le répertoire &lt;code>Controllers/&lt;/code>.&lt;/li>
&lt;li>Hérite de la classe &lt;code>ControllerBase&lt;/code>.&lt;/li>
&lt;li>Associé aux routes du type &lt;code>api/{ApiControllerName}/&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-contrôleur-dapi" >Exemple de contrôleur d&amp;rsquo;API
&lt;span>
&lt;a href="#exemple-de-contr%c3%b4leur-dapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Dans le fichier &lt;code>Controllers/MovieApiController.cs&lt;/code>.&lt;/li>
&lt;li>La conversion au format JSON est implicite.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">readonly&lt;/span> MvcMovieContext _context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> MovieApiController(MvcMovieContext context)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context = context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: api/MovieApi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;ActionResult&amp;lt;IEnumerable&amp;lt;Movie&amp;gt;&amp;gt;&amp;gt; GetMovies()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.ToListAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="requêtes-synchrones" >Requêtes synchrones
&lt;span>
&lt;a href="#requ%c3%aates-synchrones">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://code-maze.com/asynchronous-programming-with-async-and-await-in-asp-net-core/">&lt;img src="images/sync-request-asp.net-core.png" alt="Synchronous requests">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="requêtes-asynchrones" >Requêtes asynchrones
&lt;span>
&lt;a href="#requ%c3%aates-asynchrones">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://code-maze.com/asynchronous-programming-with-async-and-await-in-asp-net-core/">&lt;img src="images/async-request-asp.net-core.png" alt="Asynchronous requests">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="résultat-de-lappel-à-lapi" >Résultat de l&amp;rsquo;appel à l&amp;rsquo;API
&lt;span>
&lt;a href="#r%c3%a9sultat-de-lappel-%c3%a0-lapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/movieapi.png" alt="Movie API">&lt;/p>
&lt;hr>
&lt;h3 id="accès-à-un-élément" >Accès à un élément
&lt;span>
&lt;a href="#acc%c3%a8s-%c3%a0-un-%c3%a9l%c3%a9ment">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: api/MovieApi/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpGet(&amp;#34;{id}&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;ActionResult&amp;lt;Movie&amp;gt;&amp;gt; GetMovie(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.FindAsync(id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> movie;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="test-daccès" >Test d&amp;rsquo;accès
&lt;span>
&lt;a href="#test-dacc%c3%a8s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Envoyer une requête HTTP GET vers l&amp;rsquo;URL &lt;a href="https://localhost:%7Bport%7D/api/movieapi/%7BmovieId%7D">https://localhost:{port}/api/movieapi/{movieId}&lt;/a>.&lt;/p>
&lt;p>&lt;img src="images/movieapi-getone.png" alt="Get one movie">&lt;/p>
&lt;hr>
&lt;h3 id="gestion-des-références-circulaires" >Gestion des références circulaires
&lt;span>
&lt;a href="#gestion-des-r%c3%a9f%c3%a9rences-circulaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La sérialisation JSON d&amp;rsquo;objets métier peut être compliquée par la présence d&amp;rsquo;associations bidirectionnelles.&lt;/li>
&lt;li>Dans ces cas, il faut configurer l&amp;rsquo;application (fichier &lt;code>Program.cs&lt;/code>) pour &lt;a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/preserve-references?pivots=dotnet-6-0">ignorer ou préserver les références circulaires&lt;/a>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> System.Text.Json.Serialization;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> builder = WebApplication.CreateBuilder(args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add services to the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ignore circular references when serializing objects into JSON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddControllersWithViews().AddJsonOptions(x =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.IgnoreCycles);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="création-dun-élément" >Création d&amp;rsquo;un élément
&lt;span>
&lt;a href="#cr%c3%a9ation-dun-%c3%a9l%c3%a9ment">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// POST: api/MovieApi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// To protect from overposting attacks, see https://go.microsoft.com/fwlink/?linkid=2123754&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPost]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;ActionResult&amp;lt;Movie&amp;gt;&amp;gt; PostMovie(Movie movie)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Movies.Add(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> CreatedAtAction(nameof(GetMovie), &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> { id = movie.Id }, movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="test-de-création" >Test de création
&lt;span>
&lt;a href="#test-de-cr%c3%a9ation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Envoyer une requête HTTP POST en spécifiant la valeur du champ &lt;code>Content-type&lt;/code> à &lt;code>application/json&lt;/code>.&lt;/li>
&lt;li>Le contenu JSON de la requête doit inclure les propriétés obligatoires du nouvel élément.&lt;/li>
&lt;li>Exemple avec l&amp;rsquo;outil &lt;a href="https://curl.se/">curl&lt;/a>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -X POST -k -H &lt;span style="color:#0086d2">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> -i https://localhost:{port}/api/movieapi/ --data &lt;span style="color:#0086d2">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Title&amp;#34;: &amp;#34;1941&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;ReleaseDate&amp;#34;: &amp;#34;1979-12-14T00:00:00&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Genre&amp;#34;: &amp;#34;Comedy&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mise-à-jour-dun-élément-existant" >Mise à jour d&amp;rsquo;un élément existant
&lt;span>
&lt;a href="#mise-%c3%a0-jour-dun-%c3%a9l%c3%a9ment-existant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// PUT: api/MovieApi/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// To protect from overposting attacks, see https://go.microsoft.com/fwlink/?linkid=2123754&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPut(&amp;#34;{id}&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; PutMovie(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id, Movie movie)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id != movie.Id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> BadRequest();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Entry(movie).State = EntityState.Modified;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (DbUpdateConcurrencyException)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (!MovieExists(id))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NoContent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Returns true if a movie with specified id already exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> MovieExists(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> _context.Movies.Any(m =&amp;gt; m.Id == id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="test-de-mise-à-jour" >Test de mise à jour
&lt;span>
&lt;a href="#test-de-mise-%c3%a0-jour">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Envoyer une requête HTTP PUT vers l&amp;rsquo;élément à modifier, en spécifiant la valeur du champ &lt;code>Content-type&lt;/code> à &lt;code>application/json&lt;/code>.&lt;/li>
&lt;li>Le contenu JSON de la requête doit inclure toutes les propriétés de l&amp;rsquo;élément modifié.&lt;/li>
&lt;li>Exemple avec l&amp;rsquo;outil &lt;a href="https://curl.se/">curl&lt;/a>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -X PUT -k -H &lt;span style="color:#0086d2">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> -i https://localhost:7294/api/movieapi/5 --data &lt;span style="color:#0086d2">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Id&amp;#34;: 5,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Title&amp;#34;: &amp;#34;1941 (movie)&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;ReleaseDate&amp;#34;: &amp;#34;1979-12-14T00:00:00&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Genre&amp;#34;: &amp;#34;Comedy&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="suppression-dun-élément" >Suppression d&amp;rsquo;un élément
&lt;span>
&lt;a href="#suppression-dun-%c3%a9l%c3%a9ment">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// DELETE: api/MovieApi/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpDelete(&amp;#34;{id}&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; DeleteMovie(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.FindAsync(id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Movies.Remove(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NoContent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="test-de-suppression" >Test de suppression
&lt;span>
&lt;a href="#test-de-suppression">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Envoyer une requête HTTP DELETE vers l&amp;rsquo;URL &lt;a href="https://localhost:%7Bport%7D/api/movieapi/%7BmovieId%7D">https://localhost:{port}/api/movieapi/{movieId}&lt;/a>.&lt;/p>
&lt;hr>
&lt;h3 id="récapitulatif--api-créée" >Récapitulatif : API créée
&lt;span>
&lt;a href="#r%c3%a9capitulatif--api-cr%c3%a9%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Route&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>GET /api/MovieApi&lt;/code>&lt;/td>
&lt;td>Renvoie tous les films&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>GET /api/MovieApi/{id}&lt;/code>&lt;/td>
&lt;td>Renvoie un film&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>POST /api/MovieApi&lt;/code>&lt;/td>
&lt;td>Ajoute un nouvel film&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>PUT /api/MovieApi/{id}&lt;/code>&lt;/td>
&lt;td>Met à jour un film&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>DELETE /api/MovieApi/{id}&lt;/code>&lt;/td>
&lt;td>Supprime un film&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="création-de-vues-html" >Création de vues HTML
&lt;span>
&lt;a href="#cr%c3%a9ation-de-vues-html">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="correspondance-entre-contrôleurs-et-vues" >Correspondance entre contrôleurs et vues
&lt;span>
&lt;a href="#correspondance-entre-contr%c3%b4leurs-et-vues">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Dans une méthode d&amp;rsquo;action &lt;code>{ActionName}&lt;/code> d&amp;rsquo;un contrôleur &lt;code>Controllers/{CtrlName}Controller&lt;/code>, l&amp;rsquo;appel de &lt;code>View()&lt;/code>déclenche le rendu de la vue &lt;code>Views/{CtrlName}/{ActionName}.cshtml&lt;/code>.&lt;/li>
&lt;li>Le résultat HTML de ce rendu constitue la réponse HTTP renvoyée par le serveur au client.&lt;/li>
&lt;li>Nécessite que le contrôleur hérite de &lt;code>Controller&lt;/code> et non &lt;code>ControllerBase&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="la-syntaxe-des-vues" >La syntaxe des vues
&lt;span>
&lt;a href="#la-syntaxe-des-vues">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0">Razor&lt;/a> est un langage de balisage permettant d&amp;rsquo;inclure du code C# dans des pages web.&lt;/li>
&lt;li>Le symbole &lt;code>@&lt;/code> permet de basculer du HTML au C# dans la page. Il peut être suivi :
&lt;ul>
&lt;li>d&amp;rsquo;une expression implicite sans espaces &lt;code>@maVariable&lt;/code>&lt;/li>
&lt;li>d&amp;rsquo;une expression explicite entre parenthèses &lt;code>@(nb1 + nb2)&lt;/code>&lt;/li>
&lt;li>d&amp;rsquo;un &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0#razor-reserved-keywords">mot-clé Razor&lt;/a>.&lt;/li>
&lt;li>d&amp;rsquo;un bloc de code C# entre accolades &lt;code>@{...}&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="structure-commune-des-vues" >Structure commune des vues
&lt;span>
&lt;a href="#structure-commune-des-vues">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Par défaut, toutes les vues partagent une structure commune définie dans le fichier &lt;code>Views/Shared/_Layout.cshtml&lt;/code>.&lt;/li>
&lt;li>Dans ce layout, la fonction &lt;code>@RenderBody()&lt;/code> permet de générer le contenu spécifique de la vue à afficher.&lt;/li>
&lt;li>Les éléments externes (exemples : inclusions CSS ou JavaScript) peuvent être rassemblés dans des &lt;strong>sections&lt;/strong> affichées par le layout.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-layout" >Exemple de layout
&lt;span>
&lt;a href="#exemple-de-layout">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0007;background-color:#0f140f;font-weight:bold;font-style:italic">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">html&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">lang&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">meta&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">charset&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;utf-8&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">title&lt;/span>&amp;gt;@ViewData[&amp;#34;Title&amp;#34;] - Movie App&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">header&lt;/span>&amp;gt;&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&amp;lt;!-- ... --&amp;gt;&lt;/span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">header&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;container&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">main&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">role&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;main&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;pb-3&amp;#34;&lt;/span>&amp;gt;@RenderBody()&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">main&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">footer&lt;/span>&amp;gt;&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&amp;lt;!-- ... --&amp;gt;&lt;/span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">footer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">script&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">src&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;~/lib/jquery/dist/jquery.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @await RenderSectionAsync(&amp;#34;Scripts&amp;#34;, required: false)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--rendu-dune-vue" >Exemple : rendu d&amp;rsquo;une vue
&lt;span>
&lt;a href="#exemple--rendu-dune-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à la route &lt;code>/Hello&lt;/code> dans le fichier &lt;code>Controllers/HelloController.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloController : Controller &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// not ControllerBase!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: /Hello/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Renders Views/Hello/Index.cshtml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--possibilités-de-base" >Exemple : possibilités de base
&lt;span>
&lt;a href="#exemple--possibilit%c3%a9s-de-base">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Hello/Index.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This view demonstrates some possibilities of the Razor syntax.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (This is a server-side comment, by the way).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*@
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Hello ASP.NET Core MVC!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @* Some info about a famous monument. *@
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string monument = &amp;#34;Eiffel Tower&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> int year = 1889;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;The @monument was inaugurated in @year. It is @(DateTime.Now.Year - year) years old!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--structures-de-contrôle-et-tableaux" >Exemple : structures de contrôle et tableaux
&lt;span>
&lt;a href="#exemple--structures-de-contr%c3%b4le-et-tableaux">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string[] colors = { &amp;#34;blue&amp;#34;, &amp;#34;brown&amp;#34;, &amp;#34;black&amp;#34; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@if (colors.Length &amp;gt; 0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;A few colors:&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">ul&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @foreach (string color in colors)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">li&lt;/span>&amp;gt;Color: @color&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">li&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">ul&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0#control-structures">Plus de détails&lt;/a>)&lt;/p>
&lt;hr>
&lt;h3 id="blocs-de-code-razor" >Blocs de code Razor
&lt;span>
&lt;a href="#blocs-de-code-razor">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Définis par la syntaxe &lt;code>@{...}&lt;/code>.&lt;/li>
&lt;li>Le code C# contenu n&amp;rsquo;est pas rendu (= pas ajouté au résultat HTML renvoyé).&lt;/li>
&lt;li>A l&amp;rsquo;intérieur d&amp;rsquo;un bloc,
&lt;ul>
&lt;li>les balises HTML permettent de basculer du C# au HTML.&lt;/li>
&lt;li>la balise &lt;code>&amp;lt;text&amp;gt;&lt;/code> permet de demander explicitement le rendu HTML d&amp;rsquo;un contenu C# sans balises.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--blocs-razor-et-fonctions" >Exemple : blocs Razor et fonctions
&lt;span>
&lt;a href="#exemple--blocs-razor-et-fonctions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> void RenderStrong(string value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">strong&lt;/span>&amp;gt;@value&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">strong&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> int count = 5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> while (count &amp;gt; 0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">text&lt;/span>&amp;gt;@count... &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count--;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RenderStrong(&amp;#34;BOOM!&amp;#34;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="liens" >Liens
&lt;span>
&lt;a href="#liens">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Comme en HTML, les balises &lt;code>&amp;lt;a&amp;gt;&lt;/code> sont utilisées pour les créer.&lt;/li>
&lt;li>Les attributs &lt;code>asp-controller&lt;/code>, &lt;code>asp-action&lt;/code>, &lt;code>asp-route-id&lt;/code> et &lt;code>asp-route-{paramName}&lt;/code> permettent la navigation entre actions.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string visitorName = &amp;#34;Garance&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Here&amp;#39;s an &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">href&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;https://fr.wikipedia.org/wiki/Tour_Eiffel&amp;#34;&lt;/span>&amp;gt;external link&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-controller&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;link to the home page&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and a &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Welcome&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@visitorName&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-numtimes&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;5&amp;#34;&lt;/span>&amp;gt;link with parameters&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--vue-générée" >Exemple : vue générée
&lt;span>
&lt;a href="#exemple--vue-g%c3%a9n%c3%a9r%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/helloview.png" alt="Hello View">&lt;/p>
&lt;hr>
&lt;h3 id="envoi-de-données-aux-vues--viewdata" >Envoi de données aux vues : ViewData
&lt;span>
&lt;a href="#envoi-de-donn%c3%a9es-aux-vues--viewdata">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Approche &lt;em>faiblement typée&lt;/em> : on rassemble les paramètres de la vue dans un dictionnaire nommé &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/overview?view=aspnetcore-6.0#weakly-typed-data-viewdata-viewdata-attribute-and-viewbag">ViewData&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: /Hello/Welcome/ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Welcome(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> name, &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> numTimes = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&lt;span style="color:#0086d2">&amp;#34;Message&amp;#34;&lt;/span>] = &lt;span style="color:#0086d2">&amp;#34;Hello &amp;#34;&lt;/span> + name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&lt;span style="color:#0086d2">&amp;#34;NumTimes&amp;#34;&lt;/span>] = numTimes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple-dutilisation-de-viewdata" >Exemple d&amp;rsquo;utilisation de ViewData
&lt;span>
&lt;a href="#exemple-dutilisation-de-viewdata">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Views/Hello/Welcome.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span>] = &lt;span style="color:#0086d2">&amp;#34;Welcome&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> numTimes = (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>)ViewData[&lt;span style="color:#0086d2">&amp;#34;NumTimes&amp;#34;&lt;/span>]!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;h2&amp;gt;Welcome!&amp;lt;/h2&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;ul&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @for (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>; i &amp;lt; numTimes; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;li&amp;gt;@ViewData[&lt;span style="color:#0086d2">&amp;#34;Message&amp;#34;&lt;/span>]&amp;lt;/li&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/ul&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="résultat-obtenu" >Résultat obtenu
&lt;span>
&lt;a href="#r%c3%a9sultat-obtenu">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/welcomeview.png" alt="Hello View">&lt;/p>
&lt;hr>
&lt;h3 id="envoi-de-données-aux-vues--model" >Envoi de données aux vues : @model
&lt;span>
&lt;a href="#envoi-de-donn%c3%a9es-aux-vues--model">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approche &lt;em>fortement typée&lt;/em> : dans une vue, la directive &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0#model">@model&lt;/a> définit le type du modèle (= la source de données) passé à la vue.&lt;/li>
&lt;li>Dans cette vue :
&lt;ul>
&lt;li>l&amp;rsquo;instance associée est accessible via la propriété (typée) &lt;code>Model&lt;/code> ;&lt;/li>
&lt;li>&lt;code>@Html.DisplayNameFor&lt;/code> renvoie le nom d&amp;rsquo;une propriété du modèle (&lt;a href="https://stackoverflow.com/questions/61925486/html-displaynamefor-list-vs-ienumerable-in-razor">explication&lt;/a>).&lt;/li>
&lt;li>&lt;code>@Html.DisplayFor&lt;/code> renvoie la valeur d&amp;rsquo;une propriété du modèle.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--liste-des-films-contrôleur" >Exemple : liste des films (contrôleur)
&lt;span>
&lt;a href="#exemple--liste-des-films-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Controllers/MovieController.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">readonly&lt;/span> MvcMovieContext _context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> MovieController(MvcMovieContext context)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context = context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movie&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movies = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.OrderBy(m =&amp;gt; m.Title).ToListAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movies);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--liste-des-films-vue" >Exemple : liste des films (vue)
&lt;span>
&lt;a href="#exemple--liste-des-films-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Movie/Index.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model IEnumerable&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">MvcMovie.Models.Movie&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Movies&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Movies&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Create&amp;#34;&lt;/span>&amp;gt;Create New&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">table&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;table&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">thead&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">tr&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">tr&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">thead&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">tbody&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @foreach (var item in Model)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">tr&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(modelItem =&amp;gt; item.Title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(modelItem =&amp;gt; item.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(modelItem =&amp;gt; item.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Edit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@item.Id&amp;#34;&lt;/span>&amp;gt;Edit&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@item.Id&amp;#34;&lt;/span>&amp;gt;Details&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Delete&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@item.Id&amp;#34;&lt;/span>&amp;gt;Delete&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">tr&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">tbody&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">table&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--liste-des-films-résultat" >Exemple : liste des films (résultat)
&lt;span>
&lt;a href="#exemple--liste-des-films-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/movielist.png" alt="Hello View">&lt;/p>
&lt;hr>
&lt;h3 id="envoi-de-données-aux-vues--viewmodel" >Envoi de données aux vues : ViewModel
&lt;span>
&lt;a href="#envoi-de-donn%c3%a9es-aux-vues--viewmodel">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approche &lt;em>fortement typée&lt;/em> : on définit une classe spécifique pour porter les données de la vue.&lt;/li>
&lt;li>Utile quand les données nécessaires à la vue sont issues de différentes classes métier.&lt;/li>
&lt;li>Principe du patron &lt;a href="https://learn.microsoft.com/en-us/dotnet/architecture/maui/mvvm">MVVM&lt;/a> (&lt;em>Model-View-ViewModel&lt;/em>).&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/overview?view=aspnetcore-6.0#strongly-typed-data-viewmodel">Plus de détails&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--détails-sur-un-film-contrôleur" >Exemple : détails sur un film (contrôleur)
&lt;span>
&lt;a href="#exemple--d%c3%a9tails-sur-un-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à la route &lt;code>/Movie/Details/{Id}&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movies/Details/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Details(&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .FirstOrDefaultAsync(m =&amp;gt; m.Id == id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--détails-sur-un-film-vue" >Exemple : détails sur un film (vue)
&lt;span>
&lt;a href="#exemple--d%c3%a9tails-sur-un-film-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Movie/Details.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model MvcMovie.Models.Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Details&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;@Html.DisplayFor(model =&amp;gt; model.Title)&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">hr&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dl&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dl&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Edit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@Model.Id&amp;#34;&lt;/span>&amp;gt;Edit&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;Back to List&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--détails-sur-un-film-résultat" >Exemple : détails sur un film (résultat)
&lt;span>
&lt;a href="#exemple--d%c3%a9tails-sur-un-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviedetails.png" alt="Movie details">&lt;/p>
&lt;hr>
&lt;h3 id="envoi-de-données-depuis-une-vue" >Envoi de données depuis une vue
&lt;span>
&lt;a href="#envoi-de-donn%c3%a9es-depuis-une-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>S&amp;rsquo;effectue via un &lt;strong>formulaire&lt;/strong> dont la soumission déclenche l&amp;rsquo;envoi au serveur d&amp;rsquo;une requête HTTP POST.&lt;/li>
&lt;li>Les champs du formulaire sont implicitement associés aux paramètres de l&amp;rsquo;action du contrôleur qui reçoit la requête POST.&lt;/li>
&lt;li>Les &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-6.0#built-in-attributes">annotations du modèle&lt;/a> définissent des &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/validation?view=aspnetcore-6.0">règles de validation&lt;/a> automatiquement vérifiées côté client et utilisables côté serveur.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--classe-métier-annotée" >Exemple : classe métier annotée
&lt;span>
&lt;a href="#exemple--classe-m%c3%a9tier-annot%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Models/Movie.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> System.ComponentModel.DataAnnotations;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(100, MinimumLength = 3)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Title { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [Display(Name = &amp;#34;Release Date&amp;#34;), DataType(DataType.Date)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DateTime ReleaseDate { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(30)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Genre { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-dajout-dun-film-contrôleur" >Exemple : formulaire d&amp;rsquo;ajout d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--formulaire-dajout-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP GET vers la route &lt;code>/Movie/Create&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movie/Create&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Create()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-dajout-dun-film-vue" >Exemple : formulaire d&amp;rsquo;ajout d&amp;rsquo;un film (vue)
&lt;span>
&lt;a href="#exemple--formulaire-dajout-dun-film-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Movie/Create.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model MvcMovie.Models.Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Create&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Create a Movie&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">hr&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-md-4&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Create&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-summary&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ModelOnly&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Create&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;btn btn-primary&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;Back to List&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@section Scripts {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{await Html.RenderPartialAsync(&amp;#34;_ValidationScriptsPartial&amp;#34;);}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-dajout-dun-film-résultat" >Exemple : formulaire d&amp;rsquo;ajout d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--formulaire-dajout-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviecreate.png" alt="Movie add">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--ajout-dun-film-contrôleur" >Exemple : ajout d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--ajout-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP POST vers la route &lt;code>/Movie/Create&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// POST: Movie/Create&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// To protect from overposting attacks, enable the specific properties you want to bind to.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPost]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [ValidateAntiForgeryToken]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Create([Bind(&lt;span style="color:#0086d2">&amp;#34;Id,Title,ReleaseDate,Genre&amp;#34;&lt;/span>)] Movie movie)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Apply model validation rules&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (ModelState.IsValid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Add(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> RedirectToAction(nameof(Index));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// At this point, something failed: redisplay form&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--ajout-dun-film-résultat" >Exemple : ajout d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--ajout-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviecreateresult.png" alt="Movie add result">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--formulaire-de-mise-à-jour-dun-film-contrôleur" >Exemple : formulaire de mise à jour d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--formulaire-de-mise-%c3%a0-jour-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP GET vers la route &lt;code>/Movie/Edit/{Id}&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movies/Edit/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Edit(&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.FindAsync(id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-de-mise-à-jour-dun-film-vue" >Exemple : formulaire de mise à jour d&amp;rsquo;un film (vue)
&lt;span>
&lt;a href="#exemple--formulaire-de-mise-%c3%a0-jour-dun-film-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Movie/Edit.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model MvcMovie.Models.Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Edit&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Edit a Movie&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">hr&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-md-4&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Edit&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-summary&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ModelOnly&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Id&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Save&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;btn btn-primary&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;Back to List&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@section Scripts {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{await Html.RenderPartialAsync(&amp;#34;_ValidationScriptsPartial&amp;#34;);}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-de-mise-à-jour-dun-film-résultat" >Exemple : formulaire de mise à jour d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--formulaire-de-mise-%c3%a0-jour-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/movieedit.png" alt="Movie edit">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--mise-à-jour-dun-film-contrôleur" >Exemple : mise à jour d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--mise-%c3%a0-jour-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP POST vers la route &lt;code>/Movie/Edit&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// POST: Movies/Edit/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// To protect from overposting attacks, enable the specific properties you want to bind to.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPost]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [ValidateAntiForgeryToken]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Edit(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id, [Bind(&lt;span style="color:#0086d2">&amp;#34;Id,Title,ReleaseDate,Genre&amp;#34;&lt;/span>)] Movie movie)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id != movie.Id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (ModelState.IsValid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Update(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (DbUpdateConcurrencyException)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (!MovieExists(movie.Id))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> RedirectToAction(nameof(Index));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> MovieExists(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> _context.Movies.Any(e =&amp;gt; e.Id == id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--mise-à-jour-dun-film-résultat" >Exemple : mise à jour d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--mise-%c3%a0-jour-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/movieeditresult.png" alt="Movie edit result">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--avertissement-avant-suppression-dun-film-contrôleur" >Exemple : avertissement avant suppression d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--avertissement-avant-suppression-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à la route &lt;code>Movie/Delete/{Id}&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movies/Delete/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Delete(&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .FirstOrDefaultAsync(m =&amp;gt; m.Id == id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--avertissement-avant-suppression-dun-film-vue" >Exemple : avertissement avant suppression d&amp;rsquo;un film (vue)
&lt;span>
&lt;a href="#exemple--avertissement-avant-suppression-dun-film-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model MvcMovie.Models.Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Delete&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Delete a Movie&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h4&lt;/span>&amp;gt;Are you sure?&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">hr&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dl&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.Title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dl&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Delete&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Id&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Delete&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;btn btn-danger&amp;#34;&lt;/span> /&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;Back to List&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--avertissement-avant-suppression-dun-film-résultat" >Exemple : avertissement avant suppression d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--avertissement-avant-suppression-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviedelete.png" alt="Movie deletion">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--suppression-dun-film-contrôleur" >Exemple : suppression d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--suppression-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP POST vers la route &lt;code>Movie/Delete&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// POST: Movies/Delete/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPost, ActionName(&amp;#34;Delete&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [ValidateAntiForgeryToken]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; DeleteConfirmed(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.FindAsync(id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Movies.Remove(movie!);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> RedirectToAction(nameof(Index));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--suppression-dun-film-résultat" >Exemple : suppression d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--suppression-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviedeleteresult.png" alt="Movie deletion result">&lt;/p>
&lt;hr>
&lt;h2 id="to-be-continued" >To be continued
&lt;span>
&lt;a href="#to-be-continued">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>&lt;img src="images/late-work-oh-you-have-a-good-reason-meme.jpg" alt="Late">&lt;/p></description></item></channel></rss>