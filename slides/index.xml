<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Slides on Baptiste Pesquet</title><link>https://www.bpesquet.fr/slides/</link><description>Baptiste Pesquet (Slides)</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 09 Jun 2023 08:37:58 +0200</lastBuildDate><atom:link href="https://www.bpesquet.fr/slides/index.xml" rel="self" type="application/rss+xml"/><item><title>AI for Defence</title><link>https://www.bpesquet.fr/slides/ai-for-defence/</link><pubDate>Fri, 09 Jun 2023 08:37:58 +0200</pubDate><guid>https://www.bpesquet.fr/slides/ai-for-defence/</guid><description>&lt;h2 id="context" >Context
&lt;span>
&lt;a href="#context">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="impacts-of-ai-on-defence" >Impacts of AI on Defence
&lt;span>
&lt;a href="#impacts-of-ai-on-defence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Like with all highly technical fields, AI has a growing impact on Defence.&lt;/li>
&lt;li>Main areas:
&lt;ul>
&lt;li>Decision and planning support&lt;/li>
&lt;li>Collaborative combat&lt;/li>
&lt;li>Cybersecurity and digital influence&lt;/li>
&lt;li>Logistics and operational readiness&lt;/li>
&lt;li>Intelligence&lt;/li>
&lt;li>Robotics and autonomy&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="a-fastly-moving-ecosystem" >A fastly moving ecosystem
&lt;span>
&lt;a href="#a-fastly-moving-ecosystem">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>In all countries, traditional defence behemoths (Lockeed Martin, Thales Group, Leonardo&amp;hellip;) have embraced AI as a key tool for improving their systems.&lt;/li>
&lt;li>Many startups are entering the field with specialized offerings.&lt;/li>
&lt;li>Some new, state-promoted national sectors emerge (example: Israel for cybersecurity).&lt;/li>
&lt;li>Recent conflicts, most notably the Ukraine war, are catalysts for AI adoption.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="national-and-international-initiatives" >National and international initiatives
&lt;span>
&lt;a href="#national-and-international-initiatives">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>(US) &lt;a href="https://media.defense.gov/2019/Feb/12/2002088963/-1/-1/1/SUMMARY-OF-DOD-AI-STRATEGY.PDF">DOD Artificial Intelligence Strategy&lt;/a>&lt;/li>
&lt;li>(France) &lt;a href="https://www.defense.gouv.fr/sites/default/files/aid/Report%20of%20the%20AI%20Task%20Force%20September%202019.pdf">AI in support of Defence&lt;/a>&lt;/li>
&lt;li>(EU) &lt;a href="https://www.europarl.europa.eu/news/en/press-room/20210114IPR95627/guidelines-for-military-and-non-military-use-of-artificial-intelligence">Guidelines for military and non-military use of AI&lt;/a>&lt;/li>
&lt;li>(NATO) &lt;a href="https://www.nato.int/docu/review/articles/2021/10/25/an-artificial-intelligence-strategy-for-nato/index.html">An Artificial Intelligence Strategy&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="main-issue" >Main issue
&lt;span>
&lt;a href="#main-issue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>AI is used to assist humans in multiple ways.&lt;/li>
&lt;li>Role and task breakdown is the key question: what&amp;rsquo;s assigned to AI, what&amp;rsquo;s left for humans?&lt;/li>
&lt;li>This decision has huge ramifications:
&lt;ul>
&lt;li>Should AI decide to shoot a target autonomously?&lt;/li>
&lt;li>Who&amp;rsquo;s responsible for what?&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="use-cases" >Use cases
&lt;span>
&lt;a href="#use-cases">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="missile-pack-guidance" >Missile pack guidance
&lt;span>
&lt;a href="#missile-pack-guidance">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Several (5-20) missiles used simultaneously as a pack.&lt;/li>
&lt;li>AI is used to optimize their guidance and help the pilot.&lt;/li>
&lt;li>(PhD in progress in Bordeaux)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="pilot-assistance" >Pilot assistance
&lt;span>
&lt;a href="#pilot-assistance">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Single pilot planes are heavily studied for both civilian and military contexts (with sometimes an unchanged cockpit).&lt;/li>
&lt;li>AI is needed for assistance and decision making.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="object-recognition-in-combat-zones" >Object recognition in combat zones
&lt;span>
&lt;a href="#object-recognition-in-combat-zones">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://www.defense.gov/News/News-Stories/Article/Article/1254719/project-maven-to-deploy-computer-algorithms-to-war-zone-by-years-end/">Project Maven&lt;/a>: a US initiative aiming at categorizing and identifying surveillance footage by low altitude devices.&lt;/li>
&lt;li>Uses sophisticated computer vision algorithms and models.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="homeland-security" >Homeland security
&lt;span>
&lt;a href="#homeland-security">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Predictive analytics (identifying trends and patterns within a dataset to then predict the likelihood of, and when, that trend will occur again) can be used to correlate signs of preparation for unlawful activities.&lt;/li>
&lt;li>Such services make heavy use of Machine Learning and are offered by companies like &lt;a href="https://en.wikipedia.org/wiki/Palantir_Technologies">Palantir&lt;/a>.&lt;/li>
&lt;li>There are, of course, many associated ethical issues.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="prevention-of-cyberterrorism" >Prevention of cyberterrorism
&lt;span>
&lt;a href="#prevention-of-cyberterrorism">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Protecting defence networks by identifying and neutralizing threats (viruses, malware, cybreattacks&amp;hellip;).&lt;/li>
&lt;li>Detection of unusual patterns in network usage.&lt;/li>
&lt;li>Associated software leverages various supervised and unsupervised learning algorithms.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="autonomous-combat-units" >Autonomous combat units
&lt;span>
&lt;a href="#autonomous-combat-units">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&amp;ldquo;A tank is a car with tracks and a gun&amp;rdquo;.&lt;/li>
&lt;li>Drones and drone swarms.&lt;/li>
&lt;li>(Not there yet) battle robots.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="battlefield-of-the-future" >Battlefield of the future
&lt;span>
&lt;a href="#battlefield-of-the-future">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>A highly complex and dynamic system with multiple human and non-human units interacting in real time.&lt;/li>
&lt;li>Huge flow of information to process.&lt;/li>
&lt;li>AI is used to collect, process and synthesize data for easier and better decision making.&lt;/li>
&lt;li>Dual aspect: same principles can apply to many non-military fields.&lt;/li>
&lt;/ul></description></item><item><title>Entity Framework Core</title><link>https://www.bpesquet.fr/slides/efcore/</link><pubDate>Mon, 26 Sep 2022 15:12:20 +0200</pubDate><guid>https://www.bpesquet.fr/slides/efcore/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Des objets et des tables&lt;/li>
&lt;li>Présentation d&amp;rsquo;EF Core&lt;/li>
&lt;li>Mise en oeuvre d&amp;rsquo;EF Core&lt;/li>
&lt;li>Mapping d&amp;rsquo;un modèle métier&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="des-objets-et-des-tables" >Des objets et des tables
&lt;span>
&lt;a href="#des-objets-et-des-tables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="les-données-persistantes" >Les données persistantes
&lt;span>
&lt;a href="#les-donn%c3%a9es-persistantes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Ne disparaissent pas entre deux utilisations d&amp;rsquo;une application.&lt;/li>
&lt;li>Contraire : données &lt;em>volatiles&lt;/em>.&lt;/li>
&lt;li>Indispensable pour une très grande majorité des applications (données métier, configuration, etc).&lt;/li>
&lt;li>Leur stockage nécessite :
&lt;ul>
&lt;li>un support dédié, appelé parfois mémoire de masse (disque dur, SSD, mémoire Flash, etc) ;&lt;/li>
&lt;li>un format adapté.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="les-sgbdr-et-leurs-avantages" >Les SGBDR et leurs avantages
&lt;span>
&lt;a href="#les-sgbdr-et-leurs-avantages">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Standard actuel pour la gestion de données persistantes.&lt;/li>
&lt;li>Technologie connue depuis les années 1970.&lt;/li>
&lt;li>Fiabilité.&lt;/li>
&lt;li>Capacité à gérer de forts volumes de données.&lt;/li>
&lt;li>Sécurité (authentification, réplication, etc).&lt;/li>
&lt;li>Langage d’interrogation (SQL) standard.&lt;/li>
&lt;li>Offre logicielle riche : de ORACLE à SQLite en passant par PostgreSQL, MySQL/MariaDB ou SQL Server.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="le-modèle-relationnel" >Le modèle relationnel
&lt;span>
&lt;a href="#le-mod%c3%a8le-relationnel">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Unité de représentation : table.&lt;/li>
&lt;li>Caractéristiques : colonnes.&lt;/li>
&lt;li>Entité : tuple (ligne).&lt;/li>
&lt;li>Types de données : simples (nombres, chaîne, date, etc).&lt;/li>
&lt;li>Identifiant : explicite (clé primaire).&lt;/li>
&lt;li>Relations entre éléments : jointures SQL.&lt;/li>
&lt;li>Concepts spécifiques : déclencheurs, procédures stockées&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="le-modèle-objet" >Le modèle objet
&lt;span>
&lt;a href="#le-mod%c3%a8le-objet">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Unité de représentation : classe.&lt;/li>
&lt;li>Caractéristiques : propriétés et méthodes.&lt;/li>
&lt;li>Entité : objet.&lt;/li>
&lt;li>Types de données : simples ou complexes.&lt;/li>
&lt;li>Identifiant : implicite (référence mémoire).&lt;/li>
&lt;li>Relations entre éléments : navigation des associations.&lt;/li>
&lt;li>Concepts spécifiques : encapsulation, héritage, interfaces&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="objectrelational-mapping-orm" >Object/Relational Mapping (O/RM)
&lt;span>
&lt;a href="#objectrelational-mapping-orm">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Lien entre une base de données et les objets manipulés par l’application.&lt;/li>
&lt;li>Deux modèles très éloignés (&amp;quot;&lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_impedance_mismatch">Impedance mismatch&lt;/a>&amp;quot;).&lt;/li>
&lt;li>Pas de solution idéale.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="orm-is-the-vietnam-of-computer-sciencehttpsblogcodinghorrorcomobject-relational-mapping-is-the-vietnam-of-computer-science" >&lt;a href="https://blog.codinghorror.com/object-relational-mapping-is-the-vietnam-of-computer-science/">&amp;ldquo;O/RM is the Vietnam of Computer Science&amp;rdquo;&lt;/a>
&lt;span>
&lt;a href="#orm-is-the-vietnam-of-computer-sciencehttpsblogcodinghorrorcomobject-relational-mapping-is-the-vietnam-of-computer-science">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/orm_vietnam.png" alt="Welcome to the jungle!">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="solutions-possibles-pour-lorm" >Solutions possibles pour l&amp;rsquo;O/RM
&lt;span>
&lt;a href="#solutions-possibles-pour-lorm">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approches radicales : suppression du SGBDR (utilisation d&amp;rsquo;une autre technologie de stockage) ou des objets (programmation procédurale ou fonctionnelle).&lt;/li>
&lt;li>O/RM manuel : gestion de la (dé)connexion, requêtage avec SQL puis transformation des résultats en objets, etc doivent être codées.&lt;/li>
&lt;li>O/RM automatisé : utilisation d&amp;rsquo;un outil dédié pour gérer les problématiques précédentes. Le requêtage SQL est effectué par l&amp;rsquo;outil.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="orm-automatisé-un-bon-choix-" >O/RM automatisé, un bon choix ?
&lt;span>
&lt;a href="#orm-automatis%c3%a9-un-bon-choix-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Avantages :
&lt;ul>
&lt;li>Automatisation de la gestion du &lt;em>mapping&lt;/em>.&lt;/li>
&lt;li>Diminution du volume de code.&lt;/li>
&lt;li>Mise en œuvre de bonnes pratiques.&lt;/li>
&lt;li>Performances (le plus souvent).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Inconvénients :
&lt;ul>
&lt;li>Nécessité de maitriser un outil dédié.&lt;/li>
&lt;li>Certaines limitations liées à l’outil.&lt;/li>
&lt;li>Aspect &amp;ldquo;boîte noire&amp;rdquo;.&lt;/li>
&lt;li>Performances (dans certains cas).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="présentation-def-core" >Présentation d&amp;rsquo;EF Core
&lt;span>
&lt;a href="#pr%c3%a9sentation-def-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="entity-framework-core" >Entity Framework Core
&lt;span>
&lt;a href="#entity-framework-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Outil d&amp;rsquo;O/RM &lt;a href="https://github.com/dotnet/efcore">open source&lt;/a> maintenu par Microsoft.&lt;/li>
&lt;li>Supporte de nombreux SGDBR : SQL Server, SQLite, MySQL/MariaDB, PostgreSQL, etc.&lt;/li>
&lt;li>Standard pour l&amp;rsquo;accès aux données persistantes dans l&amp;rsquo;environnement ASP.NET Core.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="sqlite" >SQLite
&lt;span>
&lt;a href="#sqlite">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>SGBDR minimaliste mais suffisamment fiable, complet et performant pour la plupart des usages standards.&lt;/li>
&lt;li>Toute la base de données tient dans un seul fichier de quelques dizaines/centaines de Ko.&lt;/li>
&lt;li>&lt;a href="https://sqlite.org/mostdeployed.html">&amp;ldquo;Le SGBD le plus utilisé dans le monde&amp;rdquo;&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://sqlite.org">&lt;img src="images/sqlite370_banner.gif" alt="Logo SQLite">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="installation-def-core-pour-sqlite" >Installation d&amp;rsquo;EF Core pour SQLite
&lt;span>
&lt;a href="#installation-def-core-pour-sqlite">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Installation globale de l&amp;rsquo;outil EF Core CLI :&lt;/p>
&lt;p>&lt;code>&amp;gt; dotnet tool install --global dotnet-ef&lt;/code>&lt;/p>
&lt;p>Installation des packages nécessaires dans le répertoire du projet :&lt;/p>
&lt;p>&lt;code>&amp;gt; dotnet add package Microsoft.EntityFrameworkCore.Design&lt;/code>&lt;/p>
&lt;p>&lt;code>&amp;gt; dotnet add package Microsoft.EntityFrameworkCore.Sqlite&lt;/code>&lt;/p>
&lt;hr>
&lt;h3 id="support-de-sqlite-par-ef-core" >Support de SQLite par EF Core
&lt;span>
&lt;a href="#support-de-sqlite-par-ef-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Des &lt;a href="https://docs.microsoft.com/en-us/ef/core/providers/?tabs=dotnet-core-cli">fournisseurs de données&lt;/a> permettent l&amp;rsquo;utilisation de EF Core avec un grand nombre de sources de données, dont SQLite.&lt;/li>
&lt;li>Son fournisseur possède cependant certaines petites &lt;a href="https://docs.microsoft.com/en-us/ef/core/providers/sqlite/limitations">limitations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="principe-de-fonctionnement-def-core" >Principe de fonctionnement d&amp;rsquo;EF Core
&lt;span>
&lt;a href="#principe-de-fonctionnement-def-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Modèle&lt;/strong> : un ensemble de classes POCO, parfois appelées &lt;em>classes métier&lt;/em>, qui modélisent les entités manipulées par l&amp;rsquo;application.&lt;/li>
&lt;li>&lt;strong>Contexte BD&lt;/strong> : une classe héritant de &lt;code>DbContext&lt;/code> qui représente une session d&amp;rsquo;échanges (lecture/écriture de données) avec une BD. Elle spécifie les classes du modèle à synchroniser avec la BD.&lt;/li>
&lt;li>&lt;strong>BD&lt;/strong> : la base de données dans laquelle les instances du modèle sont lues/écrites.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="migrations" >Migrations
&lt;span>
&lt;a href="#migrations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approche &lt;em>&lt;strong>code first&lt;/strong>&lt;/em> : le modèle objet constitue la modélisation de référence. La base de données est automatiquement synchronisée avec lui.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/ef/core/managing-schemas/migrations/?tabs=dotnet-core-cli">Migrations&lt;/a> : modifications incrémentales du schéma relationnel reflétant les évolutions du modèle.&lt;/li>
&lt;li>Permettent à la BD d&amp;rsquo;être synchronisée avec les évolutions du modèle, sans perte de données.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="commandes-liées-aux-migrations" >Commandes liées aux migrations
&lt;span>
&lt;a href="#commandes-li%c3%a9es-aux-migrations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet ef migrations add {MigrationName}&lt;/code>&lt;/p>
&lt;p>Crée une nouvelle migration dans le répertoire &lt;strong>Migrations/&lt;/strong> du projet. Elle contient les mises à jour à réaliser au niveau du schéma relationnel pour le synchroniser avec le modèle objet.&lt;/p>
&lt;p>&lt;code>&amp;gt; dotnet ef database update&lt;/code>&lt;/p>
&lt;p>Synchronise la base de données configurée par le contexte BD avec la migration la plus récente.&lt;/p>
&lt;hr>
&lt;h3 id="interactions-avec-la-bd" >Interactions avec la BD
&lt;span>
&lt;a href="#interactions-avec-la-bd">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;instanciation d&amp;rsquo;un contexte BD permet de débuter une session de travail avec la base de données.&lt;/li>
&lt;li>Sa méthode &lt;code>SaveChanges()&lt;/code> implante dans la BD tous les changements ayant eu lieu depuis l&amp;rsquo;ouverture de la session.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> {App}Context())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ... (Opérations on model classes)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Synchronize all changes with database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="mise-en-oeuvre-def-core" >Mise en oeuvre d&amp;rsquo;EF Core
&lt;span>
&lt;a href="#mise-en-oeuvre-def-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="exemple-de-modèle-métier" >Exemple de modèle métier
&lt;span>
&lt;a href="#exemple-de-mod%c3%a8le-m%c3%a9tier">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/efcore_blog_uml.png" alt="Exemple de modèle EF Core">&lt;/p>
&lt;hr>
&lt;h3 id="création-de-lapplication" >Création de l&amp;rsquo;application
&lt;span>
&lt;a href="#cr%c3%a9ation-de-lapplication">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet new console -o EFBlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd EFBlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet new gitignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet add package Microsoft.EntityFrameworkCore.Design
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet add package Microsoft.EntityFrameworkCore.Sqlite
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csproj" data-lang="csproj">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;Project&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Sdk=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;Microsoft.NET.Sdk&amp;#34;&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;OutputType&amp;gt;&lt;/span>Exe&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/OutputType&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;TargetFramework&amp;gt;&lt;/span>net6.0&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/TargetFramework&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;ImplicitUsings&amp;gt;&lt;/span>enable&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/ImplicitUsings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;Nullable&amp;gt;&lt;/span>enable&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/Nullable&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;ItemGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PackageReference&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Include=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;Microsoft.EntityFrameworkCore.Design&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Version=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;6.0.9&amp;#34;&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;IncludeAssets&amp;gt;&lt;/span>runtime; build; native; contentfiles; analyzers; buildtransitive&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/IncludeAssets&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PrivateAssets&amp;gt;&lt;/span>all&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/PrivateAssets&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/PackageReference&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PackageReference&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Include=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;Microsoft.EntityFrameworkCore.Sqlite&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Version=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;6.0.9&amp;#34;&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/ItemGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/Project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="implémentation-du-modèle" >Implémentation du modèle
&lt;span>
&lt;a href="#impl%c3%a9mentation-du-mod%c3%a8le">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Chaque classe est codée dans son propre fichier &lt;code>.cs&lt;/code>, dans le sous-répertoire &lt;code>Models/&lt;/code> du projet.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Url { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> List&amp;lt;Post&amp;gt; Posts { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> List&amp;lt;Post&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Title { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Content { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> BlogId { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> Blog Blog { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="lopérateur-de-null-suppression" >L&amp;rsquo;opérateur de null-suppression
&lt;span>
&lt;a href="#lop%c3%a9rateur-de-null-suppression">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Appelée aussi &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/null-forgiving">null-forgiving operator&lt;/a>.&lt;/li>
&lt;li>Précise au compilateur qu&amp;rsquo;une expression de type référence ne vaudra jamais &lt;code>null&lt;/code> (donc qu&amp;rsquo;elle pourra être déréférencée sans risque).&lt;/li>
&lt;li>&lt;code>= null!&lt;/code> permet d&amp;rsquo;&lt;a href="https://learn.microsoft.com/en-us/ef/core/miscellaneous/nullable-reference-types">initialiser les propriétés C# gérées par EF Core&lt;/a> dans le contexte &lt;em>null-aware&lt;/em> de .NET 6+.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://youtu.be/g25G1M4EXrQ?t=93">&lt;img src="images/we-choose.png" alt="JKK &amp;lsquo;62 speech">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="création-du-contexte-bd" >Création du contexte BD
&lt;span>
&lt;a href="#cr%c3%a9ation-du-contexte-bd">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Classe créée dans le sous-répertoire &lt;code>Data/&lt;/code> du projet.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.Extensions.Logging;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> BloggingContext : DbContext
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;Blog&amp;gt; Blogs { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;Post&amp;gt; Posts { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DbPath { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> BloggingContext()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Path to SQLite database file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DbPath = &lt;span style="color:#0086d2">&amp;#34;EFBlog.db&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The following configures EF to create a SQLite database file locally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">protected&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">override&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> OnConfiguring(DbContextOptionsBuilder options)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use SQLite as database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.UseSqlite(&lt;span style="color:#0086d2">$&amp;#34;Data Source={DbPath}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Optional: log SQL queries to console&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.LogTo(Console.WriteLine, &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span>[] { DbLoggerCategory.Database.Command.Name }, LogLevel.Information);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="initialisation-de-la-base-de-données" >Initialisation de la base de données
&lt;span>
&lt;a href="#initialisation-de-la-base-de-donn%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>(&lt;code>dotnet-ef&lt;/code> doit avoir été installé globalement)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet ef migrations add InitialCreate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet ef database update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="extrait-de-la-migration-créée" >Extrait de la migration créée
&lt;span>
&lt;a href="#extrait-de-la-migration-cr%c3%a9%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>migrationBuilder.CreateTable(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#0086d2">&amp;#34;Blogs&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> columns: table =&amp;gt; &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Id = table.Column&amp;lt;&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>&amp;gt;(type: &lt;span style="color:#0086d2">&amp;#34;INTEGER&amp;#34;&lt;/span>, nullable: &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Annotation(&lt;span style="color:#0086d2">&amp;#34;Sqlite:Autoincrement&amp;#34;&lt;/span>, &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Url = table.Column&amp;lt;&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>&amp;gt;(type: &lt;span style="color:#0086d2">&amp;#34;TEXT&amp;#34;&lt;/span>, nullable: &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> constraints: table =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> table.PrimaryKey(&lt;span style="color:#0086d2">&amp;#34;PK_Blogs&amp;#34;&lt;/span>, x =&amp;gt; x.Id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="base-de-données-créée" >Base de données créée
&lt;span>
&lt;a href="#base-de-donn%c3%a9es-cr%c3%a9%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Capture d&amp;rsquo;écran de &lt;a href="https://sqlitebrowser.org/">DB Browser pour SQLite&lt;/a> :&lt;/p>
&lt;p>&lt;img src="images/efcore_blog_schema.png" alt="Schéma BD généré par EF Core">&lt;/p>
&lt;p>La colonne &lt;code>BlogId&lt;/code> est une clé étrangère vers la colonne &lt;code>Id&lt;/code> de la table &lt;code>Blogs&lt;/code>.&lt;/p>
&lt;hr>
&lt;h3 id="structure-de-lapplication" >Structure de l&amp;rsquo;application
&lt;span>
&lt;a href="#structure-de-lapplication">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-glog/EFBlog">https://github.com/ensc-glog/EFBlog&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/efcore-efblog.png" alt="Structure de l&amp;rsquo;application d&amp;rsquo;exemple">&lt;/p>
&lt;hr>
&lt;h3 id="opérations-crud" >Opérations CRUD
&lt;span>
&lt;a href="#op%c3%a9rations-crud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;--- Inserting a new blog ---&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.Add(&lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Blog { Url = &lt;span style="color:#0086d2">&amp;#34;http://blogs.msdn.com/adonet&amp;#34;&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;--- Retrieve blog with lowest id ---&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blog = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .OrderBy(b =&amp;gt; b.Id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .First();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;--- Updating the blog and adding a post ---&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> blog.Url = &lt;span style="color:#0086d2">&amp;#34;https://devblogs.microsoft.com/dotnet&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> blog.Posts.Add(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Post { Title = &lt;span style="color:#0086d2">&amp;#34;Hello World&amp;#34;&lt;/span>, Content = &lt;span style="color:#0086d2">&amp;#34;I wrote an app using EF Core!&amp;#34;&lt;/span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;--- Deleting the blog ---&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.Remove(blog);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="requêtage-avec-linq" >Requêtage avec LINQ
&lt;span>
&lt;a href="#requ%c3%aatage-avec-linq">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/">Language Integrated Query (LINQ)&lt;/a> est le langage standard pour le requêtage en C#, quelle que soit la source de données (SGBDR, XML, service web, etc).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Retrieve a list of blogs with a rating greater than 3,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ordered by URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Where(b =&amp;gt; b.Rating &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .OrderBy(b =&amp;gt; b.Url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemples-dutilisation-de-linq" >Exemples d&amp;rsquo;utilisation de LINQ
&lt;span>
&lt;a href="#exemples-dutilisation-de-linq">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get all blogs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = context.Blogs.ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get the blog with id 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blog = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Single(b =&amp;gt; b.Id == &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get all blogs containing &amp;#34;dotnet&amp;#34; in their URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Where(b =&amp;gt; b.Url.Contains(&lt;span style="color:#0086d2">&amp;#34;dotnet&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Plus de détails :&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/">Querying data&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/basic-linq-query-operations">Basic LINQ Query Operations&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="syntaxe-alternative-pour-linq" >Syntaxe alternative pour LINQ
&lt;span>
&lt;a href="#syntaxe-alternative-pour-linq">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Pour plus de souplesse, il est possible de manipuler des requêtes LINQ en tant que variables.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get all blogs containing &amp;#34;dotnet&amp;#34; in their URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> query = &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> b &lt;span style="color:#fb660a;font-weight:bold">in&lt;/span> context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">select&lt;/span> b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> query = query.Where(b =&amp;gt; b.Url.Contains(&lt;span style="color:#0086d2">&amp;#34;dotnet&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = query.ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="mapping-dun-modèle-métier" >Mapping d&amp;rsquo;un modèle métier
&lt;span>
&lt;a href="#mapping-dun-mod%c3%a8le-m%c3%a9tier">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="configuration-du-modèle" >Configuration du modèle
&lt;span>
&lt;a href="#configuration-du-mod%c3%a8le">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Effectuée via des &lt;a href="https://docs.microsoft.com/en-us/ef/core/modeling/entity-properties?tabs=data-annotations%2Cwithout-nrt">annotations&lt;/a> dans les classes du modèle.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(200, MinimumLength = 7), Required]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Url { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [Display(Name = &amp;#34;Average Rating&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [Column(TypeName = &amp;#34;decimal(5, 2)&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [DisplayFormat(NullDisplayText = &amp;#34;No rating&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">decimal?&lt;/span> Rating { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="propriétés-obligatoires-et-optionnelles" >Propriétés obligatoires et optionnelles
&lt;span>
&lt;a href="#propri%c3%a9t%c3%a9s-obligatoires-et-optionnelles">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une propriété est considérée comme optionnelle si elle peut contenir &lt;code>null&lt;/code>. La colonne BD associée accepte les valeurs nulles.&lt;/li>
&lt;li>L&amp;rsquo;attribut &lt;code>[Required]&lt;/code> permet de rendre obligatoire une propriété ayant un type référence (exemple : &lt;code>string&lt;/code>).&lt;/li>
&lt;li>L&amp;rsquo;utilisation d&amp;rsquo;un &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-value-types">type valeur nullable&lt;/a> (exemples : &lt;code>int?&lt;/code>, &lt;code>bool?&lt;/code>) rend la propriété optionnelle.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="clés-primaires" >Clés primaires
&lt;span>
&lt;a href="#cl%c3%a9s-primaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une propriété nommée &lt;code>Id&lt;/code> ou &lt;code>{NomDeLaClasse}Id&lt;/code> est considérée comme clé primaire.&lt;/li>
&lt;li>Par défaut, une stratégie d&amp;rsquo;&lt;a href="https://docs.microsoft.com/en-us/ef/core/modeling/generated-properties?tabs=data-annotations">auto-génération des valeurs&lt;/a> est utilisée.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/ef/core/modeling/keys?tabs=data-annotations">Plus de détails&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="mapping-des-associations" >Mapping des associations
&lt;span>
&lt;a href="#mapping-des-associations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une propriété utilisant un type autre que scalaire est dite &lt;strong>propriété de navigation&lt;/strong>.&lt;/li>
&lt;li>La détection d&amp;rsquo;une propriété de navigation entraine la création d&amp;rsquo;une &lt;strong>relation&lt;/strong> entre les deux classes impliquées.&lt;/li>
&lt;li>Cette relation se traduit dans la base de données par la création d&amp;rsquo;une &lt;strong>clé étrangère&lt;/strong> dans la table associée à la classe dépendante (fille) de la relation.&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/ef/core/modeling/relationships">Plus de détails&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="association-un-à-plusieurs" >Association un-à-plusieurs
&lt;span>
&lt;a href="#association-un-%c3%a0-plusieurs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Propriété de navigation de type collection dans la classe principale (mère).&lt;/li>
&lt;li>Propriété de navigation et propriété de clé étrangère dans la classe dépendante (fille).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> List&amp;lt;Post&amp;gt; Posts { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> List&amp;lt;Post&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> BlogId { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// FK&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> Blog Blog { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Navigation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="association-un-à-un" >Association un-à-un
&lt;span>
&lt;a href="#association-un-%c3%a0-un">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> BlogImage BlogImage { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> BlogImage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">byte&lt;/span>[] Image { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Caption { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> BlogId { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// FK&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> Blog Blog { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="association-plusieurs-à-plusieurs" >Association plusieurs-à-plusieurs
&lt;span>
&lt;a href="#association-plusieurs-%c3%a0-plusieurs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Entraîne la création d&amp;rsquo;une table de jointure contenant deux clés étrangères dans la base de données.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Post
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> ICollection&amp;lt;Tag&amp;gt; Tags { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Tag
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> ICollection&amp;lt;Post&amp;gt; Posts { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="chargement-des-associations" >Chargement des Associations
&lt;span>
&lt;a href="#chargement-des-associations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les méthodes &lt;code>.Include()&lt;/code> et &lt;code>.ThenInclude()&lt;/code> permettent de spécifier les données associées à inclure dans les résultats d&amp;rsquo;une requête.&lt;/li>
&lt;li>Ce mécanisme est appelé &lt;a href="https://docs.microsoft.com/en-us/ef/core/querying/related-data/eager">chargement hâtif&lt;/a> (&lt;em>eager loading&lt;/em>).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> BloggingContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Load posts for each blog&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Uncomment the .ThenInclude line to load post author&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> blogs = context.Blogs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .Include(blog =&amp;gt; blog.Posts)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// .ThenInclude(post =&amp;gt; post.Author)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .ToList();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mapping-de-lhéritage" >Mapping de l&amp;rsquo;héritage
&lt;span>
&lt;a href="#mapping-de-lh%c3%a9ritage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Problème épineux : les SGBDR ne supportent pas le concept d’héritage.&lt;/li>
&lt;li>Plusieurs stratégies possibles, avec chacune des avantages et des inconvénients :
&lt;ul>
&lt;li>une table pour toute la hiérarchie (TPH) ;&lt;/li>
&lt;li>une table par classe concrète (TPC) ;&lt;/li>
&lt;li>une table par type (TPT).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Le choix dépend du contexte. Donnée-clé : nombre de propriétés communes.&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/ef/core/modeling/inheritance">Plus de détails&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="la-stratégie-tph-avec-ef-core" >La stratégie TPH avec EF Core
&lt;span>
&lt;a href="#la-strat%c3%a9gie-tph-avec-ef-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Solution par défaut (souvent la plus simple).&lt;/li>
&lt;li>Ajoute à l&amp;rsquo;unique table qui mappe la hiérarchie :
&lt;ul>
&lt;li>une colonne par propriété de chacune des classes de la hiérarchie ;&lt;/li>
&lt;li>une colonne &lt;code>Discriminator&lt;/code> qui détermine le type concret de l&amp;rsquo;objet stocké en BD.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-mapping-de-lhéritage" >Exemple de mapping de l&amp;rsquo;héritage
&lt;span>
&lt;a href="#exemple-de-mapping-de-lh%c3%a9ritage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">internal&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> BloggingContext : DbContext
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;Blog&amp;gt; Blogs { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;RssBlog&amp;gt; RssBlogs { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> BlogId { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> RssBlog : Blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> RssUrl { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="schéma-bd-après-migration" >Schéma BD après migration
&lt;span>
&lt;a href="#sch%c3%a9ma-bd-apr%c3%a8s-migration">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet ef migrations add RssBlog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet ef database update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="images/efcore_tph_tables.png" alt="Stratégie TPH - Tables">&lt;/p>
&lt;p>&lt;img src="images/inheritance-tph-data.png" alt="Stratégie YPH - Enregistrements">&lt;/p></description></item><item><title>.NET et C#</title><link>https://www.bpesquet.fr/slides/dotnet-csharp/</link><pubDate>Tue, 20 Sep 2022 10:27:11 +0200</pubDate><guid>https://www.bpesquet.fr/slides/dotnet-csharp/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Introduction à .NET&lt;/li>
&lt;li>La notion de programme&lt;/li>
&lt;li>Premiers pas avec C#&lt;/li>
&lt;li>Guide de codage C#&lt;/li>
&lt;li>Variables, valeurs et types&lt;/li>
&lt;li>Expressions&lt;/li>
&lt;li>Conditions et alternatives&lt;/li>
&lt;li>Structures répétitives&lt;/li>
&lt;li>Sous-programmes&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="introduction-à-net" >Introduction à .NET
&lt;span>
&lt;a href="#introduction-%c3%a0-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="aux-origines-de-net" >Aux origines de .NET
&lt;span>
&lt;a href="#aux-origines-de-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Plate-forme de développement d&amp;rsquo;applications créée par Microsoft en 2002.&lt;/li>
&lt;li>Réponse à la domination de Java (premier langage multi-plateformes).&lt;/li>
&lt;li>Inclut plusieurs langages de programmation : C#, VB.NET, F#, PowerShell&amp;hellip;&lt;/li>
&lt;li>A l&amp;rsquo;origine :
&lt;ul>
&lt;li>Uniquement disponible sous Windows.&lt;/li>
&lt;li>Licence propriétaire.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/.NET_Framework">&lt;img src="images/dotnet_stack.png" alt="Pile .NET">&lt;/a>&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="architecture-technique-de-net" >Architecture technique de .NET
&lt;span>
&lt;a href="#architecture-technique-de-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une application .NET s&amp;rsquo;exécute dans un environnement contrôlé appelé &lt;a href="https://github.com/dotnet/runtime/blob/main/docs/design/coreclr/botr/intro-to-clr.md">CLR&lt;/a> (&lt;em>Common Language Runtime&lt;/em>).&lt;/li>
&lt;li>La compilation du code source produit un résultat indépendant du système d&amp;rsquo;exploitation, conformément à un standard nommé &lt;strong>CIL&lt;/strong> (&lt;em>Common Intermediate Language&lt;/em>).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Common_Language_Infrastructure">&lt;img src="images/dotnet_cli_clr.png" alt="CLI et CLR">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="net-framework-et-net-core" >.NET Framework et .NET Core
&lt;span>
&lt;a href="#net-framework-et-net-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://www.mono-project.com/docs/about-mono/history/">2004&lt;/a> : le projet &lt;strong>Mono&lt;/strong>, indépendant de Microsoft, débute le portage de .NET vers Linux.&lt;/li>
&lt;li>&lt;a href="https://devblogs.microsoft.com/dotnet/net-core-is-open-source/">2014&lt;/a> : Microsoft publie &lt;strong>.NET Core&lt;/strong>, la première version open source et multi-plateformes de .NET. La version WIndows-only de .NET est renommée &lt;strong>.NET Framework&lt;/strong>.&lt;/li>
&lt;li>&lt;a href="https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/">2019&lt;/a> : la nouvelle version de .NET Core est renommée &lt;strong>.NET&lt;/strong>, et .NET Framework passe en mode maintenance.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="net-5--multiplateforme-par-défaut" >.NET 5+ : multiplateforme par défaut
&lt;span>
&lt;a href="#net-5--multiplateforme-par-d%c3%a9faut">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La version actuelle est .NET 6 (2021).&lt;/p>
&lt;p>&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-6/">&lt;img src="images/dotnet-unified-platform.png" alt=".NET 5">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="la-ligne-de-commande-net" >La ligne de commande .NET
&lt;span>
&lt;a href="#la-ligne-de-commande-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>.NET CLI&lt;/strong> (&lt;em>Command Line Interface&lt;/em>) permet d&amp;rsquo;interagir avec .NET depuis un terminal.&lt;/li>
&lt;li>Nécessite que .NET soit installé sur la machine.&lt;/li>
&lt;li>Syntaxe : &lt;code>dotnet &amp;lt;commande&amp;gt; &amp;lt;options&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="création-dune-application" >Création d&amp;rsquo;une application
&lt;span>
&lt;a href="#cr%c3%a9ation-dune-application">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet new &amp;lt;template&amp;gt; -o &amp;lt;output directory&amp;gt;&lt;/code>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Type d&amp;rsquo;application&lt;/th>
&lt;th>Template&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Console&lt;/td>
&lt;td>&lt;code>console&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bibliothèque de classes&lt;/td>
&lt;td>&lt;code>classlib&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (vide)&lt;/td>
&lt;td>&lt;code>web&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (API)&lt;/td>
&lt;td>&lt;code>webapi&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASP.NET (MVC)&lt;/td>
&lt;td>&lt;code>mvc&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="création-dun-fichier-gitignore" >Création d&amp;rsquo;un fichier .gitignore
&lt;span>
&lt;a href="#cr%c3%a9ation-dun-fichier-gitignore">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet new gitignore&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Le fichier &lt;code>.gitignore&lt;/code> permet d&amp;rsquo;exclure certains fichiers/dossiers de la gestion des versions avec &lt;a href="https://git-scm.com/">Git&lt;/a>. Il le plus souvent s&amp;rsquo;agit de fichiers locaux (exemple : configuration de l&amp;rsquo;environnement de développement) ou de fichiers recréés systématiquement par le processus de génération de l&amp;rsquo;application.&lt;/li>
&lt;li>Cette commande crée un fichier &lt;code>.gitignore&lt;/code> adapté aux projets .NET.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="gestion-des-packages" >Gestion des packages
&lt;span>
&lt;a href="#gestion-des-packages">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet add package &amp;lt;name&amp;gt;&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Utilise &lt;a href="https://www.nuget.org/">NuGet&lt;/a> pour télécharger un package et l&amp;rsquo;ajouter au projet.&lt;/li>
&lt;li>Vérifie la compatibilité du package à installer avec le projet.&lt;/li>
&lt;/ul>
&lt;p>&lt;code>&amp;gt; dotnet list package&lt;/code>&lt;/p>
&lt;ul>
&lt;li>Liste les packages installés pour un projet.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="lancement-dune-application" >Lancement d&amp;rsquo;une application
&lt;span>
&lt;a href="#lancement-dune-application">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet run&lt;/code>&lt;/p>
&lt;p>Si nécessaire, effectue la restauration des dépendances du projet (équivalent de &lt;code>dotnet restore&lt;/code>).&lt;/p>
&lt;hr>
&lt;h3 id="surveillance-des-changements" >Surveillance des changements
&lt;span>
&lt;a href="#surveillance-des-changements">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>&amp;gt; dotnet watch run&lt;/code>&lt;/p>
&lt;p>Pour une application web, jnjecte un script qui met à jour le contenu affiché par le navigateur lorsque des fichiers surveillés sont modifiés.&lt;/p>
&lt;hr>
&lt;h3 id="autres-possibilités" >Autres possibilités
&lt;span>
&lt;a href="#autres-possibilit%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Nettoyage, test, publication, gestion des packages installés, etc.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/">Plus d&amp;rsquo;informations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="la-notion-de-programme" >La notion de programme
&lt;span>
&lt;a href="#la-notion-de-programme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="quest-ce-quun-programme-" >Qu&amp;rsquo;est-ce qu&amp;rsquo;un programme ?
&lt;span>
&lt;a href="#quest-ce-quun-programme-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Programme&lt;/strong> (application, logiciel) : implémentation (réalisation) d&amp;rsquo;un algorithme sous la forme d&amp;rsquo;un ensemble de commandes textuelles appelées &lt;strong>instructions&lt;/strong>.&lt;/li>
&lt;li>Ces instructions sont spécifiques à un langage de programmation.&lt;/li>
&lt;li>Elles sont ensuite traduites dans un langage compris par (le processeur de) la machine qui exécute le programme.&lt;/li>
&lt;li>L&amp;rsquo;ensemble des instructions d&amp;rsquo;un programme est appelé son &lt;strong>code source&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="au-plus-près-de-la-machine--lassembleur" >Au plus près de la machine : l&amp;rsquo;assembleur
&lt;span>
&lt;a href="#au-plus-pr%c3%a8s-de-la-machine--lassembleur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Jeu d&amp;rsquo;instructions élémentaires comprises par une famille de processeurs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-asm" data-lang="asm">&lt;span style="display:flex;">&lt;span>str:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">.ascii&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Bonjour\n&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">.global&lt;/span> &lt;span style="color:#0086d2">_start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>_start:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$4&lt;/span>, &lt;span style="color:#fb660a">%eax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$1&lt;/span>, &lt;span style="color:#fb660a">%ebx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$str&lt;/span>, &lt;span style="color:#fb660a">%ecx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$8&lt;/span>, &lt;span style="color:#fb660a">%edx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">int&lt;/span> &lt;span style="color:#0086d2">$0x80&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$1&lt;/span>, &lt;span style="color:#fb660a">%eax&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">movl&lt;/span> &lt;span style="color:#0086d2">$0&lt;/span>, &lt;span style="color:#fb660a">%ebx&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">int&lt;/span> &lt;span style="color:#0086d2">$0x80&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="langages-compilés" >Langages compilés
&lt;span>
&lt;a href="#langages-compil%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Compilation&lt;/strong> = phase de traduction du code source en langage machine, puis exécution du résultat de la compilation.
&lt;ul>
&lt;li>Performances optimales.&lt;/li>
&lt;li>Permet de détecter les erreurs syntaxiques avant l&amp;rsquo;exécution.&lt;/li>
&lt;li>Recompilation nécessaire sur un nouvel environnement.&lt;/li>
&lt;li>Exemples : C, C++.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="langages-interprétés" >Langages interprétés
&lt;span>
&lt;a href="#langages-interpr%c3%a9t%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Interprétation&lt;/strong> = exécution du code source d&amp;rsquo;un programme ligne après ligne.
&lt;ul>
&lt;li>Pas de phase de compilation (gain de temps).&lt;/li>
&lt;li>Code directement portable d&amp;rsquo;un environnement à l&amp;rsquo;autre.&lt;/li>
&lt;li>Performances inférieures aux langages compilés.&lt;/li>
&lt;li>Détection tardive des erreurs syntaxiques (durant l&amp;rsquo;exécution).&lt;/li>
&lt;li>Exemples : Python, JavaScript, PHP.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="langages-pseudo-compilés" >Langages pseudo-compilés
&lt;span>
&lt;a href="#langages-pseudo-compil%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Code source compilé vers un format intermédiaire multi-plaformes (&amp;quot;&lt;em>Write once, run anywhere&lt;/em>&amp;quot;).
&lt;ul>
&lt;li>Erreurs syntaxiques détectées à la compilation.&lt;/li>
&lt;li>Evite les recompilations.&lt;/li>
&lt;li>Nécessite que l&amp;rsquo;environnement soit supporté par la plate-forme d&amp;rsquo;exécution du code intermédiaire.&lt;/li>
&lt;li>Exemples : Java, C#.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="notion-dalgorithme" >Notion d&amp;rsquo;algorithme
&lt;span>
&lt;a href="#notion-dalgorithme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;blockquote>
&lt;p>&amp;ldquo;Un algorithme est une méthode de calcul qui indique la démarche à suivre pour résoudre une série de problèmes équivalents en appliquant dans un ordre précis une suite finie de règles.&amp;rdquo; (Académie Française)&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="exemple-dalgorithme" >Exemple d&amp;rsquo;algorithme
&lt;span>
&lt;a href="#exemple-dalgorithme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>Début
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sortir une casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mettre de l&amp;#39;eau dans la casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du sel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mettre la casserole sur le feu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que l&amp;#39;eau ne bout pas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attendre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sortir les pâtes du placard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans la casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que les pâtes ne sont pas cuites
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attendre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans une passoire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Egoutter les pâtes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans un plat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Goûter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que les pâtes sont trop fades
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du sel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Goûter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Si on préfère le beurre à l&amp;#39;huile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du beurre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sinon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter de l&amp;#39;huile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>&lt;img src="images/P%C3%A2tes-ricotta_69287116.jpeg" alt="Miam!">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="le-rôle-du-programmeur" >Le rôle du programmeur
&lt;span>
&lt;a href="#le-r%c3%b4le-du-programmeur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Créer des programmes qui réalisent de manière fiable les tâches attendues.&lt;/li>
&lt;li>Maîtriser la complexité qui apparaît inévitablement lorsque les fonctionnalités du programme évoluent.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&amp;ldquo;Le programmeur est un créateur d&amp;rsquo;univers dont il est seul responsable.&amp;rdquo; (Joseph Weizenbaum).&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="premiers-pas-avec-c" >Premiers pas avec C#
&lt;span>
&lt;a href="#premiers-pas-avec-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="c-en-quelques-mots" >C# en quelques mots
&lt;span>
&lt;a href="#c-en-quelques-mots">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Langage de programmation apparu en 2002 avec la première version de .NET (Framework).&lt;/li>
&lt;li>Syntaxe très inspirée de Java et de C++.&lt;/li>
&lt;li>Typage statique, orienté objet.&lt;/li>
&lt;li>Permet de créer une grande variété d&amp;rsquo;applications (bureau, web, mobile, cloud, etc).&lt;/li>
&lt;li>Version associée à .NET 6 : C# 10.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="coder-en-c" >Coder en C#
&lt;span>
&lt;a href="#coder-en-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Environnements de développement intégré (IDE) :
&lt;ul>
&lt;li>&lt;a href="https://visualstudio.microsoft.com/fr/">Visual Studio&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jetbrains.com/rider/">Rider&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Editeurs de code :
&lt;ul>
&lt;li>&lt;a href="https://code.visualstudio.com/">Visual Studio Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://atom.io/">Atom&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.sublimetext.com/">Sublime Text&lt;/a>&lt;/li>
&lt;li>&lt;del>Notepad++&lt;/del>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="création-dune-application-console-avec-net" >Création d&amp;rsquo;une application console avec .NET
&lt;span>
&lt;a href="#cr%c3%a9ation-dune-application-console-avec-net">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Type d&amp;rsquo;application basique qui s&amp;rsquo;exécute dans un terminal.&lt;/li>
&lt;li>UI pauvre, interactions limitées au clavier.&lt;/li>
&lt;li>Création d&amp;rsquo;un projet console .NET nommé &lt;strong>HelloCSharp&lt;/strong> :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Le projet est créé dans le sous-répertoire HelloCSharp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet new console -o HelloCSharp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="résultat-obtenu" >Résultat obtenu
&lt;span>
&lt;a href="#r%c3%a9sultat-obtenu">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/vscode-hellocsharp.png" alt="VS Code - HelloCSharp">&lt;/p>
&lt;hr>
&lt;h3 id="le-fichier-csproj" >Le fichier .csproj
&lt;span>
&lt;a href="#le-fichier-csproj">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Décrit la configuration du projet.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-xml" data-lang="xml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;Project&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">Sdk=&lt;/span>&lt;span style="color:#0086d2">&amp;#34;Microsoft.NET.Sdk&amp;#34;&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;OutputType&amp;gt;&lt;/span>Exe&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/OutputType&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;TargetFramework&amp;gt;&lt;/span>net6.0&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/TargetFramework&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;ImplicitUsings&amp;gt;&lt;/span>enable&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/ImplicitUsings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;Nullable&amp;gt;&lt;/span>enable&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/Nullable&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/PropertyGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">&amp;lt;/Project&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-fichier-programcs" >Le fichier Program.cs
&lt;span>
&lt;a href="#le-fichier-programcs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier source principal contenant le code C#.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// See https://aka.ms/new-console-template for more information&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Hello, World!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exécution-du-programme" >Exécution du programme
&lt;span>
&lt;a href="#ex%c3%a9cution-du-programme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Cette commande doit être lancée dans le répertoire HelloCSharp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="images/vscode-hellocsharp-run.png" alt="VS Code - HelloCSharp run">&lt;/p>
&lt;hr>
&lt;h3 id="littéraux" >Littéraux
&lt;span>
&lt;a href="#litt%c3%a9raux">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Un littéral est une valeur donnée explicitement dans le code source.&lt;/li>
&lt;li>Exemples : &lt;code>2&lt;/code>, &lt;code>3.14&lt;/code>, &lt;code>&amp;quot;Hello World!&amp;quot;&lt;/code>.&lt;/li>
&lt;li>Séparateur décimal : le point &lt;code>.&lt;/code>&lt;/li>
&lt;li>Chaînes de caractères (texte) : guillemets doubles &lt;code>&amp;quot;...&amp;quot;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="instructions" >Instructions
&lt;span>
&lt;a href="#instructions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une instruction est un ordre écrit dans le code.&lt;/li>
&lt;li>Elles se terminent par &lt;code>;&lt;/code> en C#.&lt;/li>
&lt;li>Elles peuvent être regroupées dans des &lt;strong>blocs&lt;/strong> délimités par des accolades &lt;code>{ ... }&lt;/code>.&lt;/li>
&lt;li>Durant l&amp;rsquo;exécution, chaque instruction est &amp;ldquo;lue&amp;rdquo; séquentiellement et produit un résultat.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="commentaires" >Commentaires
&lt;span>
&lt;a href="#commentaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Rôle : expliquer &lt;em>aux humains&lt;/em> certaines parties du code.&lt;/li>
&lt;li>Syntaxe : &lt;code>//...&lt;/code> (monoligne) ou &lt;code>/* ... */&lt;/code> (multilignes).&lt;/li>
&lt;li>Peuvent être ajoutés/supprimés automatiquement par les éditeurs de code et les IDE.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="guide-de-codage-c" >Guide de codage C#
&lt;span>
&lt;a href="#guide-de-codage-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="nommage-des-identifiants" >Nommage des identifiants
&lt;span>
&lt;a href="#nommage-des-identifiants">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Un &lt;strong>identifiant&lt;/strong> est le nom donné à un élément du code créé par le développeur.&lt;/li>
&lt;li>Ils doivent commencer par une lettre ou un &lt;em>underscore&lt;/em> &lt;code>_&lt;/code>.&lt;/li>
&lt;li>Ils sont sensibles à la casse (distinction majuscules/minuscules).&lt;/li>
&lt;li>Au sein d&amp;rsquo;un bloc, le même identifiant ne peut pas être attribué à des éléments distincts.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="mots-réservés-du-c" >Mots réservés du C#
&lt;span>
&lt;a href="#mots-r%c3%a9serv%c3%a9s-du-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>abstract
as
base
bool
break
byte
case
catch
char
checked
class
const
continue
decimal
default
delegate
do
double
else
enum
event
explicit
extern
false
file finally
fixed
float
for
foreach
goto
if
implicit
in
int
interface
internal
is
lock
long
namespace
new
null
object
operator
out
override
params
private
protected
public
readonly
ref
return
sbyte
sealed
short
sizeof
stackalloc
static
string
struct
switch
this
throw
true
try
typeof
uint
ulong
unchecked
unsafe
ushort
using
virtual
void
volatile
while&lt;/p>
&lt;hr>
&lt;h3 id="conventions-de-nommage" >Conventions de nommage
&lt;span>
&lt;a href="#conventions-de-nommage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Plus l&amp;rsquo;élément est utilisé dans le code, plus il faut le nommer avec soin.&lt;/li>
&lt;li>Notation &lt;a href="https://fr.wikipedia.org/wiki/Camel_case">camelCase&lt;/a> : &lt;code>totalFacturesClient&lt;/code>.
&lt;ul>
&lt;li>Pas d&amp;rsquo;underscores entre les mots (!= Python).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Notation PascalCase (première lettre en majuscule) pour certains éléments (fonctions, méthodes, structures, classes) : &lt;code>CompteBancaire&lt;/code>.&lt;/li>
&lt;li>Pas d&amp;rsquo;accents ! (même si ça fonctionne)&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="formatage-du-code" >Formatage du code
&lt;span>
&lt;a href="#formatage-du-code">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Pas plus d&amp;rsquo;une instruction par ligne.&lt;/li>
&lt;li>Longueur maximum d&amp;rsquo;une ligne : 80-ish caractères.&lt;/li>
&lt;li>Accolades ouvrantes et fermantes sur des lignes distinctes.&lt;/li>
&lt;li>Indentation = 4 espaces.&lt;/li>
&lt;li>&amp;hellip; Utiliser le formateur automatique de son éditeur/IDE !
&lt;ul>
&lt;li>Activer le formatage à la sauvegarde pour plus de confort.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="formatage-des-commentaires" >Formatage des commentaires
&lt;span>
&lt;a href="#formatage-des-commentaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Placer les commentaires sur des lignes distinctes.&lt;/li>
&lt;li>Débuter par une majuscule et terminer par un point.&lt;/li>
&lt;li>Laisser un espace entre le symbole de début et le texte.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ceci est un commentaire tellement long qu&amp;#39;il est réparti&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// sur plusieurs lignes.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">Encore
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">un
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">commentaire.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">*/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="ressources" >Ressources
&lt;span>
&lt;a href="#ressources">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/coding-style/coding-conventions">C# Coding Conventions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/dotnet/runtime/blob/main/docs/coding-guidelines/coding-style.md">C# Coding Style&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/docs/editor/codebasics#_formatting">Visual Studio Code - Formatting&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="variables-valeurs-et-types" >Variables, valeurs et types
&lt;span>
&lt;a href="#variables-valeurs-et-types">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="valeur-vs-type" >Valeur Vs type
&lt;span>
&lt;a href="#valeur-vs-type">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Valeur&lt;/strong> = morceau d&amp;rsquo;information utilisée dans un programme.&lt;/li>
&lt;li>Chaque valeur possède un &lt;strong>type&lt;/strong> qui détermine :
&lt;ul>
&lt;li>son encodage en mémoire ;&lt;/li>
&lt;li>la plage des valeurs possibles ;&lt;/li>
&lt;li>les opérations permises.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>C# est un langage à &lt;strong>typage statique&lt;/strong> : les types doivent être explicitement précisés (!= Python).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="variables" >Variables
&lt;span>
&lt;a href="#variables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Variable&lt;/strong> = zone de stockage d&amp;rsquo;information dans la mémoire allouée au programme.
&lt;ul>
&lt;li>Sorte de &amp;ldquo;boîte&amp;rdquo; dans laquelle on range des choses.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Caractérisée par :
&lt;ul>
&lt;li>son nom (identifiant) ;&lt;/li>
&lt;li>sa valeur ;&lt;/li>
&lt;li>son type.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="déclaration-dune-variable" >Déclaration d&amp;rsquo;une variable
&lt;span>
&lt;a href="#d%c3%a9claration-dune-variable">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Type défini explicitement à la déclaration.&lt;/li>
&lt;li>Valeur modifiée par l&amp;rsquo;opérateur d&amp;rsquo;affectation &lt;code>=&lt;/code>.
&lt;ul>
&lt;li>Ne pas confondre avec l&amp;rsquo;égalité mathématique !&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Possibilité de définir la valeur initiale au moment de la déclaration.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> x; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Déclaration : aucune valeur dans la variable x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Affectation de la valeur 3 à x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> y = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Déclaration et initialisation de la variable y&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>y = &lt;span style="color:#0086d2">&amp;#34;Coucou&amp;#34;&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : valeur incompatible avec le type de y&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="portée-dune-variable" >Portée d&amp;rsquo;une variable
&lt;span>
&lt;a href="#port%c3%a9e-dune-variable">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Portée&lt;/strong> (&lt;em>scope&lt;/em>) = portion du code source dans laquelle une variable est visible et donc utilisable.&lt;/li>
&lt;li>L&amp;rsquo;unité de portée est le bloc de code &lt;code>{ ... }&lt;/code> ainsi que ses sous-blocs éventuels.&lt;/li>
&lt;li>En l&amp;rsquo;absence d&amp;rsquo;accolades, un bloc par défaut est implicitement défini.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a = &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK : a est déclarée dans le bloc parent&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> b = &lt;span style="color:#0086f7;font-weight:bold">4&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La portée de b se limite au bloc actuel&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(a); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK : a est déclarée dans le bloc courant&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(b); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : b n&amp;#39;est pas visible ici&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="types-prédéfinis" >Types prédéfinis
&lt;span>
&lt;a href="#types-pr%c3%a9d%c3%a9finis">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Extrait du vaste éventail de &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/built-in-types">types prédéfinis du C#&lt;/a> :&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Mot-clé&lt;/th>
&lt;th>Nom complet&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/integral-numeric-types">int&lt;/a>&lt;/td>
&lt;td>&lt;code>System.Int32&lt;/code>&lt;/td>
&lt;td>Entier (signé)&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/floating-point-numeric-types">double&lt;/a>&lt;/td>
&lt;td>&lt;code>System.Double&lt;/code>&lt;/td>
&lt;td>Réel&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/bool">bool&lt;/a>&lt;/td>
&lt;td>&lt;code>System.Boolean&lt;/code>&lt;/td>
&lt;td>Booléen&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/char">char&lt;/a>&lt;/td>
&lt;td>&lt;code>System.Char&lt;/code>&lt;/td>
&lt;td>Caractère&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/reference-types#the-string-type">string&lt;/a>&lt;/td>
&lt;td>&lt;code>System.String&lt;/code>&lt;/td>
&lt;td>Chaîne de caractères&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="valeurs-prédéfinies" >Valeurs prédéfinies
&lt;span>
&lt;a href="#valeurs-pr%c3%a9d%c3%a9finies">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Plusieurs valeurs constantes sont associées à certains types.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.MaxValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus grande valeur gérée par int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> j = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.MinValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus petite valeur gérée par int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> a = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.MaxValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus grande valeur gérée par double&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> b = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.MinValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus petite valeur gérée par double&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> c = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.Epsilon; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus petite valeur réelle positive&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> d = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.NaN; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Pas un nombre (Not a Number)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> e = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.PositiveInfinity; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// +∞&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> f = &lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>.NegativeInfinity; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// −∞&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="notation-suffixée" >Notation suffixée
&lt;span>
&lt;a href="#notation-suffix%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les litéraux réels sont considérés par défaut comme ayant le type &lt;code>double&lt;/code>.&lt;/li>
&lt;li>Dans certaines situations, il est utile de préciser explicitement le type souhaité en utilisant la &lt;strong>notation suffixée&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">float&lt;/span> f = &lt;span style="color:#0086f7;font-weight:bold">1.2f&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Réel sur 32 bits&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> d = &lt;span style="color:#0086f7;font-weight:bold">1.2d&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Réel sur 64 bits&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">decimal&lt;/span> m = &lt;span style="color:#0086f7;font-weight:bold">1.2&lt;/span>m; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Réel sur 128 bits&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="types-valeur-vs-types-référence" >Types valeur Vs types référence
&lt;span>
&lt;a href="#types-valeur-vs-types-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les types C# se divisent en deux catégories.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-types">Types valeur&lt;/a> : la variable contient directement la valeur qu&amp;rsquo;elle stocke.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/reference-types">Types référence&lt;/a> : la variable contient une référence vers la valeur ($\approx$ son adresse dans la mémoire). Cette &lt;em>indirection&lt;/em> permet d&amp;rsquo;optimiser certaines opérations (comparaison, copie, etc).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Tous les exemples précédents sont des types valeur, sauf &lt;code>string&lt;/code> (mais qui s&amp;rsquo;utilise comme un type valeur).&lt;/p>
&lt;hr>
&lt;h3 id="hiérarchie-des-types-c" >Hiérarchie des types C#
&lt;span>
&lt;a href="#hi%c3%a9rarchie-des-types-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/types/">&lt;img src="images/value-reference-types-common-type-system.png" alt="Hiérarchie des types C#">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="types-valeur-nullables" >Types valeur nullables
&lt;span>
&lt;a href="#types-valeur-nullables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le mot-clé &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/null">null&lt;/a> indique l&amp;rsquo;absence de référence.&lt;/li>
&lt;li>C&amp;rsquo;est la &amp;ldquo;valeur&amp;rdquo; par défaut des variables de type référence.&lt;/li>
&lt;li>Un type valeur est &lt;em>non-nullable&lt;/em> par défaut. Il peut devenir &lt;a href="(https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-value-types)">nullable&lt;/a> en le suffixant par &lt;code>?&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : type valeur non nullable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> b = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, type nullable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="types-référence-nullables" >Types référence nullables
&lt;span>
&lt;a href="#types-r%c3%a9f%c3%a9rence-nullables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Depuis C# 8, on peut paramétrer un projet C# afin que les types référence deviennent &lt;em>non-nullables&lt;/em>, cad &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-reference-types">qu&amp;rsquo;on ne puisse pas leur affecter&lt;/a> &lt;code>null&lt;/code> ou une valeur potentiellement égale à &lt;code>null&lt;/code>.
&lt;ul>
&lt;li>C&amp;rsquo;est le cas par défaut avec .NET 6.&lt;/li>
&lt;li>Objectif : améliorer la sûreté du code.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Le préfixage par &lt;code>?&lt;/code> autorise &lt;code>null&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> s; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, valeur de s = null (variable inutilisable en l&amp;#39;état)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK, type référence non nullable (C# 8+)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string?&lt;/span> t = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, type nullable&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="conversions-de-types-implicites" >Conversions de types implicites
&lt;span>
&lt;a href="#conversions-de-types-implicites">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>En C#, le type d&amp;rsquo;une variable ne peut plus être modifié après sa déclaration (typage statique).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Une &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions#implicit-conversions">conversion implicite&lt;/a> a lieu quand la nouvelle valeur est directement compatible avec le type actuel (exemples : entier vers entier de plus grande précision, entier vers réel).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086d2">&amp;#34;Bonjour&amp;#34;&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK, valeur incompatible avec le type int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> n = &lt;span style="color:#0086f7;font-weight:bold">2147483647&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> d = n; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, conversion implicite&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Le type entier long peut stocker n&amp;#39;importe quel int&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">long&lt;/span> l = n; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, conversion implicite&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="conversions-de-types-explicites" >Conversions de types explicites
&lt;span>
&lt;a href="#conversions-de-types-explicites">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/types/casting-and-type-conversions#explicit-conversions">Transtypage&lt;/a> (&lt;em>cast&lt;/em>) : on force le type de la nouvelle valeur en la préfixant par le nouveau type entre parenthèses.
&lt;ul>
&lt;li>Perte possible d&amp;rsquo;information.&lt;/li>
&lt;li>Potentiellement dangereux !&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Fonctions de conversion C# : &lt;code>{type}.Parse&lt;/code> ou &lt;code>Convert.To{type}&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> x = (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>)&lt;span style="color:#0086f7;font-weight:bold">12.3&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK : transtypage possible, x vaut 12&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> y = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.Parse(&lt;span style="color:#0086d2">&amp;#34;123&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK, y vaut 123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> z = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.Parse(&lt;span style="color:#0086d2">&amp;#34;12.3&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : nouvelle valeur non entière&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="booléens" >Booléens
&lt;span>
&lt;a href="#bool%c3%a9ens">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le type &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/bool">bool&lt;/a> représente une valeur booléenne &lt;code>true&lt;/code> ou &lt;code>false&lt;/code>.&lt;/li>
&lt;li>Booléen nullable : &lt;code>bool?&lt;/code>&lt;/li>
&lt;li>Un conversion explicite est requise vers/depuis les types entier : toutes les valeurs non-zéro sont converties à &lt;code>true&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> b = &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">bool?&lt;/span> n = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK : type nullable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> p = Convert.ToBoolean(&lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// p vaut true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> q = Convert.ToBoolean(&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// r vaut false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="caractères" >Caractères
&lt;span>
&lt;a href="#caract%c3%a8res">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le type &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/char">char&lt;/a> représente un caractère alphanumérique &lt;a href="https://en.wikipedia.org/wiki/Unicode">Unicode&lt;/a>.&lt;/li>
&lt;li>On peut lui affecter un caractère litéral délimité par des guillemets simples &lt;code>''&lt;/code> ou sa &lt;a href="https://en.wikipedia.org/wiki/List_of_Unicode_characters#Basic_Latin">valeur Unicode&lt;/a> transtypée.&lt;/li>
&lt;li>Le caractère d&amp;rsquo;échappement est &lt;code>\&lt;/code>.&lt;/li>
&lt;li>La conversion est implicite vers les principaux types entiers et réels.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span> c = &lt;span style="color:#0086d2">&amp;#39;a&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> cVal = c; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// cVal vaut 97, la valeur Unicode de &amp;#39;a&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span> cBis = (&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span>)&lt;span style="color:#0086f7;font-weight:bold">97&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Initialisation à partir de la valeur Unicode&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="séquences-déchappement" >Séquences d&amp;rsquo;échappement
&lt;span>
&lt;a href="#s%c3%a9quences-d%c3%a9chappement">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Extrait de la &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/#string-escape-sequences">liste complète des séquences d&amp;rsquo;échappement C#&lt;/a> :&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Séquence&lt;/th>
&lt;th>Valeur&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>\'&lt;/code>&lt;/td>
&lt;td>Guillemet simple&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\&amp;quot;&lt;/code>&lt;/td>
&lt;td>Guillemet double&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\\&lt;/code>&lt;/td>
&lt;td>Antislash&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\n&lt;/code>&lt;/td>
&lt;td>Saut de ligne&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>\t&lt;/code>&lt;/td>
&lt;td>Tabulation&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="chaînes-de-caractères" >Chaînes de caractères
&lt;span>
&lt;a href="#cha%c3%aenes-de-caract%c3%a8res">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le type &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/reference-types#the-string-type">string&lt;/a> représente une séquence de caractères Unicode.&lt;/li>
&lt;li>L&amp;rsquo;instruction &lt;code>{chaîne}.Length&lt;/code> renvoie le nombre de caractères d&amp;rsquo;une chaîne.&lt;/li>
&lt;li>La syntaxe entre crochets &lt;code>[]&lt;/code> permet d&amp;rsquo;accéder à un caractère de la chaîne à partir de son rang.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> s = &lt;span style="color:#0086d2">&amp;#34;abc&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span> premier = s[&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>]; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#39;a&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">char&lt;/span> dernier = s[s.Length - &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>]; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#39;c&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="chaînes-verbatim" >Chaînes verbatim
&lt;span>
&lt;a href="#cha%c3%aenes-verbatim">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Placé devant son début, le caractère &lt;code>@&lt;/code> permet de créer une &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/verbatim">chaîne verbatim&lt;/a> dans laquelle on peut ajouter des caractères spéciaux sans les échapper.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ces deux chaînes contiennent &amp;#34;c:\Windows\Temp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> c1 = &lt;span style="color:#0086d2">&amp;#34;c:\\Windows\\Temp&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> c2 = &lt;span style="color:#0086d2">@&amp;#34;c:\Windows\Temp&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="void" >Void
&lt;span>
&lt;a href="#void">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le mot-clé &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/void">void&lt;/a> est utilisé pour indiquer l&amp;rsquo;absence de valeur de retour par une instruction.&lt;/li>
&lt;li>Une variable ou une expression ne peut pas être de type &lt;code>void&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="expressions" >Expressions
&lt;span>
&lt;a href="#expressions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="définition-dune-expression" >Définition d&amp;rsquo;une expression
&lt;span>
&lt;a href="#d%c3%a9finition-dune-expression">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/expressions">expression&lt;/a> est une combinaison de variables, de valeurs et d&amp;rsquo;opérateurs.&lt;/li>
&lt;li>Toute expression qui renvoie une valeur possède un type.&lt;/li>
&lt;li>Le résultat d&amp;rsquo;une expression peut être inclus dans une autre expression.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="opérateurs-arithmétiques" >Opérateurs arithmétiques
&lt;span>
&lt;a href="#op%c3%a9rateurs-arithm%c3%a9tiques">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Opérateur&lt;/th>
&lt;th>Rôle&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>+&lt;/code>&lt;/td>
&lt;td>Addition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>-&lt;/code>&lt;/td>
&lt;td>Soustraction&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>*&lt;/code>&lt;/td>
&lt;td>Multiplication&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>/&lt;/code>&lt;/td>
&lt;td>Division&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>%&lt;/code>&lt;/td>
&lt;td>Modulo&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="opérateurs-de-comparaison" >Opérateurs de comparaison
&lt;span>
&lt;a href="#op%c3%a9rateurs-de-comparaison">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Ne pas confondre &lt;code>==&lt;/code> et &lt;code>=&lt;/code> (affectation) !&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Opérateur&lt;/th>
&lt;th>Rôle&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>==&lt;/code>&lt;/td>
&lt;td>Egal à&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>!=&lt;/code>&lt;/td>
&lt;td>Différent de&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;&lt;/code>&lt;/td>
&lt;td>Inférieur&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;=&lt;/code>&lt;/td>
&lt;td>Inférieur ou égal&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;gt;&lt;/code>&lt;/td>
&lt;td>Supérieur&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;gt;=&lt;/code>&lt;/td>
&lt;td>Supérieur ou égal&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="opérateurs-logiques" >Opérateurs logiques
&lt;span>
&lt;a href="#op%c3%a9rateurs-logiques">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Opérateur&lt;/th>
&lt;th>Rôle&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>&amp;amp;&amp;amp;&lt;/code>&lt;/td>
&lt;td>ET logique&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>||&lt;/code>&lt;/td>
&lt;td>OU logique&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>!&lt;/code>&lt;/td>
&lt;td>NON logique&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="priorité-des-opérateurs" >Priorité des opérateurs
&lt;span>
&lt;a href="#priorit%c3%a9-des-op%c3%a9rateurs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Elle est gérée comme en mathématiques à l&amp;rsquo;aide de parenthèses &lt;code>()&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> e = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span> * &lt;span style="color:#0086f7;font-weight:bold">4&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// e contient la valeur 11&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> f = (&lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>) * &lt;span style="color:#0086f7;font-weight:bold">4&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// f contient la valeur 20&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="division-entière" >Division entière
&lt;span>
&lt;a href="#division-enti%c3%a8re">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une division entre deux entiers donne un résultat de type entier.&lt;/li>
&lt;li>Pour obtenir un résultat réel, il faut que l&amp;rsquo;un des deux opérandes soit de type réel ou que le résultat soit explicitement converti.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> q = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// q vaut 2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> r = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> % &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// r vaut 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> d = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / &lt;span style="color:#0086f7;font-weight:bold">2.0&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// d vaut 2,5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> e = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / &lt;span style="color:#0086f7;font-weight:bold">2d&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// e vaut 2,5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> f = (&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span>)&lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// f vaut 2,5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> z = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> g = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> / z; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK, division par zéro à l&amp;#39;exécution&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="incrémentation-et-décrémentation" >Incrémentation et décrémentation
&lt;span>
&lt;a href="#incr%c3%a9mentation-et-d%c3%a9cr%c3%a9mentation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les opérateurs &lt;code>++&lt;/code> et &lt;code>--&lt;/code> permettent resp. d&amp;rsquo;augmenter et de diminuer de 1 la valeur d&amp;rsquo;une variable.&lt;/li>
&lt;li>Ils équivalent à &lt;code>variable = variable ± 1&lt;/code>.&lt;/li>
&lt;li>Attention, le résultat renvoyé par l&amp;rsquo;expression est différent selon la position de l&amp;rsquo;opérateur (pré- ou post-incrémentation/décrémentation).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a++; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// a vaut 4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> b = a++; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// a vaut 5, b vaut 4 !&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> c = ++a; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// a et c valent 6&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="opérateurs-combinés-daffectation" >Opérateurs combinés d&amp;rsquo;affectation
&lt;span>
&lt;a href="#op%c3%a9rateurs-combin%c3%a9s-daffectation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>De la forme &lt;code>variable {opérateur}= valeur&lt;/code>, ils équivalent à &lt;code>variable = variable {operateur} valeur&lt;/code>&lt;/li>
&lt;li>Ils permettent de raccourcir certaines expressions.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>i += &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Equivaut à i = i + 5, donc i vaut 15&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>i /= &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// i vaut 5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="dépassement-de-capacité" >Dépassement de capacité
&lt;span>
&lt;a href="#d%c3%a9passement-de-capacit%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les types numériques ont une taille finie en mémoire, et donc une capacité limitée.&lt;/li>
&lt;li>Dans certaines circonstances, les limites des plages de valeur peuvent être dépassées&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> x = &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.MaxValue; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Plus grand int possible&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>x++;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(x == &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>.MinValue); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true !&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="erreurs-darrondi" >Erreurs d&amp;rsquo;arrondi
&lt;span>
&lt;a href="#erreurs-darrondi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;arithmétique sur les types à virgule flottante peut entrainer des imprécisions et des erreurs d&amp;rsquo;arrondi.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086f7;font-weight:bold">5.32&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">2.23&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 7,550000000000001&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086f7;font-weight:bold">5.32&lt;/span>m + &lt;span style="color:#0086f7;font-weight:bold">2.23&lt;/span>m); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 7,55&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="concaténation-de-chaînes" >Concaténation de chaînes
&lt;span>
&lt;a href="#concat%c3%a9nation-de-cha%c3%aenes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Elle s&amp;rsquo;effectue à l&amp;rsquo;aide de l&amp;rsquo;opérateur &lt;code>+&lt;/code> lorsqu&amp;rsquo;au moins l&amp;rsquo;une des deux opérandes est une chaîne.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> s = &lt;span style="color:#0086d2">&amp;#34;I &amp;#34;&lt;/span> + &lt;span style="color:#0086d2">&amp;#34;feel &amp;#34;&lt;/span> + &lt;span style="color:#0086d2">&amp;#34;good!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(s);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nbFamilles = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> ecole = &lt;span style="color:#0086d2">&amp;#34;ENSC&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> t = &lt;span style="color:#0086d2">&amp;#34;Il y a &amp;#34;&lt;/span> + nbFamilles + &lt;span style="color:#0086d2">&amp;#34; familles à l&amp;#39;&amp;#34;&lt;/span> + ecole;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(t); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Il y a 5 familles à l&amp;#39;ENSC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="interpolation-de-chaînes" >Interpolation de chaînes
&lt;span>
&lt;a href="#interpolation-de-cha%c3%aenes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Placé devant son début, le caractère &lt;code>$&lt;/code> permet de créer une &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/interpolated">chaîne interpolée&lt;/a> dans laquelle on peut ajouter des expressions entre accolades &lt;code>{}&lt;/code>.&lt;/li>
&lt;li>Ces expressions seront évaluées au moment du calcul de la valeur de la chaîne interpolée.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nbFamilles = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> ecole = &lt;span style="color:#0086d2">&amp;#34;ENSC&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> u = &lt;span style="color:#0086d2">$&amp;#34;Il y a {nbFamilles} familles à l&amp;#39;{ecole}&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(u); &lt;span style="color:#0086d2">&amp;#34;Il y a 5 familles à l&amp;#39;ENSC&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="conditions-et-alternatives" >Conditions et alternatives
&lt;span>
&lt;a href="#conditions-et-alternatives">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-notion-de-condition" >La notion de condition
&lt;span>
&lt;a href="#la-notion-de-condition">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une expression dont l&amp;rsquo;évaluation produit une valeur booléenne peut être utilisée comme &lt;strong>condition&lt;/strong>.&lt;/li>
&lt;li>Quand la valeur d&amp;rsquo;une condition est vraie, on dit que la condition est &lt;em>vérifiée&lt;/em>.&lt;/li>
&lt;li>Elles peuvent être &lt;strong>composées&lt;/strong> en utilisant des opérateurs logiques et des parenthèses.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(a == &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(a != &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="tables-de-vérité-des-opérateurs-logiques" >Tables de vérité des opérateurs logiques
&lt;span>
&lt;a href="#tables-de-v%c3%a9rit%c3%a9-des-op%c3%a9rateurs-logiques">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ET logique&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> &amp;amp;&amp;amp; &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OU logique&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> || &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span> || &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> || &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span> || &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NON logique&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(!&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(!&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="evaluation-abrégée" >Evaluation abrégée
&lt;span>
&lt;a href="#evaluation-abr%c3%a9g%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans une condition composée avec &lt;code>&amp;amp;&amp;amp;&lt;/code>, la seconde sous-condition n&amp;rsquo;est évaluée que si la première vaut &lt;code>true&lt;/code> (&lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators#conditional-logical-and-operator-">évaluation abrégée&lt;/a>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> s = &lt;span style="color:#0086d2">&amp;#34;Hi&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine((a == &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>) &amp;amp;&amp;amp; (s == &lt;span style="color:#0086d2">&amp;#34;Hello&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine((a == &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>) || (s == &lt;span style="color:#0086d2">&amp;#34;Hello&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La sous-condition (s == &amp;#34;Hi&amp;#34;) n&amp;#39;est pas évaluée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// puisque (a != 3) vaut false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine((a != &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>) &amp;amp;&amp;amp; (s == &lt;span style="color:#0086d2">&amp;#34;Hi&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="linstruction-conditionnelle-if" >L&amp;rsquo;instruction conditionnelle if
&lt;span>
&lt;a href="#linstruction-conditionnelle-if">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;instruction &lt;code>if&lt;/code> permet de soumettre l&amp;rsquo;exécution d&amp;rsquo;une partie du programme à une condition, qui doit être vérifiée.&lt;/li>
&lt;li>Le bloc de code associé est délimité par des accolades (!= Python).&lt;/li>
&lt;li>Lorsque ce bloc se réduit à une seule instruction, ces accolades peuvent être omises.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (condition) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées si la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Seule instruction exécutée si la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="lalternative-avec-ifelse" >L&amp;rsquo;alternative avec if/else
&lt;span>
&lt;a href="#lalternative-avec-ifelse">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Associée à un &lt;code>if&lt;/code>, le mot-clé &lt;code>else&lt;/code> permet d&amp;rsquo;exprimer une &lt;strong>alternative&lt;/strong>.&lt;/li>
&lt;li>Si la condition du &lt;code>if&lt;/code> est vérifiée, alors les instructions du bloc de code associé seront exécutées, sinon ce seront celles du bloc associé au &lt;code>else&lt;/code>.&lt;/li>
&lt;li>L&amp;rsquo;instruction &lt;code>if/else&lt;/code> permet de créer un branchement logique dans le code.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (condition) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées si la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées si la condition n&amp;#39;est pas vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="instructions-ifelse-imbriquées" >Instructions if/else imbriquées
&lt;span>
&lt;a href="#instructions-ifelse-imbriqu%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (nombre &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est positif&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{ &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// nombre &amp;lt;= 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (nombre &amp;lt; &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est négatif&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// nombre == 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est nul&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="flux-dexécution-de-lexemple-précédent" >Flux d&amp;rsquo;exécution de l&amp;rsquo;exemple précédent
&lt;span>
&lt;a href="#flux-dex%c3%a9cution-de-lexemple-pr%c3%a9c%c3%a9dent">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/chapter03-01.png" alt="Flux d&amp;rsquo;exécution if/else">&lt;/p>
&lt;hr>
&lt;h3 id="version-abrégée-de-lexemple-précédent" >Version abrégée de l&amp;rsquo;exemple précédent
&lt;span>
&lt;a href="#version-abr%c3%a9g%c3%a9e-de-lexemple-pr%c3%a9c%c3%a9dent">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le second &lt;code>if/else&lt;/code> constitue une seule instruction : les accolades peuvent donc être omises.&lt;/li>
&lt;li>Pas de &lt;code>elif&lt;/code> en C# !&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (nombre &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est positif&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (nombre &amp;lt; &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est négatif&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre} est nul&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="la-conditionnelle-ternaire" >La conditionnelle ternaire
&lt;span>
&lt;a href="#la-conditionnelle-ternaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>L&amp;rsquo;instruction &lt;code>?:&lt;/code> renvoie la valeur d&amp;rsquo;une expression parmi deux, selon la valeur d&amp;rsquo;une condition booléenne : &lt;code>(condition) ? valeur_si_vraie : valeur_si_fausse&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Appelée &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/conditional-operator">instruction conditionnelle ternaire&lt;/a>, elle constitue une alternative plus concise au &lt;code>if/else&lt;/code> dans certains scénarions.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">double&lt;/span> temperature = &lt;span style="color:#0086f7;font-weight:bold">38.5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> etat = (temperature &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">38&lt;/span>) ? &lt;span style="color:#0086d2">&amp;#34;malade&amp;#34;&lt;/span> : &lt;span style="color:#0086d2">&amp;#34;bien portant&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(etat); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;malade&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="linstruction-de-choix-switch" >L&amp;rsquo;instruction de choix switch
&lt;span>
&lt;a href="#linstruction-de-choix-switch">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;instruction &lt;code>switch&lt;/code> permet d&amp;rsquo;exécuter un bloc parmi plusieurs selon la valeur d&amp;rsquo;une expression.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> meteo = &lt;span style="color:#0086d2">&amp;#34;orage&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">switch&lt;/span> (meteo)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">case&lt;/span> &lt;span style="color:#0086d2">&amp;#34;soleil&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Sortez en t-shirt&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">case&lt;/span> &lt;span style="color:#0086d2">&amp;#34;vent&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Sortez en coupe-vent&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Restez au chaud à la maison !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">break&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="structures-répétitives" >Structures répétitives
&lt;span>
&lt;a href="#structures-r%c3%a9p%c3%a9titives">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-boucle-while" >La boucle while
&lt;span>
&lt;a href="#la-boucle-while">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;instruction &lt;code>while&lt;/code> permet de répéter des instructions tant qu&amp;rsquo;une condition est vérifiée.&lt;/li>
&lt;li>Ce type d&amp;rsquo;instruction est souvent appelée &lt;strong>boucle&lt;/strong>.&lt;/li>
&lt;li>Avant chaque tour de boucle, la condition du &lt;code>while&lt;/code> est évaluée :
&lt;ul>
&lt;li>Si elle est vraie, le bloc associé au &lt;code>while&lt;/code> (appelé &lt;em>corps de la boucle&lt;/em>) est exécuté, puis la condition est de nouveau évaluée.&lt;/li>
&lt;li>Sinon, l&amp;rsquo;exécution de la boucle est terminée.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">while&lt;/span> (condition) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées tant que la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-danger-des-boucles-infinies" >Le danger des boucles infinies
&lt;span>
&lt;a href="#le-danger-des-boucles-infinies">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;exécution d&amp;rsquo;une boucle &lt;code>while&lt;/code> dont la condition ne peut pas devenir fausse ne s&amp;rsquo;arrête jamais.&lt;/li>
&lt;li>On parle alors de &lt;strong>boucle infinie&lt;/strong>, qui nécessite une interruption externe brutale.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">while&lt;/span> (nombre &amp;lt;= &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(nombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// nombre n&amp;#39;est jamais modifiée =&amp;gt; condition toujours vraie&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="la-boucle-for" >La boucle for
&lt;span>
&lt;a href="#la-boucle-for">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Cette boucle permet de répéter des instructions en exécutant une instruction après chaque tour.
&lt;ul>
&lt;li>L&amp;rsquo;&lt;strong>initialisation&lt;/strong> se produit une seule fois, au début de l&amp;rsquo;exécution.&lt;/li>
&lt;li>La &lt;strong>condition&lt;/strong> est évaluée avant chaque tour de boucle afin d&amp;rsquo;effectuer un nouveau tour ou de sortir de la boucle.&lt;/li>
&lt;li>L&amp;rsquo;&lt;strong>étape&lt;/strong> est réalisée après chaque tour de boucle.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (initialisation; condition; étape) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instruction executées tant que la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="compteur-de-boucle" >Compteur de boucle
&lt;span>
&lt;a href="#compteur-de-boucle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La boucle &lt;code>for&lt;/code> est fréquemment utilisée avec une variable (appelée &lt;em>compteur&lt;/em>) qui permet d&amp;rsquo;identifier et de numéroter les tours de boucle.&lt;/li>
&lt;li>Le compteur peut également être exploité dans le corps de la boucle.
&lt;ul>
&lt;li>Sauf exception rare, il ne doit pas y être modifié !&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Il est souvent nommé &lt;code>i&lt;/code>, &lt;code>j&lt;/code> ou &lt;code>k&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (i = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>; i &amp;lt;= &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(i);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(i); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 6&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="déclaration-du-compteur-de-boucle" >Déclaration du compteur de boucle
&lt;span>
&lt;a href="#d%c3%a9claration-du-compteur-de-boucle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Afin de limiter sa portée au corps de la boucle, on peut déclarer la variable compteur dans l&amp;rsquo;initialisation d&amp;rsquo;une boucle &lt;code>for&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>; i &amp;lt; &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(i + &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(i); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : i est inaccessible ici&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="choix-entre-un-while-et-un-for" >Choix entre un while et un for
&lt;span>
&lt;a href="#choix-entre-un-while-et-un-for">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La boucle &lt;code>for&lt;/code> intègre la gestion du compteur, mais implique que le nombre de tours de boucle soit connu à l&amp;rsquo;avance.&lt;/li>
&lt;li>Les scénarios où le nombre de tours ne peut pas être prévu à l&amp;rsquo;avance sont plus simples à écrire avec un &lt;code>while&lt;/code>. En revanche, attention aux boucles infinies !&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="la-boucle-do-while" >La boucle do&amp;hellip; while
&lt;span>
&lt;a href="#la-boucle-do-while">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Variante de la boucle &lt;code>while&lt;/code> dans laquelle le corps de la boucle est toujours exécuté au moins une fois.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Instructions exécutées tant que la condition est vérifiée&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">while&lt;/span> (condition);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="sous-programmes" >Sous-programmes
&lt;span>
&lt;a href="#sous-programmes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="exemple-dalgorithme-monobloc" >Exemple d&amp;rsquo;algorithme monobloc
&lt;span>
&lt;a href="#exemple-dalgorithme-monobloc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>Début
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sortir une casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mettre de l&amp;#39;eau dans la casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du sel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Mettre la casserole sur le feu
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que l&amp;#39;eau ne bout pas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attendre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sortir les pâtes du placard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans la casserole
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que les pâtes ne sont pas cuites
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Attendre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans une passoire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Egoutter les pâtes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Verser les pâtes dans un plat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Goûter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tant que les pâtes sont trop fades
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du sel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Goûter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Si on préfère le beurre à l&amp;#39;huile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter du beurre
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sinon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Ajouter de l&amp;#39;huile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple-dalgorithme-modularisé" >Exemple d&amp;rsquo;algorithme modularisé
&lt;span>
&lt;a href="#exemple-dalgorithme-modularis%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Début
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Faire bouillir de l&amp;#39;eau
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cuire les pâtes dans l&amp;#39;eau
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Egoutter les pâtes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Assaisonner les pâtes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Fin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La recette est décomposée en sous-étapes :&lt;/p>
&lt;ul>
&lt;li>Gain en concision et en facilité d&amp;rsquo;interprétation&lt;/li>
&lt;li>Apparition de tâches plus élémentaires (&lt;em>Cuire&lt;/em>, &lt;em>Egoutter&lt;/em>, etc) qu&amp;rsquo;on peut envisager de réutiliser dans d&amp;rsquo;autres recettes.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="quest-ce-quun-sous-programme-" >Qu&amp;rsquo;est-ce qu&amp;rsquo;un sous-programme ?
&lt;span>
&lt;a href="#quest-ce-quun-sous-programme-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Regroupement d&amp;rsquo;instructions qui réalise une tâche donnée.&lt;/li>
&lt;li>Identifié par un nom (PascalCase en C#).
&lt;ul>
&lt;li>Comporte souvent un verbe à l&amp;rsquo;infinitif pour exprimer une action.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Appelé parfois &lt;strong>procédure&lt;/strong> ou &lt;strong>fonction&lt;/strong> (voir plus loin).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Définition du sous-programme DireBonjour&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> DireBonjour()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Début du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DireBonjour(); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Appel du sous-programme DireBonjour&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Fin du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="dynamique-dutilisation-dun-sous-programme" >Dynamique d&amp;rsquo;utilisation d&amp;rsquo;un sous-programme
&lt;span>
&lt;a href="#dynamique-dutilisation-dun-sous-programme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/chapter05-02.png" alt="Mécanisme d&amp;rsquo;utilisation d&amp;rsquo;un sous-programme">&lt;/p>
&lt;hr>
&lt;h3 id="ordre-de-définition" >Ordre de définition
&lt;span>
&lt;a href="#ordre-de-d%c3%a9finition">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Sauf cas particulier (voir plus loin), l&amp;rsquo;utilisation peut précéder la définition dans le code.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Début du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DireBonjour(); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Fin du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> DireBonjour()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="avantages-des-sous-programmes" >Avantages des sous-programmes
&lt;span>
&lt;a href="#avantages-des-sous-programmes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Permettent de décomposer un problème complexe en sous-parties plus élémentaires.&lt;/li>
&lt;li>Facilitent la maintenance, la réutilisation et les évolutions ultérieures.&lt;/li>
&lt;li>Evitent la duplication de code.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="type-de-retour" >Type de retour
&lt;span>
&lt;a href="#type-de-retour">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le mot-clé &lt;code>return&lt;/code> provoque la fin de l&amp;rsquo;exécution d&amp;rsquo;un sous-programme et définit l&amp;rsquo;expression associée comme sa &lt;strong>valeur de retour&lt;/strong>.&lt;/li>
&lt;li>Le type de cette expression doit être précisé dans la définition de la fonction.&lt;/li>
&lt;li>Un sous-programme C# ne peut avoir qu&amp;rsquo;une seule valeur de retour.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour2()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Début du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = DireBonjour2();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Fin du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="procédure-vs-fonction" >Procédure Vs fonction
&lt;span>
&lt;a href="#proc%c3%a9dure-vs-fonction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Un sous-programme sans valeur de retour est parfois appelé une &lt;strong>procédure&lt;/strong>.&lt;/li>
&lt;li>Un sous-programme avec une valeur de retour est parfois appelé une &lt;strong>fonction&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Procédure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> DireBonjour()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Fonction&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour2()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="nécessité-dune-valeur-de-retour-pour-les-fonctions" >Nécessité d&amp;rsquo;une valeur de retour pour les fonctions
&lt;span>
&lt;a href="#n%c3%a9cessit%c3%a9-dune-valeur-de-retour-pour-les-fonctions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La valeur doit également être compatible avec le type de retour précisé dans la définition.&lt;/li>
&lt;li>Dans les cas contraires : erreur à la compilation.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : aucune valeur de retour (pas de return)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> CalculerUnTruc()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Je calcule...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : tous les chemins de code ne retournent pas une valeur&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> CalculerUnTruc2()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (&lt;span style="color:#0086f7;font-weight:bold">2&lt;/span> &amp;gt; &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : conversion implicite impossible d&amp;#39;une chaîne vers un entier&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> CalculerUnTruc3()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;1&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="non-utilisation-de-la-valeur-de-retour-dune-fonction" >Non-utilisation de la valeur de retour d&amp;rsquo;une fonction
&lt;span>
&lt;a href="#non-utilisation-de-la-valeur-de-retour-dune-fonction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Ne provoque pas d&amp;rsquo;erreur, mais risque de perte d&amp;rsquo;information.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Début du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DireBonjour2(); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// N&amp;#39;affiche rien !&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Fin du programme&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="variables-locales" >Variables locales
&lt;span>
&lt;a href="#variables-locales">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>On peut déclarer des variables dans le corps d&amp;rsquo;une fonction.&lt;/li>
&lt;li>Elle sont dites &lt;em>locales&lt;/em> : leur portée se limite à la fonction.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour3()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Bonjour !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour3()); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : message n&amp;#39;existe pas ici&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="variables-locales-et-nommage" >Variables locales et nommage
&lt;span>
&lt;a href="#variables-locales-et-nommage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Il est possible de déclarer des variables portant des noms identiques mais ayant des portées différentes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour4()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Déclaration d&amp;#39;une variable locale message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Bonjour&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message + &lt;span style="color:#0086d2">&amp;#34; !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Déclaration d&amp;#39;une variable message dans le programme principal&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = DireBonjour4();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="variables-globales" >Variables globales
&lt;span>
&lt;a href="#variables-globales">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Visibles dans tous les sous-programmes si elles sont déclarées avant.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Bonjour&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour5()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message + &lt;span style="color:#0086d2">&amp;#34; !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour5()); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="masquage-dune-variable-globale-par-une-variable-locale" >Masquage d&amp;rsquo;une variable globale par une variable locale
&lt;span>
&lt;a href="#masquage-dune-variable-globale-par-une-variable-locale">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La déclaration locale masque la déclaration globale dans le corps du sous-programme.&lt;/li>
&lt;li>Pas d&amp;rsquo;erreur de compilation.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Bonjour&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour6()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La variable locale message masque la variable globale du même nom&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Hello&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message + &lt;span style="color:#0086d2">&amp;#34; !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(message); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour6()); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="variables-locales-vs-variables-globales" >Variables locales Vs variables globales
&lt;span>
&lt;a href="#variables-locales-vs-variables-globales">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>On favorise l&amp;rsquo;utilisation de variables locales pour :
&lt;ul>
&lt;li>concevoir les sous-programmes comme des entités autonomes et réutilisables ;&lt;/li>
&lt;li>limiter le risque d&amp;rsquo;&lt;strong>effet de bord&lt;/strong> (modification inattendue d&amp;rsquo;une variable globale dans un sous-programme).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>De manière générale, on essaie de :
&lt;ul>
&lt;li>déclarer les variables au plus près de leur utilisation ;&lt;/li>
&lt;li>limiter au strict nécessaire la portée des variables.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="passage-de-paramètres" >Passage de paramètres
&lt;span>
&lt;a href="#passage-de-param%c3%a8tres">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Paramètre = information dont le sous-programme a besoin pour jouer son rôle.&lt;/li>
&lt;li>Leur liste (types + noms) est définie juste après le nom du sous-programme.&lt;/li>
&lt;li>La &lt;strong>signature&lt;/strong> d&amp;rsquo;une fonction se compose de son nom et de la liste de ses paramètres.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DireBonjour7(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> prenom)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">$&amp;#34;Bonjour, {prenom} !&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour7(&lt;span style="color:#0086d2">&amp;#34;Alex&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour, Alex !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="paramètres-vs-arguments" >Paramètres Vs arguments
&lt;span>
&lt;a href="#param%c3%a8tres-vs-arguments">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La valeur de ses paramètres est fournie au moment de chaque appel du sous-programme.&lt;/li>
&lt;li>Si nécessaires, des conversion de type implicites sont parfois effectués.&lt;/li>
&lt;li>On appelle &lt;strong>argument&lt;/strong> (ou parfois &lt;em>paramètre effectif&lt;/em>) la valeur donnée à un paramètre lors d&amp;rsquo;un appel.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ici l&amp;#39;argument est &amp;#34;Alex&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour7(&lt;span style="color:#0086d2">&amp;#34;Alex&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour, Alex !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ici l&amp;#39;argument est &amp;#34;Marco&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(DireBonjour7(&lt;span style="color:#0086d2">&amp;#34;Marco&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bonjour, Marco !&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="paramètres-positionnels" >Paramètres positionnels
&lt;span>
&lt;a href="#param%c3%a8tres-positionnels">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les arguments doivent être compatibles en nombre et en type avec les paramètres.&lt;/li>
&lt;li>Comme dans d&amp;rsquo;autres langages, il est possible de préciser les noms des arguments afin de s&amp;rsquo;affranchir de l&amp;rsquo;ordre utilisé dans la définition du sous-programme.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Presenter(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> prenom, &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> age)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Tu es {prenom} et tu as {age} ans&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter(&lt;span style="color:#0086d2">&amp;#34;Garance&amp;#34;&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">14&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es Garance et tu as 14 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter(&lt;span style="color:#0086d2">&amp;#34;Gaëlle&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : pas de valeur pour le paramètre age&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter(&lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;Prosper&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : types des arguments incompatibles avec ceux des paramètres&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter(age: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>, prenom: &lt;span style="color:#0086d2">&amp;#34;Prosper&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es Prosper et tu as 10 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="valeurs-par-défaut" >Valeurs par défaut
&lt;span>
&lt;a href="#valeurs-par-d%c3%a9faut">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Comme d&amp;rsquo;autres langages, C# permet de définir des valeurs par défaut pour les paramètres non définis lors d&amp;rsquo;un appel.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Presenter2(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> prenom = &lt;span style="color:#0086d2">&amp;#34;inconnu&amp;#34;&lt;/span>, &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> age = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Tu es {prenom} et tu as {age} ans&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter2(&lt;span style="color:#0086d2">&amp;#34;Garance&amp;#34;&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">14&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es Garance et tu as 14 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter2(&lt;span style="color:#0086d2">&amp;#34;Gaëlle&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es Gaëlle et tu as 0 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Presenter2(age: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Tu es inconnu et tu as 10 ans&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mode-de-passage-des-paramètres" >Mode de passage des paramètres
&lt;span>
&lt;a href="#mode-de-passage-des-param%c3%a8tres">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le mode par défaut en C# est le &lt;strong>passage par valeur&lt;/strong> : la valeur de chaque argument est copiée dans le paramètre correspondant.
&lt;ul>
&lt;li>Types valeur : valeur copiée de l’argument vers le paramètre =&amp;gt; zones mémoire distinctes.&lt;/li>
&lt;li>Types référence : référence copiée de l’argument vers le paramètre =&amp;gt; même zone mémoire.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Possibilité de modifier ce comportement avec les mots-clés &lt;code>ref&lt;/code> et &lt;code>out&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--affectation-entre-types-valeur" >Exemple : affectation entre types valeur
&lt;span>
&lt;a href="#exemple--affectation-entre-types-valeur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>int&lt;/code> est un type valeur : les valeurs sont directement stockées dans les variables.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre1 = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre2 = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre2 = nombre1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre1 = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(nombre1); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(nombre2); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>&lt;img src="images/value_types.png" alt="Dynamique de l&amp;rsquo;affectation entre entiers">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--affectation-entre-types-référence" >Exemple : affectation entre types référence
&lt;span>
&lt;a href="#exemple--affectation-entre-types-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>int[]&lt;/code> est un type référence : les variables stockent des &lt;em>références&lt;/em> ($\approx$ adresses mémoire) vers les valeurs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tab1 = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] { &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab2 = { &lt;span style="color:#0086f7;font-weight:bold">4&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">6&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tab2 = tab1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tab1[&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>] = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab1)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 0 2 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab2)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>&lt;img src="images/arrayaffectation.png" alt="Résultat de l&amp;rsquo;affectation entre tableaux">&lt;/p>
&lt;img class="fragment" src="images/omg.png">
&lt;hr>
&lt;p>&lt;img src="images/arrayaffectdynamic.png" alt="Dynamique de l&amp;rsquo;affectation entre tableaux">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--passage-dun-type-valeur-en-paramètre" >Exemple : passage d&amp;rsquo;un type valeur en paramètre
&lt;span>
&lt;a href="#exemple--passage-dun-type-valeur-en-param%c3%a8tre">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Augmenter(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> unNombre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Avant l&amp;#39;augmentation, unNombre = {unNombre}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unNombre++;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Après l&amp;#39;augmentation, unNombre = {unNombre}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Avant l&amp;#39;appel, nombre = {nombre}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Augmenter(nombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Après l&amp;#39;appel, nombre = {nombre}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>La valeur de l’argument (un nombre entier) est copiée dans le paramètre.&lt;/li>
&lt;li>Argument et paramètre correspondent à des zones mémoire différentes.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/value_types_parameter_passing_diagram.png" alt="Dynamique du passage d&amp;rsquo;un entier en paramètre">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--passage-dun-type-référence-en-paramètre" >Exemple : passage d&amp;rsquo;un type référence en paramètre
&lt;span>
&lt;a href="#exemple--passage-dun-type-r%c3%a9f%c3%a9rence-en-param%c3%a8tre">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> AugmenterTab(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] unTab)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Avant l&amp;#39;augmentation, unTab = {string.Join(&amp;#34;&lt;/span> &lt;span style="color:#0086d2">&amp;#34;, unTab)}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>; i &amp;lt; unTab.Length; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unTab[i]++;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Après l&amp;#39;augmentation, unTab = {string.Join(&amp;#34;&lt;/span> &lt;span style="color:#0086d2">&amp;#34;, unTab)}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab = { &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Avant l&amp;#39;appel, tab = {string.Join(&amp;#34;&lt;/span> &lt;span style="color:#0086d2">&amp;#34;, tab)}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 1 2 3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AugmenterTab(tab);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Après l&amp;#39;appel, tab = {string.Join(&amp;#34;&lt;/span> &lt;span style="color:#0086d2">&amp;#34;, tab)}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;ul>
&lt;li>La valeur de l’argument (une &lt;strong>référence&lt;/strong>) est copiée dans le paramètre.&lt;/li>
&lt;li>Argument et paramètre pointent vers la même zone mémoire.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/arrayparampassing.png" alt="Dynamique du passage en paramète d&amp;rsquo;un tableau">&lt;/p>
&lt;hr>
&lt;h3 id="passage-de-paramètres-par-référence" >Passage de paramètres par référence
&lt;span>
&lt;a href="#passage-de-param%c3%a8tres-par-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Associé à un paramètre dans la signature d&amp;rsquo;un sous-programme, le mot-clé &lt;code>ref&lt;/code> indique que ce paramètre est &lt;a href="https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/ref#passing-an-argument-by-reference">passé par référence&lt;/a>.&lt;/li>
&lt;li>Dans ce cas, argument et paramètre pointent vers la même zone mémoire.&lt;/li>
&lt;li>Le mot-clé &lt;code>ref&lt;/code> doit également être utilisé lors de l&amp;rsquo;appel du sous-programme.&lt;/li>
&lt;li>Le mot-clé &lt;code>out&lt;/code> est similaire à &lt;code>ref&lt;/code> mais n&amp;rsquo;oblige pas à initialiser la valeur de l&amp;rsquo;argument avant l&amp;rsquo;appel.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--passage-dun-type-valeur-par-référence" >Exemple : passage d&amp;rsquo;un type valeur par référence
&lt;span>
&lt;a href="#exemple--passage-dun-type-valeur-par-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Permuter(&lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a, &lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> temp = a;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a = b;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b = temp;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre1 = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre2 = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Permuter(&lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> nombre1, &lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> nombre2);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;{nombre1} {nombre2}&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--passage-dun-type-référence-par-référence" >Exemple : passage d&amp;rsquo;un type référence par référence
&lt;span>
&lt;a href="#exemple--passage-dun-type-r%c3%a9f%c3%a9rence-par-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> ResetTab(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] unTab)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unTab = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] { &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> ResetTabRef(&lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] unTab)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unTab = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] { &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab = { &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ResetTab(tab);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ResetTabRef(&lt;span style="color:#fb660a;font-weight:bold">ref&lt;/span> tab);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--passage-dun-type-valeur-par-référence-avec-out" >Exemple : passage d&amp;rsquo;un type valeur par référence avec out
&lt;span>
&lt;a href="#exemple--passage-dun-type-valeur-par-r%c3%a9f%c3%a9rence-avec-out">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Init(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Init2(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// NOK : le paramètre doit être modifié&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Init(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> nombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(nombre); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--passage-dun-type-référence-par-référence-avec-out" >Exemple : passage d&amp;rsquo;un type référence par référence avec out
&lt;span>
&lt;a href="#exemple--passage-dun-type-r%c3%a9f%c3%a9rence-par-r%c3%a9f%c3%a9rence-avec-out">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> InitTab(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] unTab)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unTab = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] { &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>[] tab;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>InitTab(&lt;span style="color:#fb660a;font-weight:bold">out&lt;/span> tab);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>.Join(&lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span>, tab)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>UML</title><link>https://www.bpesquet.fr/slides/uml/</link><pubDate>Mon, 12 Sep 2022 14:16:21 +0200</pubDate><guid>https://www.bpesquet.fr/slides/uml/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Introduction à UML&lt;/li>
&lt;li>Le diagramme de classes&lt;/li>
&lt;li>Principaux autres diagrammes&lt;/li>
&lt;li>UML en pratique&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="introduction-à-uml" >Introduction à UML
&lt;span>
&lt;a href="#introduction-%c3%a0-uml">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="quest-ce-quuml-" >Qu&amp;rsquo;est-ce qu&amp;rsquo;UML ?
&lt;span>
&lt;a href="#quest-ce-quuml-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>UML = &lt;em>Unified Modeling Language&lt;/em>.&lt;/li>
&lt;li>Langage unifié (multi-langages, multi-plateformes) pour la conception de logiciels orientés objet.&lt;/li>
&lt;li>Permet de modéliser les éléments d&amp;rsquo;un logiciel sous la forme de &lt;strong>diagrammes&lt;/strong> indépendants de toute technologie spécifique.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="histoire-duml" >Histoire d&amp;rsquo;UML
&lt;span>
&lt;a href="#histoire-duml">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les premières versions datent des années 1990, période où la POO s&amp;rsquo;impose comme le nouveau standard pour la création de logiciels.&lt;/li>
&lt;li>Ses &amp;ldquo;papas&amp;rdquo; sont &lt;a href="https://en.wikipedia.org/wiki/Grady_Booch">Grady Booch&lt;/a>, &lt;a href="https://en.wikipedia.org/wiki/James_Rumbaugh">James Rumbaugh&lt;/a> et &lt;a href="https://en.wikipedia.org/wiki/Ivar_Jacobson">Ivar Jacobson&lt;/a>, trois architectes logiciels reconnus de l&amp;rsquo;époque.&lt;/li>
&lt;li>La version la plus récente est la 2.5, normalisée en 2017.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://fr.wikipedia.org/wiki/UML_(informatique)">&lt;img src="images/1024px-OO-historie.jpg" alt="Historisque d&amp;rsquo;UML">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="rôle-duml" >Rôle d&amp;rsquo;UML
&lt;span>
&lt;a href="#r%c3%b4le-duml">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>UML est un langage de modélisation, pas une méthode.&lt;/li>
&lt;li>Boîte à outils dans laquelle le concepteur peut piocher pour représenter graphiquement certains aspects de son application (structure, comportement, cas d&amp;rsquo;usage, etc).&lt;/li>
&lt;li>Avantages :
&lt;ul>
&lt;li>indépendance vis-à-vis de toute implémentation spécifique ;&lt;/li>
&lt;li>universalité.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="liste-des-diagrammes-uml" >Liste des diagrammes UML
&lt;span>
&lt;a href="#liste-des-diagrammes-uml">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Chacun a son propre formalisme ainsi qu&amp;rsquo;une sémantique spécifique.&lt;/p>
&lt;p>&lt;img src="images/DiagrammesUML.png" alt="Diagramme des diagrammes UML">&lt;/p>
&lt;hr>
&lt;h3 id="place-duml-dans-le-processus-de-conception-logicielle" >Place d&amp;rsquo;UML dans le processus de conception logicielle
&lt;span>
&lt;a href="#place-duml-dans-le-processus-de-conception-logicielle">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Souvent utilisé pendant les phases initiales d&amp;rsquo;&lt;strong>analyse&lt;/strong> et de &lt;strong>conception&lt;/strong> :
&lt;ul>
&lt;li>Modélisation des concepts manipulés sous la forme d&amp;rsquo;objets en interaction ;&lt;/li>
&lt;li>Formalisation des scénarios d&amp;rsquo;utilisation ;&lt;/li>
&lt;li>Dynamique des interactions.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Les diagrammes créées constituent une forme de documentation précieuse pour la suite du projet (codage, maintenance, évolutions).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="le-diagramme-de-classes" >Le diagramme de classes
&lt;span>
&lt;a href="#le-diagramme-de-classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="rôle-du-diagramme-de-classes" >Rôle du diagramme de classes
&lt;span>
&lt;a href="#r%c3%b4le-du-diagramme-de-classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Diagramme structurel qui permet de modéliser un ensemble de classes ainsi que leurs interactions.&lt;/p>
&lt;p>&lt;img src="images/uml_analysis_example.png" alt="Extrait du livre &amp;ldquo;Applying UML and patterns&amp;rdquo;">&lt;/p>
&lt;hr>
&lt;h3 id="exemple-de-représentation-dune-classe" >Exemple de représentation d&amp;rsquo;une classe
&lt;span>
&lt;a href="#exemple-de-repr%c3%a9sentation-dune-classe">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>(Peut légèrement varier selon le logiciel UML utilisé)&lt;/p>
&lt;p>&lt;img src="images/uml_class.png" alt="Exemple de classe UML">&lt;/p>
&lt;hr>
&lt;h3 id="caractéristiques-dune-classe-dans-un-diagramme" >Caractéristiques d&amp;rsquo;une classe dans un diagramme
&lt;span>
&lt;a href="#caract%c3%a9ristiques-dune-classe-dans-un-diagramme">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Nom de la classe en caractères gras (en italique pour les classes abstraites).&lt;/li>
&lt;li>Un compartiment pour les attributs, un autre pour les opérations (méthodes).&lt;/li>
&lt;li>Symboles avant les membres = niveau d&amp;rsquo;accessibilité public (&lt;code>+&lt;/code>), privé (&lt;code>-&lt;/code>), protégé (&lt;code>#&lt;/code>).&lt;/li>
&lt;li>Paramètres et type de retour des méthodes sont parfois omis.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="association-entre-classes" >Association entre classes
&lt;span>
&lt;a href="#association-entre-classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Relation entre classes de type &amp;ldquo;&lt;strong>a un&lt;/strong>&amp;rdquo; ou &amp;ldquo;&lt;strong>a plusieurs&lt;/strong>&amp;rdquo;.
&lt;ul>
&lt;li>Un compte bancaire a un titulaire, un livre a plusieurs pages, etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Une association binaire est matérialisée en UML par un trait continu entre les deux classes enrichi d&amp;rsquo;informations sur la &lt;strong>navigabilité&lt;/strong> et les &lt;strong>multiplicités&lt;/strong> de l&amp;rsquo;association.&lt;/li>
&lt;li>Elle implique un lien (&lt;em>couplage&lt;/em>) entre les classes concernées.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="navigabilité-dune-association" >Navigabilité d&amp;rsquo;une association
&lt;span>
&lt;a href="#navigabilit%c3%a9-dune-association">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Possibilité de parcourir l&amp;rsquo;association, cad de passer de l&amp;rsquo;instance d&amp;rsquo;une classe aux instances de l&amp;rsquo;autre classe concernées par la relation.&lt;/li>
&lt;li>Matérialisée par une flèche si unidirectionnelle.&lt;/li>
&lt;li>Peut comporter le nom du membre de la classe impliqué dans la relation.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/Association.JPG" alt="Associations UML">&lt;/p>
&lt;hr>
&lt;h3 id="multiplicité-dune-association" >Multiplicité d&amp;rsquo;une association
&lt;span>
&lt;a href="#multiplicit%c3%a9-dune-association">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Située à une extrémité d&amp;rsquo;une association, elle indique &lt;em>à combien d&amp;rsquo;instances de la classe une instance de l&amp;rsquo;autre classe peut être associée&lt;/em>.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Multiplicité&lt;/th>
&lt;th>Signification&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>0..1&lt;/em>&lt;/td>
&lt;td>Zéro ou une&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>1&lt;/em>&lt;/td>
&lt;td>Une (valeur par défaut)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>*&lt;/em>&lt;/td>
&lt;td>De zéro à plusieurs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;em>1..*&lt;/em>&lt;/td>
&lt;td>De un à plusieurs&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="exemples-de-multiplicités" >Exemples de multiplicités
&lt;span>
&lt;a href="#exemples-de-multiplicit%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/uml_multiplicites.jpg" alt="Exemples de multiplicités">&lt;/p>
&lt;hr>
&lt;h3 id="traduction-en-code-de-lexemple-précédent" >Traduction en code de l&amp;rsquo;exemple précédent
&lt;span>
&lt;a href="#traduction-en-code-de-lexemple-pr%c3%a9c%c3%a9dent">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> CompteBancaire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Permet de naviguer l&amp;#39;association entre un compte et son client&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Multiplicité = 1 =&amp;gt; pas de liste, une seule instance de Client suffit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> Client titulaire;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> Client Titulaire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span> { &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> titulaire; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="agrégation" >Agrégation
&lt;span>
&lt;a href="#agr%c3%a9gation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Type particulier d&amp;rsquo;association qui modélise une relation de subordination entre classes.&lt;/li>
&lt;li>Indiqué par un losange vide du côté &amp;ldquo;tout&amp;rdquo; de la relation.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/uml_agregation.jpg" alt="Exemple d&amp;rsquo;agrégation UML">&lt;/p>
&lt;hr>
&lt;h3 id="composition" >Composition
&lt;span>
&lt;a href="#composition">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Type particulier d&amp;rsquo;association qui modélise une relation de type composant/composé dans laquelle les cycles de vie des éléments sont liés.&lt;/li>
&lt;li>La disparition du composé entraîne celle de tous ses composants.&lt;/li>
&lt;li>Indiqué par un losange plein du côté &amp;ldquo;composé&amp;rdquo; de la relation.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/uml_composition.jpg" alt="Exemple de composition UML">&lt;/p>
&lt;hr>
&lt;h3 id="héritage-entre-classes" >Héritage entre classes
&lt;span>
&lt;a href="#h%c3%a9ritage-entre-classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Relation entre classes de type &amp;ldquo;&lt;strong>est un&lt;/strong>&amp;rdquo;.&lt;/li>
&lt;li>Représentée en UML par une flêche pleine allant de la classe dérivée (fille) vers la classe parente (classe mère ou superclasse).&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/uml_heritage.png" alt="Exemple d&amp;rsquo;héritage UML">&lt;/p>
&lt;hr>
&lt;h3 id="exemple-récapitulatif" >Exemple récapitulatif
&lt;span>
&lt;a href="#exemple-r%c3%a9capitulatif">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/uml_recap.png" alt="Exemple de diagramme de classes">&lt;/p>
&lt;hr>
&lt;h2 id="principaux-autres-diagrammes" >Principaux autres diagrammes
&lt;span>
&lt;a href="#principaux-autres-diagrammes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="diagramme-de-séquences" >Diagramme de séquence(s)
&lt;span>
&lt;a href="#diagramme-de-s%c3%a9quences">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Représente les interactions entre différents éléments (objets) selon un ordre chronologique.&lt;/li>
&lt;li>Les acteurs dialoguent à l&amp;rsquo;aide de messages.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/uml_diag_seq.svg" alt="Exemple de diagramme de séquence">&lt;/p>
&lt;hr>
&lt;h3 id="diagramme-de-cas-dutilisation" >Diagramme de cas d&amp;rsquo;utilisation
&lt;span>
&lt;a href="#diagramme-de-cas-dutilisation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Représente un scénario d&amp;rsquo;utilisation du système.&lt;/p>
&lt;p>&lt;img src="images/UML_use_case_example1-750x731.png" alt="Exemple de diagramme de cas d&amp;rsquo;utilisation">&lt;/p>
&lt;hr>
&lt;h3 id="diagramme-détats-transitions" >Diagramme d&amp;rsquo;états-transitions
&lt;span>
&lt;a href="#diagramme-d%c3%a9tats-transitions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Décrit le comportement d&amp;rsquo;un élément du système à l&amp;rsquo;aide d&amp;rsquo;un automate à états finis.&lt;/p>
&lt;p>&lt;img src="images/uml_diag_et.svg" alt="Exemple de diagramme d&amp;rsquo;états-transitions">&lt;/p>
&lt;hr>
&lt;h2 id="uml-en-pratique" >UML en pratique
&lt;span>
&lt;a href="#uml-en-pratique">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="ecosystème-logiciel" >Ecosystème logiciel
&lt;span>
&lt;a href="#ecosyst%c3%a8me-logiciel">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>UML est un standard depuis 25 ans.&lt;/li>
&lt;li>De très nombreux outils de développement logiciel offrent la possibilité de créer des diagrammes UML.&lt;/li>
&lt;li>Certains IDE (environnements de développement intégrés) permettent de générer du code à partir de diagrammes existants, voire l&amp;rsquo;inverse (rétroconception).&lt;/li>
&lt;li>Exemple de service gratuit en ligne : &lt;a href="https://app.diagrams.net/">diagrams.net&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="uml-serait-il-dépassé-" >UML serait-il dépassé ?
&lt;span>
&lt;a href="#uml-serait-il-d%c3%a9pass%c3%a9-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&amp;ldquo;Has UML Died Without Anyone Noticing?&amp;rdquo; (&lt;a href="https://garba.org/posts/2021/uml/">blog post&lt;/a>, &lt;a href="https://news.ycombinator.com/item?id=26934577">Hacker News discussion&lt;/a>)&lt;/li>
&lt;li>Comme langage universel permettant la génération directe d&amp;rsquo;applications à partir de diagrammes les modélisant, UML a échoué.&lt;/li>
&lt;li>Le travail itératif en mode agile a supplanté l&amp;rsquo;analyse métier exhaustive qui avait auparavant lieu au début des projets logiciels.&lt;/li>
&lt;li>Certains diagrammes restent utiles et très employés.&lt;/li>
&lt;/ul></description></item><item><title>JavaScript pour le web</title><link>https://www.bpesquet.fr/slides/javascript-web/</link><pubDate>Wed, 02 Feb 2022 11:09:39 +0100</pubDate><guid>https://www.bpesquet.fr/slides/javascript-web/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Le DOM&lt;/li>
&lt;li>Navigation dans le DOM&lt;/li>
&lt;li>Modification de la structure&lt;/li>
&lt;li>Gestion des évènements&lt;/li>
&lt;li>Manipulation des formulaires&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="le-dom" >Le DOM
&lt;span>
&lt;a href="#le-dom">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="exemple-de-page-web" >Exemple de page web
&lt;span>
&lt;a href="#exemple-de-page-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0007;background-color:#0f140f;font-weight:bold;font-style:italic">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">meta&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">charset&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;utf-8&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">title&lt;/span>&amp;gt;My web page&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h1&lt;/span>&amp;gt;My web page&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;Hello! My name&amp;#39;s Baptiste.&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> I live in the great city of
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">href&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;https://en.wikipedia.org/wiki/Bordeaux&amp;#34;&lt;/span>&amp;gt;Bordeaux&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-document-object-model-dom" >Le Document Object Model (DOM)
&lt;span>
&lt;a href="#le-document-object-model-dom">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Description de la structure d&amp;rsquo;une page sous forme d&amp;rsquo;une arborescence de &lt;strong>noeuds&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="images/chapter13-02.png" alt="DOM example">&lt;/p>
&lt;hr>
&lt;h3 id="types-de-noeuds" >Types de noeuds
&lt;span>
&lt;a href="#types-de-noeuds">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Eléments&lt;/strong> : noeuds structurants pouvant contenir des fils. Correspondent aux balises HTML comme &lt;code>&amp;lt;body&amp;gt;&lt;/code>, &lt;code>&amp;lt;p&amp;gt;&lt;/code>, etc.&lt;/li>
&lt;li>&lt;strong>Texte&lt;/strong> : noeuds contenant uniquement du texte.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="accès-au-dom-avec-javascript" >Accès au DOM avec JavaScript
&lt;span>
&lt;a href="#acc%c3%a8s-au-dom-avec-javascript">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Quand le code JavaScript s&amp;rsquo;exécute dans le contexte d&amp;rsquo;une page web, la variable &lt;code>document&lt;/code> permet d&amp;rsquo;accéder à la racine du DOM.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> h = document.head; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès à l&amp;#39;en-tête de la page
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> b = document.body; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès au corps de la page
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La propriété &lt;code>nodeType&lt;/code> permet de récupérer le type d&amp;rsquo;un noeud.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (document.body.nodeType === document.ELEMENT_NODE)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="navigation-dans-le-dom" >Navigation dans le DOM
&lt;span>
&lt;a href="#navigation-dans-le-dom">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="enfants-et-parent-dun-noeud" >Enfants et parent d&amp;rsquo;un noeud
&lt;span>
&lt;a href="#enfants-et-parent-dun-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La propriété &lt;code>childNodes&lt;/code> permet d&amp;rsquo;accéder aux enfants d&amp;rsquo;un noeud du DOM sous la forme d&amp;rsquo;une collection ordonnée.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Affiche les noeuds fils du corps de la page
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.body.childNodes.forEach((node) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(node);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A l&amp;rsquo;inverse, la propriété &lt;code>parentNode&lt;/code> permet de remonter au noeud parent.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.body.childNodes[&lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>].parentNode; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès au noeud &amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="sélection-par-type-de-balise" >Sélection par type de balise
&lt;span>
&lt;a href="#s%c3%a9lection-par-type-de-balise">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La méthode &lt;code>getElementsByTagName()&lt;/code> renvoie la liste des noeuds correspond à une balise HTML.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Liste des noeuds h2
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> titleElements = document.getElementsByTagName(&lt;span style="color:#0086d2">&amp;#34;h2&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="sélection-par-classe" >Sélection par classe
&lt;span>
&lt;a href="#s%c3%a9lection-par-classe">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La méthode &lt;code>getElementsByClassName()&lt;/code> renvoie la liste des noeuds possédant une certaine classe CSS.&lt;/p>
&lt;p>Comme toutes les méthodes de sélection, elle renvoie une liste de noeuds qui doit être convertie en tableau (par exemple avec &lt;code>Array.from()&lt;/code>) avant de pouvoir être parcourue.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> existingElements = Array.from(document.getElementsByClassName(&lt;span style="color:#0086d2">&amp;#34;exists&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>existingElements.forEach((element) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(element);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="sélection-par-identifiant" >Sélection par identifiant
&lt;span>
&lt;a href="#s%c3%a9lection-par-identifiant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La méthode &lt;code>getElementById()&lt;/code> renvoie le noeud possédant l&amp;rsquo;identifiant CSS spécifié, ou &lt;code>null&lt;/code> si aucun noeud n&amp;rsquo;est trouvé.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Affiche le noeud identifié par &amp;#34;new&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(document.getElementById(&lt;span style="color:#0086d2">&amp;#34;new&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="sélection-par-sélecteur-css" >Sélection par sélecteur CSS
&lt;span>
&lt;a href="#s%c3%a9lection-par-s%c3%a9lecteur-css">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les méthodes &lt;code>querySelectorAll()&lt;/code> et &lt;code>querySelector()&lt;/code> permettent de rechercher des éléments en utilisant un &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors">sélecteur CSS&lt;/a>. La première renvoie une liste, la seconde le premier noeud résultat.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Tous les noeuds paragraphes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.querySelectorAll(&lt;span style="color:#0086d2">&amp;#34;p&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Tous les noeuds paragraphes descendants du noeud identifié par &amp;#34;content&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.querySelectorAll(&lt;span style="color:#0086d2">&amp;#34;#content p&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Tous les noeuds de classe &amp;#34;exists&amp;#34; fils du noeud identifié par &amp;#34;ancient&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.querySelectorAll(&lt;span style="color:#0086d2">&amp;#34;#ancient &amp;gt; .exists&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Le premier noeud paragraphe
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.querySelector(&lt;span style="color:#0086d2">&amp;#34;p&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="méthodes-de-sélection" >Méthodes de sélection
&lt;span>
&lt;a href="#m%c3%a9thodes-de-s%c3%a9lection">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Noeuds cibles&lt;/th>
&lt;th>Méthode&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Plusieurs, par balise HTML&lt;/td>
&lt;td>&lt;code>getElementsByTagName()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Plusieurs, par classe&lt;/td>
&lt;td>&lt;code>getElementsByClassName()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Plusieurs&lt;/td>
&lt;td>&lt;code>querySelectorAll()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Un seul, par identifiant&lt;/td>
&lt;td>&lt;code>getElementById()&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Le premier&lt;/td>
&lt;td>&lt;code>querySelector()&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="contenu-dun-noeud" >Contenu d&amp;rsquo;un noeud
&lt;span>
&lt;a href="#contenu-dun-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La propriété &lt;code>innerHTML&lt;/code> renvoie le contenu HTML d&amp;rsquo;un noeud du DOM sous forme d&amp;rsquo;une chaîne de caractères.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;content&amp;#34;&lt;/span>).innerHTML;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La propriété &lt;code>textContent&lt;/code> renvoie le contenu textuel d&amp;rsquo;un noeud du DOM (sans les balises HTML) sous forme d&amp;rsquo;une chaîne de caractères.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;content&amp;#34;&lt;/span>).textContent;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="attributs-dun-noeud" >Attributs d&amp;rsquo;un noeud
&lt;span>
&lt;a href="#attributs-dun-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les méthodes &lt;code>getAttribute()&lt;/code> et &lt;code>hasAttribute()&lt;/code> permettent de consulter les attributs d&amp;rsquo;un noeud du DOM.&lt;/p>
&lt;p>Certains attributs comme &lt;code>id&lt;/code>, &lt;code>href&lt;/code> ou &lt;code>value&lt;/code> peuvent être accédés directement.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.querySelector(&lt;span style="color:#0086d2">&amp;#34;a&amp;#34;&lt;/span>).getAttribute(&lt;span style="color:#0086d2">&amp;#34;href&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Cible du premier noeud &amp;lt;a&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.querySelector(&lt;span style="color:#0086d2">&amp;#34;a&amp;#34;&lt;/span>).href; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Idem
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.querySelector(&lt;span style="color:#0086d2">&amp;#34;ul&amp;#34;&lt;/span>).id; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Identifiant du premier noeud &amp;lt;a&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (document.querySelector(&lt;span style="color:#0086d2">&amp;#34;a&amp;#34;&lt;/span>).hasAttribute(&lt;span style="color:#0086d2">&amp;#34;target&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">//...
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="classes-dun-noeud" >Classes d&amp;rsquo;un noeud
&lt;span>
&lt;a href="#classes-dun-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La propriété &lt;code>classList&lt;/code> permet d&amp;rsquo;accéder à la liste des classes CSS d&amp;rsquo;un noeud.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Liste des classes du noeud identifié par &amp;#34;ancient&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> classes = document.getElementById(&lt;span style="color:#0086d2">&amp;#34;ancient&amp;#34;&lt;/span>).classList
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(classes.length); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Nombre de classes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (document.getElementById(&lt;span style="color:#0086d2">&amp;#34;ancient&amp;#34;&lt;/span>).classList.contains(&lt;span style="color:#0086d2">&amp;#34;wonders&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="modification-de-la-structure" >Modification de la structure
&lt;span>
&lt;a href="#modification-de-la-structure">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="modification-dun-noeud" >Modification d&amp;rsquo;un noeud
&lt;span>
&lt;a href="#modification-dun-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les propriétés &lt;code>innerHTML&lt;/code>, &lt;code>textContent&lt;/code> et &lt;code>classList&lt;/code> ainsi que la méthode &lt;code>setAttribute()&lt;/code> peuvent permettre de mettre à jour un noeud existant.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/// Suppression du contenu (y compris les éventuels fils)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;languages&amp;#34;&lt;/span>).innerHTML = &lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ajout d&amp;#39;une chaîne au texte
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.querySelector(&lt;span style="color:#0086d2">&amp;#34;h3&amp;#34;&lt;/span>).textContent += &lt;span style="color:#0086d2">&amp;#34; and sons&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> titleElement = document.querySelector(&lt;span style="color:#0086d2">&amp;#34;h3&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>titleElement.classList.remove(&lt;span style="color:#0086d2">&amp;#34;beginning&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Suppression d&amp;#39;une classe
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>titleElement.classList.add(&lt;span style="color:#0086d2">&amp;#34;title&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ajout d&amp;#39;une classe
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Mise à jour de l&amp;#39;identifiant (deux solutions possibles)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.querySelector(&lt;span style="color:#0086d2">&amp;#34;h3&amp;#34;&lt;/span>).setAttribute(&lt;span style="color:#0086d2">&amp;#34;id&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;title&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>document.querySelector(&lt;span style="color:#0086d2">&amp;#34;h3&amp;#34;&lt;/span>).id = &lt;span style="color:#0086d2">&amp;#34;title&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="ajout-dun-nouveau-noeud" >Ajout d&amp;rsquo;un nouveau noeud
&lt;span>
&lt;a href="#ajout-dun-nouveau-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Il s&amp;rsquo;effectue en 3 étapes :&lt;/p>
&lt;ol>
&lt;li>Création du nouveau noeud&lt;/li>
&lt;li>Définition de ses attributs&lt;/li>
&lt;li>Insertion du noeud dans le DOM&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> pythonElement = document.createElement(&lt;span style="color:#0086d2">&amp;#34;li&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pythonElement.id = &lt;span style="color:#0086d2">&amp;#34;python&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pythonElement.textContent = &lt;span style="color:#0086d2">&amp;#34;Python&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;languages&amp;#34;&lt;/span>).appendChild(pythonElement);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="création-du-noeud" >Création du noeud
&lt;span>
&lt;a href="#cr%c3%a9ation-du-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La méthode &lt;code>createElement()&lt;/code> prend en paramètre un type de balise HTML et renvoie un noeud.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Création d&amp;#39;un noeud élément de liste
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> pythonElement = document.createElement(&lt;span style="color:#0086d2">&amp;#34;li&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="définition-des-attributs-du-noeud" >Définition des attributs du noeud
&lt;span>
&lt;a href="#d%c3%a9finition-des-attributs-du-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les propriétés permettant de modifier un noeud (&lt;code>textContent&lt;/code>, &lt;code>classList&lt;/code>, etc) permettent de définir les valeurs des attributs du noeud créé.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>pythonElement.id = &lt;span style="color:#0086d2">&amp;#34;python&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pythonElement.textContent = &lt;span style="color:#0086d2">&amp;#34;Python&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="insertion-du-noeud-dans-le-dom" >Insertion du noeud dans le DOM
&lt;span>
&lt;a href="#insertion-du-noeud-dans-le-dom">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La solution la plus courante est d&amp;rsquo;utiliser la méthode &lt;code>appendChild()&lt;/code> sur un noeud existant. Elle ajoute le nouveau noeud à la fin de la liste de ses fils.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;languages&amp;#34;&lt;/span>).appendChild(pythonElement);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>On peut également utiliser &lt;code>insertBefore()&lt;/code> pour ajouter le nouveau noeud avant un noeud fils spécifié.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .getElementById(&lt;span style="color:#0086d2">&amp;#34;languages&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .insertBefore(pythonElement, document.getElementById(&lt;span style="color:#0086d2">&amp;#34;php&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="remplacement-ou-suppression-dun-noeud" >Remplacement ou suppression d&amp;rsquo;un noeud
&lt;span>
&lt;a href="#remplacement-ou-suppression-dun-noeud">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La méthode &lt;code>replaceChild()&lt;/code> permet de remplacer un noeud par un autre.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .getElementById(&lt;span style="color:#0086d2">&amp;#34;languages&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .replaceChild(pythonElement, document.getElementById(&lt;span style="color:#0086d2">&amp;#34;perl&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>La méthode &lt;code>removeChild()&lt;/code> permet de supprimer un noeud existant.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .getElementById(&lt;span style="color:#0086d2">&amp;#34;languages&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .removeChild(document.getElementById(&lt;span style="color:#0086d2">&amp;#34;lisp&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="gestion-du-style" >Gestion du style
&lt;span>
&lt;a href="#gestion-du-style">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La propriété &lt;code>style&lt;/code> permet d&amp;rsquo;accéder à l&amp;rsquo;attribut &lt;code>style&lt;/code> du noeud, composé de propriétés CSS (&lt;code>color&lt;/code>, &lt;code>fontFamily&lt;/code>, etc) qu&amp;rsquo;il est possible d&amp;rsquo;exploiter.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> paragraphElement = document.querySelector(&lt;span style="color:#0086d2">&amp;#34;p&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>paragraphElement.style.color = &lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>paragraphElement.style.fontFamily = &lt;span style="color:#0086d2">&amp;#34;Arial&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>paragraphElement.style.backgroundColor = &lt;span style="color:#0086d2">&amp;#34;black&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En cas d&amp;rsquo;utilisation d&amp;rsquo;une feuile de style CSS, il faut utiliser la fonction &lt;code>getComputedStyle()&lt;/code> pour accéder à l&amp;rsquo;intégralité des styles d&amp;rsquo;un noeud.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> paragraphStyle = getComputedStyle(document.getElementById(&lt;span style="color:#0086d2">&amp;#34;para&amp;#34;&lt;/span>));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(paragraphStyle.fontStyle);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(paragraphStyle.color);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="gestion-des-évènements" >Gestion des évènements
&lt;span>
&lt;a href="#gestion-des-%c3%a9v%c3%a8nements">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="principe-de-fonctionnement" >Principe de fonctionnement
&lt;span>
&lt;a href="#principe-de-fonctionnement">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Un &lt;strong>gestionnaire d&amp;rsquo;évènement&lt;/strong> est une fonction JavaScript qui va d&amp;rsquo;exécuter lorsqu&amp;rsquo;un évènement apparaît : clic sur un bouton, soumission d&amp;rsquo;un formulaire, survol d&amp;rsquo;une zone avec la souris, etc.&lt;/p>
&lt;p>L&amp;rsquo;ajout de gestionnaires d&amp;rsquo;évènement va améliorer l&amp;rsquo;interactivité de la page web.&lt;/p>
&lt;p>Cette manière d&amp;rsquo;écrire du code est appelée &lt;strong>programmation évènementielle&lt;/strong> : l&amp;rsquo;ordre d&amp;rsquo;exécution des instructions n&amp;rsquo;est plus prédéfini, mais dépend des actions de l&amp;rsquo;utilisateur.&lt;/p>
&lt;hr>
&lt;h3 id="exemple-de-gestionnaire-dévènement" >Exemple de gestionnaire d&amp;rsquo;évènement
&lt;span>
&lt;a href="#exemple-de-gestionnaire-d%c3%a9v%c3%a8nement">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;évènement intercepté est passé en paramètre de la fonction gestionnaire sous la forme d&amp;rsquo;un objet souvent nommé &lt;code>e&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">button&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;myButton&amp;#34;&lt;/span>&amp;gt;Cliquez-moi !&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> showMessage = (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#0086d2">`Type d&amp;#39;évènement : &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>e.type&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">, cible: &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>e.target&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Affiche une pop-up
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> alert(&lt;span style="color:#0086d2">&amp;#34;Hello!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès au bouton
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> buttonElement = document.getElementById(&lt;span style="color:#0086d2">&amp;#34;myButton&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Gestion du clic via la fonction showMessage()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>buttonElement.addEventListener(&lt;span style="color:#0086d2">&amp;#34;click&amp;#34;&lt;/span>, showMessage);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="evènements-utilisables" >Evènements utilisables
&lt;span>
&lt;a href="#ev%c3%a8nements-utilisables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>JavaScript permet d&amp;rsquo;exploiter de nombreux évènements sur la page : &lt;code>click&lt;/code>, &lt;code>keypress&lt;/code>, &lt;code>mousedown&lt;/code>, &lt;code>load&lt;/code>, etc.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.addEventListener(&lt;span style="color:#0086d2">&amp;#34;keypress&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0086d2">`Vous avez appuyé sur la touche &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>String.fromCharCode(e.charCode)&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;window&amp;#34; représente la fenêtre du navigateur affichant la page
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>window.addEventListener(&lt;span style="color:#0086d2">&amp;#34;load&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#0086d2">&amp;#34;Page web chargée !&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Affiche un message de confirmation de fermeture
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>window.addEventListener(&lt;span style="color:#0086d2">&amp;#34;beforeunload&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;Voulez-vous vraiment quitter ?&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.returnValue = message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="propagation-des-évènements" >Propagation des évènements
&lt;span>
&lt;a href="#propagation-des-%c3%a9v%c3%a8nements">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Un évènement qui apparaît au niveau d&amp;rsquo;un noeud se propage vers ses noeuds parents, jusqu&amp;rsquo;à arriver à la racine du DOM.&lt;/p>
&lt;p>Appelée sur un objet évènement, la méthode &lt;code>stopPropagation()&lt;/code> permet d&amp;rsquo;interrompre sa propagation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;propa&amp;#34;&lt;/span>).addEventListener(&lt;span style="color:#0086d2">&amp;#34;click&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Interrompt la propagation de cet évènement
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> e.stopPropagation();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="comportement-par-défaut" >Comportement par défaut
&lt;span>
&lt;a href="#comportement-par-d%c3%a9faut">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>De nombreux évènements déclenchent des comportements par défaut : clic sur un lien web, clic droit sur la page, etc. Appelée sur un objet évènement, la méthode &lt;code>preventDefault()&lt;/code> annule ce comportement.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Du temps à perdre ? &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;forbidden&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">href&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;https://9gag.com/&amp;#34;&lt;/span>&amp;gt;cliquez ici&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;forbidden&amp;#34;&lt;/span>).addEventListener(&lt;span style="color:#0086d2">&amp;#34;click&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alert(&lt;span style="color:#0086d2">&amp;#34;Pas une bonne idée&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Annule l&amp;#39;ouverture du lien
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> e.preventDefault();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="manipulation-des-formulaires" >Manipulation des formulaires
&lt;span>
&lt;a href="#manipulation-des-formulaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="exemple-de-formulaire" >Exemple de formulaire
&lt;span>
&lt;a href="#exemple-de-formulaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h1&lt;/span>&amp;gt;Formulaire d&amp;#39;inscription&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;username&amp;#34;&lt;/span>&amp;gt;Nom d&amp;#39;utilisateur&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;username&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">required&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;usernameHelp&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;password&amp;#34;&lt;/span>&amp;gt;Mot de passe&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;password&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">required&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;passwordHelp&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;nationality&amp;#34;&lt;/span>&amp;gt;Nationalité&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">select&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;nationality&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;nationality&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">option&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;US&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">selected&lt;/span>&amp;gt;Américaine&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">option&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">option&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;FR&amp;#34;&lt;/span>&amp;gt;Française&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">option&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">option&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ES&amp;#34;&lt;/span>&amp;gt;Espagnole&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">option&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">option&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;XX&amp;#34;&lt;/span>&amp;gt;Autre&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">option&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">select&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Envoyer&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;reset&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Annuler&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="gestion-du-focus" >Gestion du focus
&lt;span>
&lt;a href="#gestion-du-focus">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les évènements &lt;code>focus&lt;/code> et &lt;code>blur&lt;/code> permettent d&amp;rsquo;ajouter du comportement lorsqu&amp;rsquo;un champ du formulaire reçoit ou perd le focus.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> usernameElement = document.getElementById(&lt;span style="color:#0086d2">&amp;#34;username&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ajoute le texte d&amp;#39;aide quand le champ reçoit le focus
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>usernameElement.addEventListener(&lt;span style="color:#0086d2">&amp;#34;focus&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> document.getElementById(&lt;span style="color:#0086d2">&amp;#34;usernameHelp&amp;#34;&lt;/span>).textContent =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0086d2">&amp;#34;Ajoutez votre nom d&amp;#39;utilisateur&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Vide la zone d&amp;#39;aide quand le champ perd le focus
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>usernameElement.addEventListener(&lt;span style="color:#0086d2">&amp;#34;blur&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> document.getElementById(&lt;span style="color:#0086d2">&amp;#34;usernameHelp&amp;#34;&lt;/span>).textContent = &lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="choix-dans-une-liste-déroulante" >Choix dans une liste déroulante
&lt;span>
&lt;a href="#choix-dans-une-liste-d%c3%a9roulante">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;évènement &lt;code>change&lt;/code> sur une liste déroulante permet de gérer le changement de sélection par l&amp;rsquo;utilisateur.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;nationality&amp;#34;&lt;/span>).addEventListener(&lt;span style="color:#0086d2">&amp;#34;change&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#0086d2">&amp;#34;Code de nationalité : &amp;#34;&lt;/span> + e.target.value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Les boutions radio et les cases à cocher fonctionnent sur le même principe.&lt;/p>
&lt;hr>
&lt;h3 id="validation-pendant-la-saisie" >Validation pendant la saisie
&lt;span>
&lt;a href="#validation-pendant-la-saisie">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;évènement &lt;code>input&lt;/code> permet de déclencher l&amp;rsquo;exécution de code à chaque modification du texte saisi dans un champ.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Affiche un texte d&amp;#39;aide qui dépend de la longueur du mot de passe saisi
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>document.getElementById(&lt;span style="color:#0086d2">&amp;#34;password&amp;#34;&lt;/span>).addEventListener(&lt;span style="color:#0086d2">&amp;#34;input&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> password = e.target.value; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Texte saisi dans le champ
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> helpText = &lt;span style="color:#0086d2">&amp;#34;Trop court&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> messageColor = &lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (password.length &amp;gt;= &lt;span style="color:#0086f7;font-weight:bold">8&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> helpText = &lt;span style="color:#0086d2">&amp;#34;OK&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> messageColor = &lt;span style="color:#0086d2">&amp;#34;green&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> passwordHelpElement = document.getElementById(&lt;span style="color:#0086d2">&amp;#34;passwordHelp&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> passwordHelpElement.textContent = helpText;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> passwordHelpElement.style.color = messageColor;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="validation-après-soumission" >Validation après soumission
&lt;span>
&lt;a href="#validation-apr%c3%a8s-soumission">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Le noeud correspond à un formulaire dispose d&amp;rsquo;une propriété &lt;code>elements&lt;/code> qui permet d&amp;rsquo;accéder aux champs par leur nom.&lt;/p>
&lt;p>La gestion de l&amp;rsquo;évènement &lt;code>submit&lt;/code> permet de réagir à la soumission du formulaire par l&amp;rsquo;utilisateur.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>document.querySelector(&lt;span style="color:#0086d2">&amp;#34;form&amp;#34;&lt;/span>).addEventListener(&lt;span style="color:#0086d2">&amp;#34;submit&amp;#34;&lt;/span>, (e) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> e.preventDefault(); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Annule l&amp;#39;envoi du formulaire au serveur web
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Récupération des informations saisies par l&amp;#39;utilisateur
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> username = e.target.elements.username.value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> password = e.target.elements.password.value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> nationalityCode = e.target.elements.nationality.value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ... (Vérification éventuelles)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Git &amp; Github</title><link>https://www.bpesquet.fr/slides/git-github/</link><pubDate>Tue, 23 Nov 2021 19:01:29 +0100</pubDate><guid>https://www.bpesquet.fr/slides/git-github/</guid><description>&lt;h2 id="summary" >Summary
&lt;span>
&lt;a href="#summary">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Introduction to software version control&lt;/li>
&lt;li>Git fundamentals&lt;/li>
&lt;li>Collaborating with Git&lt;/li>
&lt;li>Git from the command line&lt;/li>
&lt;li>GitHub&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="introduction-to-software-version-control" >Introduction to software version control
&lt;span>
&lt;a href="#introduction-to-software-version-control">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="the-need-for-source-code-management" >The need for source code management
&lt;span>
&lt;a href="#the-need-for-source-code-management">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Source code is the core of any software project.&lt;/li>
&lt;li>These projects have a long lifespan, with numerous releases containing new functionalities and bug fixes.&lt;/li>
&lt;li>Throughout this lifespan, the development team needs a way to work in parallel while sharing a common code base.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="manual-source-code-management" >Manual source code management
&lt;span>
&lt;a href="#manual-source-code-management">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Relies on shared places (local or cloud-based) where snapshots of the code base are regularly pushed by developers.&lt;/li>
&lt;li>Highly impractical: no individual history of files, no release management, no handling of conflicts (simultaneous updates of a file)&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="version-control-systems" >Version Control Systems
&lt;span>
&lt;a href="#version-control-systems">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dedicated source code management tools, often called &lt;strong>Version Control Systems&lt;/strong>, offer developers the ability to:&lt;/p>
&lt;ul>
&lt;li>share and update a common code base;&lt;/li>
&lt;li>work on new features and fixes without breaking current versions;&lt;/li>
&lt;li>track who did what;&lt;/li>
&lt;li>handle conflicts;&lt;/li>
&lt;li>and more!&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="centralized-vcs" >Centralized VCS
&lt;span>
&lt;a href="#centralized-vcs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Uses only one repository, accessed by developers in a client/server way.&lt;/li>
&lt;li>Repo administration (security, backups&amp;hellip;) is easy.&lt;/li>
&lt;li>Synchronization is impossible in a disconnected scenario.&lt;/li>
&lt;li>Examples: CVS, SVN, ClearCase.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/scm_centralized.png" alt="Centralized SCM">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="decentralized-vcs" >Decentralized VCS
&lt;span>
&lt;a href="#decentralized-vcs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Each developer has its own code repository, including history and all other metadata.&lt;/li>
&lt;li>Repositories are frequently synchronized in a peer-to-peer way.&lt;/li>
&lt;li>Disconnected workflows become possible.&lt;/li>
&lt;li>Examples: Git, Mercurial.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/scm_decentralized.png" alt="Decentralized SCM">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="git-fundamentals" >Git fundamentals
&lt;span>
&lt;a href="#git-fundamentals">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="git-in-a-nutshell" >Git in a nutshell
&lt;span>
&lt;a href="#git-in-a-nutshell">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Free and open source DVCS published in 2005 to manage the Linux kernel source code.&lt;/li>
&lt;li>Has become the standard tool for versioning software.&lt;/li>
&lt;li>Can handle any text-based project: knowledge bases, books, etc.&lt;/li>
&lt;li>Designed as a command line tool.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://git-scm.com/">&lt;img src="images/git-logo.png" alt="Git logo">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="git-is-not-that-hard" >Git is not (that) hard
&lt;span>
&lt;a href="#git-is-not-that-hard">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/git-spongebob.jpg" alt="Git Bob">&lt;/p>
&lt;hr>
&lt;h3 id="the-git-repository" >The Git repository
&lt;span>
&lt;a href="#the-git-repository">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Storage place for all versioning data: source code, history, versions, remote addresses&amp;hellip;&lt;/li>
&lt;li>Corresponds physically to a &lt;code>.git/&lt;/code> subdirectory in the project folder, with a &lt;a href="https://git-scm.com/docs/gitrepository-layout">complex internal structure&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/git-structure.png" alt=".git/ directory structure">&lt;/p>
&lt;hr>
&lt;h3 id="the-gitignore-file" >The .gitignore file
&lt;span>
&lt;a href="#the-gitignore-file">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Some project files don&amp;rsquo;t need to be versioned:
&lt;ul>
&lt;li>generation output;&lt;/li>
&lt;li>local settings;&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Added in the root folder, the &lt;code>.gitignore&lt;/code> file defines files and folders excluded from the repository.&lt;/li>
&lt;li>&lt;a href="https://github.com/github/gitignore">This repository&lt;/a> contains standard &lt;code>.gitignore&lt;/code> files for many environments: Python, .NET, JavaScript&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="the-git-workflow" >The Git workflow
&lt;span>
&lt;a href="#the-git-workflow">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ol>
&lt;li>Update files in project folder, aka &lt;em>working directory&lt;/em>.&lt;/li>
&lt;li>Add files to index, aka &lt;em>staging area&lt;/em>.&lt;/li>
&lt;li>Commit indexed files into the current branch, aka &lt;em>HEAD&lt;/em>.&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="images/git-workflow.png" alt="Git workflow">&lt;/p>
&lt;hr>
&lt;h3 id="branches" >Branches
&lt;span>
&lt;a href="#branches">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Branches allow parallel work in isolated contexts, for:&lt;/p>
&lt;ul>
&lt;li>new features;&lt;/li>
&lt;li>bug fixes;&lt;/li>
&lt;li>experimentations;&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/git-branches.png" alt="Git branches">&lt;/p>
&lt;hr>
&lt;h3 id="working-with-branches" >Working with branches
&lt;span>
&lt;a href="#working-with-branches">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Only one branch can be active at a time.&lt;/li>
&lt;li>The content of a branch can be &lt;em>merged&lt;/em> into another. Once merged, a temporary branch should be destroyed.&lt;/li>
&lt;li>The default branch is named &lt;code>master&lt;/code> (sometimes renamed &lt;code>main&lt;/code>). In general, it is considered the &amp;ldquo;production&amp;rdquo; branch and must be kept stable: commits or merges on this branch must not introduce generation errors or regressions.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="head" >HEAD
&lt;span>
&lt;a href="#head">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;em>HEAD&lt;/em> is an alias to the most recent commit of the active branch.&lt;/p>
&lt;p>&lt;a href="https://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting">&lt;img src="images/git-head.png" alt="Git HEAD">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="under-the-hood" >Under the hood
&lt;span>
&lt;a href="#under-the-hood">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Git uses the &lt;a href="https://en.wikipedia.org/wiki/SHA-1">SHA-1&lt;/a> hash of content to create references to commits.&lt;/li>
&lt;li>A commit object stores the metadata about a commit, such as the parent, the author, timestamps and references to the file tree of this commit.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="git-lfs" >Git LFS
&lt;span>
&lt;a href="#git-lfs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://git-lfs.github.com/">Large File System&lt;/a>: Git extension for versioning large files.&lt;/li>
&lt;li>The files live on an external server. Only references to them are stored in the Git repository.&lt;/li>
&lt;li>Usage examples: audio and graphical assets, datasets&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="collaborating-with-git" >Collaborating with Git
&lt;span>
&lt;a href="#collaborating-with-git">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="collaboration-workflow" >Collaboration workflow
&lt;span>
&lt;a href="#collaboration-workflow">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Developers work locally, regularly commiting their code into their local repo.&lt;/li>
&lt;li>Repos are kept in sync through specific commands.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/git-sync-repos.png" alt="Syncing Git repos">&lt;/p>
&lt;hr>
&lt;h3 id="remote-repositories" >Remote repositories
&lt;span>
&lt;a href="#remote-repositories">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Git repos that are hosted somewhere on the Internet or local network.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Can be:&lt;/p>
&lt;ul>
&lt;li>&lt;em>cloned&lt;/em> to create a local copy;&lt;/li>
&lt;li>&lt;em>fetched&lt;/em> to obtain remote updates, that can be &lt;em>merged&lt;/em> into a local branch thereafter;&lt;/li>
&lt;li>&lt;em>pushed to&lt;/em> to send local updates.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Identified by a &lt;strong>remote alias&lt;/strong> (named &lt;em>origin&lt;/em> after cloning a repo).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="remote-git-workflow" >Remote Git workflow
&lt;span>
&lt;a href="#remote-git-workflow">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/git_workflow.png" alt="Remote Git workflow">&lt;/p>
&lt;hr>
&lt;h3 id="pulling-changes" >Pulling changes
&lt;span>
&lt;a href="#pulling-changes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Pulling = fetching &amp;amp; merging.&lt;/li>
&lt;li>Creates a new &lt;em>merge commit&lt;/em>.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://www.atlassian.com/git/tutorials/syncing/git-pull">&lt;img src="images/git-pulling.png" alt="Git pulling example">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="conflicts" >Conflicts
&lt;span>
&lt;a href="#conflicts">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Simultaneous file updates on different machines can result in &lt;em>conflicts&lt;/em> during repos syncing.&lt;/li>
&lt;li>Git can resolve some of them by automerging files&amp;hellip; But not all!&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/human-request.jpg" alt="I request your assistance">&lt;/p>
&lt;hr>
&lt;h3 id="manual-conflict-management" >Manual conflict management
&lt;span>
&lt;a href="#manual-conflict-management">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Typically, the second developer trying to push his/her updates receives a &amp;ldquo;non fast-forward&amp;rdquo; error.&lt;/li>
&lt;li>He/she has to &lt;em>pull&lt;/em> remote updates first.&lt;/li>
&lt;li>Files Git cannot automerge contain &lt;a href="https://wincent.com/wiki/Understanding_Git_conflict_markers">conflict markers&lt;/a>. A manual merging is needed before commiting and pushing again.&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code class="language-git" data-lang="git">&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
# My Git project
=======
# My git project
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; c1129dfbbe585fc94978be38625b5ae7f63474bf
&lt;/code>&lt;/pre>&lt;hr>
&lt;h2 id="git-from-the-command-line" >Git from the command line
&lt;span>
&lt;a href="#git-from-the-command-line">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="configuration" >Configuration
&lt;span>
&lt;a href="#configuration">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Command&lt;/th>
&lt;th>Role&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git config --global user.email &amp;quot;{email}&amp;quot;&lt;/code>&lt;/td>
&lt;td>Set user email&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git config --global user.name &amp;quot;{firstname lastname}&amp;quot;&lt;/code>&lt;/td>
&lt;td>Set user name&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="setup" >Setup
&lt;span>
&lt;a href="#setup">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Command&lt;/th>
&lt;th>Role&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git init&lt;/code>&lt;/td>
&lt;td>Create an empty repository in the current folder&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git clone {url}&lt;/code>&lt;/td>
&lt;td>Clone an existing repository located at &lt;code>{url}&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="working-locally" >Working locally
&lt;span>
&lt;a href="#working-locally">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Command&lt;/th>
&lt;th>Role&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git status&lt;/code>&lt;/td>
&lt;td>Show status of working directory and index&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git add {file}&lt;/code>&lt;/td>
&lt;td>Add &lt;code>{file}&lt;/code> to index&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git add -A&lt;/code>&lt;/td>
&lt;td>Add all new or modified files to index&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git commit -m &amp;quot;{message}&amp;quot;&lt;/code>&lt;/td>
&lt;td>Commit indexed files to current branch&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git log&lt;/code>&lt;/td>
&lt;td>Show commit history&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="managing-branches" >Managing branches
&lt;span>
&lt;a href="#managing-branches">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Command&lt;/th>
&lt;th>Role&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git branch&lt;/code>&lt;/td>
&lt;td>List existing branches&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git branch {branch}&lt;/code>&lt;/td>
&lt;td>Create a new branch named &lt;code>{branch}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git checkout {branch}&lt;/code>&lt;/td>
&lt;td>Switch to &lt;code>{branch}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git merge {branch}&lt;/code>&lt;/td>
&lt;td>Merge &lt;code>{branch}&lt;/code> commits into the current one&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git branch -d {branch}&lt;/code>&lt;/td>
&lt;td>Delete &lt;code>{branch}&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="undoing-things" >Undoing things
&lt;span>
&lt;a href="#undoing-things">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Command&lt;/th>
&lt;th>Role&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git checkout {file}&lt;/code>&lt;/td>
&lt;td>Overwrite &lt;code>{file}&lt;/code> with latest committed version&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git reset {file}&lt;/code>&lt;/td>
&lt;td>Remove &lt;code>{file}&lt;/code> from index&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git reset&lt;/code>&lt;/td>
&lt;td>Empty index&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git reset --hard HEAD~{n}&lt;/code>&lt;/td>
&lt;td>Return to &lt;code>{n}&lt;/code>-to-last commit, losing all updates&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>(More details and options &lt;a href="https://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting">here&lt;/a> and &lt;a href="https://stackoverflow.com/a/6866485">here&lt;/a>)&lt;/p>
&lt;hr>
&lt;h3 id="collaborating" >Collaborating
&lt;span>
&lt;a href="#collaborating">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Command&lt;/th>
&lt;th>Role&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>git remote add {alias} {url}&lt;/code>&lt;/td>
&lt;td>Add a remote repository&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git remote -v&lt;/code>&lt;/td>
&lt;td>List remote repositories&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git pull {alias} {branch}&lt;/code>&lt;/td>
&lt;td>Fetch &amp;amp; merge remote commits into &lt;code>{branch}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>git push {alias} {branch}&lt;/code>&lt;/td>
&lt;td>Push &lt;code>{branch}&lt;/code> commits to a remote repo&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="additional-resources" >Additional resources
&lt;span>
&lt;a href="#additional-resources">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://www.atlassian.com/git/tutorials/what-is-version-control">What is version control?&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://rogerdudler.github.io/git-guide/">Git - the simple guide&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://learngitbranching.js.org">Learn Git branching&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/mikeizbicki/ucr-cs100/blob/2015winter/textbook/cheatsheets/git-cheatsheet.md">Git cheat sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://education.github.com/git-cheat-sheet-education.pdf">Another Git cheat sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ndpsoftware.com/git-cheatsheet.html">Yet another Git cheat sheet&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/git-game/git-game">The Git game&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ohshitgit.com/">Oh sh.t, Git!?!&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="github" >GitHub
&lt;span>
&lt;a href="#github">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="github-in-a-nutshell" >GitHub in a nutshell
&lt;span>
&lt;a href="#github-in-a-nutshell">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://github.com/">GitHub&lt;/a> is a code hosting platform for version control and collaboration.&lt;/li>
&lt;li>Its main purpose is the hosting of Git repositories.&lt;/li>
&lt;li>Launched in 2008, it has been acquired by Microsoft in 2018 for $7.5 billion.&lt;/li>
&lt;li>As of December 2021, it has approx. 73 million users worldwide.&lt;/li>
&lt;li>GitHub is the central hub for open source projects.&lt;/li>
&lt;li>Main alternatives are &lt;a href="https://bitbucket.org">BitBucket&lt;/a> and &lt;a href="https://about.gitlab.com/">GitLab&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="github-repo-example" >GitHub repo example
&lt;span>
&lt;a href="#github-repo-example">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/github-repo-example.png" alt="GitHub repo example">&lt;/p>
&lt;hr>
&lt;h3 id="the-shared-repository-model" >The shared repository model
&lt;span>
&lt;a href="#the-shared-repository-model">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>A GitHub repo centralizes team updates.&lt;/li>
&lt;li>Efficient for small teams and small-to-average-sized projects.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/github-shared-repo.png" alt="Shared repository model">&lt;/p>
&lt;hr>
&lt;h3 id="the-fork--pull-model" >The &amp;ldquo;fork &amp;amp; pull&amp;rdquo; model
&lt;span>
&lt;a href="#the-fork--pull-model">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Each developer &lt;em>forks&lt;/em> ($\approx$ clone on GitHub) the original repository.&lt;/li>
&lt;li>Updates are pushed to the forks, then proposed to the original repo through &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests">Pull Requests&lt;/a>.&lt;/li>
&lt;li>Efficient for large organizations or public projects.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/github-fork-pull.png" alt="Fork &amp;amp; pull model">&lt;/p>
&lt;hr>
&lt;h3 id="other-features-and-services" >Other features and services
&lt;span>
&lt;a href="#other-features-and-services">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/en/issues/tracking-your-work-with-issues/about-issues">Issues&lt;/a> are used to track ideas, feedback, tasks, or bugs.&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists">Gists&lt;/a> are single pieces of code that can be forked and cloned like repositories.&lt;/li>
&lt;li>&lt;a href="https://docs.github.com/en/issues/organizing-your-work-with-project-boards/managing-project-boards/about-project-boards">Project boards&lt;/a> offer a Kanban-like interface for organizing and prioritizing work.&lt;/li>
&lt;li>&lt;a href="https://github.com/features/codespaces">Codespaces&lt;/a> is a cloud-based development environment mimicking Visual Studio Code.&lt;/li>
&lt;li>&lt;a href="https://copilot.github.com/">Copilot&lt;/a> is an AI-based code suggestion service.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul></description></item><item><title>React Native</title><link>https://www.bpesquet.fr/slides/react-native/</link><pubDate>Wed, 27 Oct 2021 13:48:28 +0200</pubDate><guid>https://www.bpesquet.fr/slides/react-native/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Introduction&lt;/li>
&lt;li>Composants React Native&lt;/li>
&lt;li>Gestion de l&amp;rsquo;UI&lt;/li>
&lt;li>Gestion de l&amp;rsquo;état&lt;/li>
&lt;li>Applications multi-écrans&lt;/li>
&lt;li>Utilisation d&amp;rsquo;API web&lt;/li>
&lt;li>Persistance locale&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="introduction" >Introduction
&lt;span>
&lt;a href="#introduction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="lécosystème-mobile" >L&amp;rsquo;écosystème mobile
&lt;span>
&lt;a href="#l%c3%a9cosyst%c3%a8me-mobile">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Absence de monopole.&lt;/li>
&lt;li>Deux poids lourds : Android et iOS.&lt;/li>
&lt;li>Parts de marché stables depuis plusieurs années.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/smartphone_market_share_2016.jpg" alt="Smartphone platform market share">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/market-share-2015_2019.png" alt="Market share evolution 2015-2019">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/os-fragmentation_2018.jpg" alt="Mobile OS Fragmentation">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="développement-mobile-natif" >Développement mobile natif
&lt;span>
&lt;a href="#d%c3%a9veloppement-mobile-natif">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Création d&amp;rsquo;applications en utilisant la technologie prévue par le concepteur de l&amp;rsquo;OS.&lt;/p>
&lt;ul>
&lt;li>Android : Java&lt;/li>
&lt;li>IOS : Objective-C ou Swift&lt;/li>
&lt;/ul>
&lt;p class='fragment '
>
Ces technologies sont &lt;strong>incompatibles&lt;/strong>.
&lt;/p>
&lt;hr>
&lt;h3 id="avantages" >Avantages
&lt;span>
&lt;a href="#avantages">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Accès à l&amp;rsquo;intégralité des fonctionnalités matérielles et logicielles du terminal mobile.&lt;/li>
&lt;li>Performances optimales.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="inconvénient-majeur-" >Inconvénient (majeur !)
&lt;span>
&lt;a href="#inconv%c3%a9nient-majeur-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Nécessité de créer puis de faire évoluer une application pour chaque environnement.&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="solutions-hybrides" >Solutions hybrides
&lt;span>
&lt;a href="#solutions-hybrides">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Création d&amp;rsquo;applications mobiles compatibles avec plusieurs OS mobiles grâce à un framework dédié.&lt;/p>
&lt;p>Une application hybride est une application web qui s&amp;rsquo;exécute à l&amp;rsquo;intérieur d&amp;rsquo;un navigateur.&lt;/p>
&lt;p>Exemples : &lt;a href="https://cordova.apache.org">Apache Cordova&lt;/a>, &lt;a href="https://ionicframework.com">Ionic&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="avantages" >Avantages
&lt;span>
&lt;a href="#avantages">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Fonctionnalités et performances proches de celles d&amp;rsquo;une application native.&lt;/li>
&lt;li>Economies de ressources pour créer l&amp;rsquo;application.&lt;/li>
&lt;li>Une seule base de code : maintenance et évolution facilitées.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="inconvénients" >Inconvénients
&lt;span>
&lt;a href="#inconv%c3%a9nients">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Impossible d&amp;rsquo;accéder à certaines fonctionnalités matérielles ou logicielles spécifiques.&lt;/li>
&lt;li>&lt;em>Look&amp;rsquo;n&amp;rsquo;feel&lt;/em> non natif.&lt;/li>
&lt;li>Mauvaises performances dans certains scenarii.&lt;/li>
&lt;/ul>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="développement-natif-multi-plateformes" >Développement natif multi-plateformes
&lt;span>
&lt;a href="#d%c3%a9veloppement-natif-multi-plateformes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Création d&amp;rsquo;applications mobiles compatibles avec plusieurs OS mobiles grâce à un framework dédié.&lt;/p>
&lt;p>Le framework encapsule les véritables composants natifs de l&amp;rsquo;OS.&lt;/p>
&lt;p>Exemples : &lt;a href="https://facebook.github.io/react-native/">React Native&lt;/a>, &lt;a href="https://weexapp.com/">Weex&lt;/a>, &lt;a href="https://dotnet.microsoft.com/en-us/apps/xamarin">Xamarin&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="le-meilleur-des-deux-mondes-" >Le meilleur des deux mondes ?
&lt;span>
&lt;a href="#le-meilleur-des-deux-mondes-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Combine les avantages du natif (&lt;em>look&amp;rsquo;n&amp;rsquo;feel&lt;/em>, performances) et de l&amp;rsquo;hybride (une seule base de code).&lt;/p>
&lt;p>Limite potentielle : le support de l&amp;rsquo;OS dépend entièrement du framework.&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="react-native" >React Native
&lt;span>
&lt;a href="#react-native">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Framework créé par Facebook, open source depuis 2015.&lt;/p>
&lt;p>Déclinaison mobile du framework JavaScript &lt;a href="https://reactjs.org/">React&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://reactnative.dev/">&lt;img src="images/reactjs.png" alt="React logo">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="expo" >Expo
&lt;span>
&lt;a href="#expo">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Framework pour faciliter la création et le déploiement d&amp;rsquo;applications React Native.&lt;/p>
&lt;p>&lt;a href="https://expo.dev/">&lt;img src="images/expo_logo.png" alt="Expo logo">&lt;/a>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.expo.dev/workflow/expo-cli/">Expo CLI&lt;/a> : outil en ligne de commande pour le développement local.&lt;/li>
&lt;li>&lt;a href="https://expo.dev/expo-go">Expo Go&lt;/a> : application mobile à installer sur le terminal cible pour le déploiement.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="création-dune-application" >Création d&amp;rsquo;une application
&lt;span>
&lt;a href="#cr%c3%a9ation-dune-application">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install expo-cli globally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># (Node.js and Git are prerequisites)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm i -g expo-cli
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Create a new app named &amp;#34;appname&amp;#34; in its own subfolder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Created files are automatically versioned into a Git repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># The optional -t flag is used to select an Expo app template&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Run npx create-expo-app --template to see the list of available templates.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npx create-expo-app &amp;lt;appname&amp;gt; -t &amp;lt;expo-template&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Alternative: expo init &amp;lt;appname&amp;gt; -t &amp;lt;expo-template&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>Workflow &lt;em>managé&lt;/em> : projet entièrement géré par Expo (plus simple).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Workflow &lt;em>bare&lt;/em> : plus proche d&amp;rsquo;un projet React Native pur.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="déploiement-de-lapplication" >Déploiement de l&amp;rsquo;application
&lt;span>
&lt;a href="#d%c3%a9ploiement-de-lapplication">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd &amp;lt;appname&amp;gt; &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Move into project directory&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm start &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Or &amp;#39;expo start&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Ensuite, scan du QR Code depuis l&amp;rsquo;application Expo Go (Android) ou l&amp;rsquo;appareil photo du smartphone (iOS).&lt;/p>
&lt;p>&lt;img src="images/expo_qrcode.png" alt="Expo QR Code">&lt;/p>
&lt;hr>
&lt;h3 id="détails-sur-le-déploiement" >Détails sur le déploiement
&lt;span>
&lt;a href="#d%c3%a9tails-sur-le-d%c3%a9ploiement">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;application est hébergée sur un serveur web local.&lt;/li>
&lt;li>Expo s&amp;rsquo;y connecte pour la récupérer puis la lancer.&lt;/li>
&lt;li>Une interface web de gestion s&amp;rsquo;affiche.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/expo_management.png" alt="Expo Management">&lt;/p>
&lt;hr>
&lt;h3 id="rechargement-dynamique" >Rechargement dynamique
&lt;span>
&lt;a href="#rechargement-dynamique">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://openclassrooms.com/fr/courses/4902061-developpez-une-application-mobile-react-native/">&lt;img src="images/expo_reload.jpeg" alt="Live Reload">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="connexion-au-serveur-expo" >Connexion au serveur Expo
&lt;span>
&lt;a href="#connexion-au-serveur-expo">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;application mobile Expo Go doit accéder au serveur web de la machine de développement pour pouvoir lancer l&amp;rsquo;application RN.&lt;/p>
&lt;p>Il existe plusieurs modes de connexion :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>LAN&lt;/strong> : utilisation du réseau Wifi local. Peut poser problème dans certains environnements Wifi sécurisés.&lt;/li>
&lt;li>&lt;strong>Tunnel&lt;/strong> : création d&amp;rsquo;un tunnel avec &lt;a href="https://ngrok.com/">ngrok&lt;/a> pour accéder au serveur local via le web. Nécessite que le terminal mobile dispose d&amp;rsquo;un accès internet.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="utilisation-dun-émulateur" >Utilisation d&amp;rsquo;un émulateur
&lt;span>
&lt;a href="#utilisation-dun-%c3%a9mulateur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Alternative à l&amp;rsquo;emploi d&amp;rsquo;un terminal mobile pour tester l&amp;rsquo;application RN.&lt;/li>
&lt;li>Nécessite l&amp;rsquo;installation de &lt;a href="https://developer.apple.com/xcode/">XCode (iOS)&lt;/a> ou &lt;a href="https://developer.android.com/studio">Android Studio&lt;/a> sur le machine de développement.&lt;/li>
&lt;li>Documentation : &lt;a href="https://docs.expo.io/workflow/ios-simulator/">iOS&lt;/a> | &lt;a href="https://docs.expo.io/workflow/android-studio-emulator/">Android&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/expo-emulator.png" alt="Expo emulator">&lt;/p>
&lt;hr>
&lt;h3 id="contenu-du-répertoire-créé" >Contenu du répertoire créé
&lt;span>
&lt;a href="#contenu-du-r%c3%a9pertoire-cr%c3%a9%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/rn-app-structure.png" alt="Arborescence React Native">&lt;/p>
&lt;hr>
&lt;h3 id="le-fichier-de-configuration-appjson" >Le fichier de configuration app.json
&lt;span>
&lt;a href="#le-fichier-de-configuration-appjson">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;HelloReactNative&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;slug&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;HelloReactNative&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;orientation&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;portrait&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;icon&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;./assets/icon.png&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;userInterfaceStyle&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;light&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;splash&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;image&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;./assets/splash.png&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;resizeMode&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;contain&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;backgroundColor&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;#ffffff&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;updates&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;fallbackToCacheTimeout&amp;#34;&lt;/span>: &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;assetBundlePatterns&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0086d2">&amp;#34;**/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ios&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;supportsTablet&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;android&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;adaptiveIcon&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;foregroundImage&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;./assets/adaptive-icon.png&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;backgroundColor&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;#FFFFFF&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;web&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;favicon&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;./assets/favicon.png&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-fichier-packagejson" >Le fichier package.json
&lt;span>
&lt;a href="#le-fichier-packagejson">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;helloreactnative&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;main&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;node_modules/expo/AppEntry.js&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;start&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;android&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --android&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ios&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --ios&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;web&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --web&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;dependencies&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~47.0.9&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo-status-bar&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~1.4.2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;18.1.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react-native&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;0.70.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;devDependencies&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;@babel/core&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;^7.12.9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;private&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-fichier-principal-appjs" >Le fichier principal App.js
&lt;span>
&lt;a href="#le-fichier-principal-appjs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StatusBar } from &lt;span style="color:#0086d2">&amp;#34;expo-status-bar&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> App() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Open up App.js to start working on your app!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">StatusBar&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;auto&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backgroundColor: &lt;span style="color:#0086d2">&amp;#34;#fff&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="les-formats-jsx-et-tsx" >Les formats JSX et TSX
&lt;span>
&lt;a href="#les-formats-jsx-et-tsx">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Syntaxe introduite pour le framework web &lt;a href="https://reactjs.org/">React&lt;/a>.&lt;/li>
&lt;li>Permet de décrire une UI en intégrant balisage et logique applicative.&lt;/li>
&lt;li>Les accolades &lt;code>{...}&lt;/code> permettent d&amp;rsquo;inclure du code JavaScript dans le code JSX (&lt;a href="https://beta.reactjs.org/learn/javascript-in-jsx-with-curly-braces">plus de détails&lt;/a>).&lt;/li>
&lt;li>TSX : équivalent de JSX pour TypeScript.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// JSX for React (web)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> name = &lt;span style="color:#0086d2">&amp;#34;Clarisse Agbegnenou&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> element = &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;Hello, {name}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// JSX for React Native (mobile)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> name = &lt;span style="color:#0086d2">&amp;#34;Clarisse Agbegnenou&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> element = &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Hello, {name}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="composants-react-native" >Composants React Native
&lt;span>
&lt;a href="#composants-react-native">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-notion-de-composant" >La notion de composant
&lt;span>
&lt;a href="#la-notion-de-composant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Les &lt;strong>composants&lt;/strong> sont les blocs de base d&amp;rsquo;une application React (Native).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ils permettent de créer une UI sous forme &lt;strong>déclarative&lt;/strong> par assemblage de composants inclus les uns dans les autres.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Ils doivent comporter une fonction qui définit leur rendu visuel.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Le fichier principal &lt;code>App.js&lt;/code> d&amp;rsquo;une application RN doit exporter un composant par défaut.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="composants-fonctions" >Composants fonctions
&lt;span>
&lt;a href="#composants-fonctions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La valeur de retour de la fonction définit leur rendu.&lt;/li>
&lt;li>Syntaxe standard, la plus concise.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#39;react&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// HelloWorldApp is a function component
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HelloWorldApp = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ fontSize: &lt;span style="color:#0086f7;font-weight:bold">24&lt;/span> }}&amp;gt;Hello from a &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> component!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> HelloWorldApp;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="composants-classes" >Composants classes
&lt;span>
&lt;a href="#composants-classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La méthode obligatoire &lt;code>render()&lt;/code> définit leur rendu.&lt;/li>
&lt;li>Syntaxe à privilégier pour les composants les plus complexes.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { Component } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// HelloWorldApp is a class component
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloWorldApp &lt;span style="color:#fb660a;font-weight:bold">extends&lt;/span> Component {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> render() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ fontSize: &lt;span style="color:#0086f7;font-weight:bold">24&lt;/span> }}&amp;gt;Hello from a &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> component!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> HelloWorldApp;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="composants-de-base" >Composants de base
&lt;span>
&lt;a href="#composants-de-base">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Implémentés de manière native par RN sous Android et iOS afin d&amp;rsquo;obtenir un &lt;em>look&amp;rsquo;n&amp;rsquo;feel&lt;/em> et des performances optimaux.&lt;/p>
&lt;p>&lt;a href="https://reactnative.dev/docs/components-and-apis">&lt;img src="images/basic_components.png" alt="React Native core components">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="gestion-du-style" >Gestion du style
&lt;span>
&lt;a href="#gestion-du-style">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Propriété &lt;code>style&lt;/code> disponible pour les composants de base.&lt;/li>
&lt;li>Semblable à CSS avec nommage &lt;em>camelCase&lt;/em>.&lt;/li>
&lt;li>En ligne ou externalisé sous forme d&amp;rsquo;un objet créé par la fonction &lt;code>StyleSheet.create&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.red}&amp;gt;just red&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.bigblue}&amp;gt;just bigblue&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Using an array of styles: last element has precedence */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={[styles.bigblue, styles.red]}&amp;gt;bigblue, then red&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={[styles.red, styles.bigblue]}&amp;gt;red, then bigblue&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bigblue: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color: &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontWeight: &lt;span style="color:#0086d2">&amp;#34;bold&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontSize: &lt;span style="color:#0086f7;font-weight:bold">30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> red: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color: &lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="composants-personnalisés" >Composants personnalisés
&lt;span>
&lt;a href="#composants-personnalis%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Ils permettent de créer une application par assemblage de composants élémentaires.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Cat = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;I am a cat!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Welcome!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Cat&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Cat&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Cat&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="_props_-dun-composant" >&lt;em>Props&lt;/em> d&amp;rsquo;un composant
&lt;span>
&lt;a href="#_props_-dun-composant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Caractéristiques définies au moment de la création, modifiables uniquement par le composant parent.&lt;/li>
&lt;li>Objet composé de propriétés (paires nom/valeur).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// This component has two props: &amp;#34;name&amp;#34; and &amp;#34;age&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Cat = ({ name, age }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> I am {name} the {age} years old cat!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Welcome!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* We define the values of the props for each cat */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Cat&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Madchat&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">age&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;5&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Cat&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Félicette&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">age&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;3&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Cat&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Fritz&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">age&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;7&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="_props_-et-déstructuration" >&lt;em>Props&lt;/em> et déstructuration
&lt;span>
&lt;a href="#_props_-et-d%c3%a9structuration">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les &lt;em>props&lt;/em> peuvent être passées de deux manières équivalentes à un composant function.&lt;/li>
&lt;li>La seconde, plus concise et explicite, est un exemple de &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment">déstructuration d&amp;rsquo;objet&lt;/a>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Cat1 = (props) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> name = props.name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> age = props.age;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Cat2 = ({ name, age }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="les-hooks" >Les hooks
&lt;span>
&lt;a href="#les-hooks">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Introduits dans une version récente de React, les &lt;a href="https://reactjs.org/docs/hooks-overview.html">hooks&lt;/a> permettent d&amp;rsquo;écrire du code lié au cycle de vie des composants fonction.&lt;/li>
&lt;li>Exemple : le hook &lt;a href="https://reactjs.org/docs/hooks-state.html">useState&lt;/a> permet d&amp;rsquo;ajouter une variable d&amp;rsquo;état à un composant fonction.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [&amp;lt;getter&amp;gt;, &amp;lt;setter&amp;gt;] = useState(&amp;lt;initialValue&amp;gt;);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="etat-_state_-dun-composant" >Etat (&lt;em>state&lt;/em>) d&amp;rsquo;un composant
&lt;span>
&lt;a href="#etat-_state_-dun-composant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Etat interne (mémoire), susceptible de changer au cours du temps (&lt;em>mutable&lt;/em>).&lt;/li>
&lt;li>Sa modification entraine une mise à jour de l&amp;rsquo;affichage du composant.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { useState } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Button, Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Counter = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add a variable named &amp;#34;count&amp;#34; to the component state.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Its initial value is zero.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The setCount function is used to update its value.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [count, setCount] = useState(&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Adjacent JSX elements must be wrapped in an enclosing tag.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Fragments &amp;lt;&amp;gt; and &amp;lt;/&amp;gt; let you do that without using an unnecessary wrapping element like View.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &amp;lt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Click me!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Update the state variable
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> setCount(count + &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Show the current value of the state variable */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;You clicked {count} times&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Counter&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="cycle-de-vie-dun-composant" >Cycle de vie d&amp;rsquo;un composant
&lt;span>
&lt;a href="#cycle-de-vie-dun-composant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les composants RN suivent un cycle de vie bien défini composé d&amp;rsquo;étapes : &lt;strong>montage&lt;/strong>, &lt;strong>rendu&lt;/strong>, &lt;strong>mise à jour&lt;/strong>, &lt;strong>démontage&lt;/strong> et &lt;strong>suppression&lt;/strong>.&lt;/p>
&lt;p>&lt;a href="http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/">&lt;img src="images/react-lifecycle.png" alt="React lifecycle">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="gestion-de-lui" >Gestion de l&amp;rsquo;UI
&lt;span>
&lt;a href="#gestion-de-lui">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="gestion-des-dimensions" >Gestion des dimensions
&lt;span>
&lt;a href="#gestion-des-dimensions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Deux possibilités pour définir la taille des composants :&lt;/p>
&lt;ul>
&lt;li>Dimensions fixes&lt;/li>
&lt;li>Dimensions flexibles&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="dimensions-fixes" >Dimensions fixes
&lt;span>
&lt;a href="#dimensions-fixes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Utile pour les composants qui doivent toujours être affichés à la même taille.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ width: &lt;span style="color:#0086f7;font-weight:bold">50&lt;/span>, height: &lt;span style="color:#0086f7;font-weight:bold">50&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;powderblue&amp;#34;&lt;/span> }} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ width: &lt;span style="color:#0086f7;font-weight:bold">100&lt;/span>, height: &lt;span style="color:#0086f7;font-weight:bold">100&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;skyblue&amp;#34;&lt;/span> }} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ width: &lt;span style="color:#0086f7;font-weight:bold">150&lt;/span>, height: &lt;span style="color:#0086f7;font-weight:bold">150&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;steelblue&amp;#34;&lt;/span> }} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="dimensions-flexibles" >Dimensions flexibles
&lt;span>
&lt;a href="#dimensions-flexibles">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;code>flex:1&lt;/code> =&amp;gt; le composant prend tout l&amp;rsquo;espace disponible, partagé équitablement entre les autres composants d&amp;rsquo;un même parent.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Une valeur de &lt;code>flex&lt;/code> plus élevée donne plus d&amp;rsquo;espace à un composant par rapport aux autres.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Try removing the `flex: 1` on the parent View.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The parent will not have dimensions, so the children can&amp;#39;t expand.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// What if you add `height: 300` instead of `flex: 1`?
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span> }}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Try changing the flex values to see how children views share the screen space */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;powderblue&amp;#34;&lt;/span> }} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ flex: &lt;span style="color:#0086f7;font-weight:bold">2&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;skyblue&amp;#34;&lt;/span> }} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={{ flex: &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>, backgroundColor: &lt;span style="color:#0086d2">&amp;#34;steelblue&amp;#34;&lt;/span> }} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="positionnement-avec-flexbox" >Positionnement avec Flexbox
&lt;span>
&lt;a href="#positionnement-avec-flexbox">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Mode de mise en page pour les éléments situés à l&amp;rsquo;intérieur d&amp;rsquo;un conteneur.&lt;/li>
&lt;li>Objectif : répartir au mieux l&amp;rsquo;espace disponible.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/flexbox_terminology.png" alt="Flexbox terminology">&lt;/p>
&lt;hr>
&lt;h3 id="flexdirection--flux-des-éléments" >&lt;code>flexDirection&lt;/code> : flux des éléments
&lt;span>
&lt;a href="#flexdirection--flux-des-%c3%a9l%c3%a9ments">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>column&lt;/code> (par défaut), &lt;code>row&lt;/code>, &lt;code>column-reverse&lt;/code>, &lt;code>row-reverse&lt;/code>.&lt;/p>
&lt;p>&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">&lt;img src="images/flexbox_flex_direction.png" alt="Flex direction">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="justifycontent--axe-principal" >&lt;code>justifyContent&lt;/code> : axe principal
&lt;span>
&lt;a href="#justifycontent--axe-principal">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">&lt;img src="images/flexbox_justify_content.png" alt="Flexbox: justify content">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="alignitems--axe-secondaire" >&lt;code>alignItems&lt;/code> : axe secondaire
&lt;span>
&lt;a href="#alignitems--axe-secondaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">&lt;img src="images/flexbox_align_items.png" alt="Flexbox: align Items">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="flexbox-en-action" >Flexbox en action
&lt;span>
&lt;a href="#flexbox-en-action">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { View, StyleSheet } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Individual styles can be combined into an array */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Thus, common style properties can be factorized */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={[styles.box, styles.box1]} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={[styles.box, styles.box2]} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={[styles.box, styles.box3]} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Used to take into account the phone status bar at the top of the screen
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// marginTop: 48,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;space-around&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> box: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> width: &lt;span style="color:#0086f7;font-weight:bold">100&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> height: &lt;span style="color:#0086f7;font-weight:bold">100&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> box1: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backgroundColor: &lt;span style="color:#0086d2">&amp;#34;powderblue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> box2: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backgroundColor: &lt;span style="color:#0086d2">&amp;#34;skyblue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> box3: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backgroundColor: &lt;span style="color:#0086d2">&amp;#34;steelblue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="saisies-utilisateur" >Saisies utilisateur
&lt;span>
&lt;a href="#saisies-utilisateur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Le composant &lt;a href="https://reactnative.dev/docs/textinput">TextInput&lt;/a> permet la saisie de texte.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { useState } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View, TextInput } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add character count to state
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [charCount, setCharCount] = useState(&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TextInput&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">placeholder&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Enter some text&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onChangeText&lt;/span>={(text) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Update character count after input changes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> setCharCount(text.length);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Character count: {charCount}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontSize: &lt;span style="color:#0086f7;font-weight:bold">22&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="gestion-de-létat" >Gestion de l&amp;rsquo;état
&lt;span>
&lt;a href="#gestion-de-l%c3%a9tat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="rappels-sur-les-props" >Rappels sur les props
&lt;span>
&lt;a href="#rappels-sur-les-props">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Props&lt;/strong> = caractéristiques définies au moment de la création du composant.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Les props d&amp;rsquo;un composant sont modifiables uniquement par son composant parent.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="rappels-sur-létat" >Rappels sur l&amp;rsquo;état
&lt;span>
&lt;a href="#rappels-sur-l%c3%a9tat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Etat (&lt;em>state&lt;/em>)&lt;/strong> = ensemble des données susceptibles d&amp;rsquo;être modifiées pendant l&amp;rsquo;exécution de l&amp;rsquo;application.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Chaque composant fonction React Native possède un état interne, géré via le hook &lt;code>useState&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Toute modification de l&amp;rsquo;état déclenche un nouveau rendu du composant.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="problématique" >Problématique
&lt;span>
&lt;a href="#probl%c3%a9matique">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>La gestion locale de l&amp;rsquo;état devient insuffisante lorsqu&amp;rsquo;un composant doit &lt;strong>accéder à&lt;/strong> ou &lt;strong>modifier&lt;/strong> l&amp;rsquo;état d&amp;rsquo;un autre composant.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Nécessité de partager un &lt;strong>état commun&lt;/strong> entre certains composants.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="solution--_lifting-state-up_" >Solution : &lt;em>&amp;ldquo;lifting state up&amp;rdquo;&lt;/em>
&lt;span>
&lt;a href="#solution--_lifting-state-up_">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Remonter l&amp;rsquo;état au niveau du plus proche composant parent commun.&lt;/li>
&lt;li>Définir les actions de modification dans ce composant parent.&lt;/li>
&lt;li>Dans les composants enfants :
&lt;ul>
&lt;li>Remplacer l&amp;rsquo;état local par des propriétés définies par le parent.&lt;/li>
&lt;li>Remplacer les actions locales par des appels aux actions définies dans le parent.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://reactjs.org/docs/lifting-state-up.html">Lifting State Up (React)&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="exemple-de-remontée-de-létat" >Exemple de remontée de l&amp;rsquo;état
&lt;span>
&lt;a href="#exemple-de-remont%c3%a9e-de-l%c3%a9tat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-mobi/TempConverter">https://github.com/ensc-mobi/TempConverter&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/temp-converter.gif" alt="TempConverter demo">&lt;/p>
&lt;hr>
&lt;h3 id="mise-en-oeuvre" >Mise en oeuvre
&lt;span>
&lt;a href="#mise-en-oeuvre">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>L&amp;rsquo;état (température et échelle) commun aux deux composants de saisie est remonté dans &lt;code>App&lt;/code>, leur parent commun.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { useState } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, View, Text, TextInput } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Scale names used for display
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> scaleNames = { c: &lt;span style="color:#0086d2">&amp;#34;Celsius&amp;#34;&lt;/span>, f: &lt;span style="color:#0086d2">&amp;#34;Fahrenheit&amp;#34;&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Celsius/Fahrenheit conversion functions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> toCelsius(fahrenheit) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> ((fahrenheit - &lt;span style="color:#0086f7;font-weight:bold">32&lt;/span>) * &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>) / &lt;span style="color:#0086f7;font-weight:bold">9&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> toFahrenheit(celsius) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (celsius * &lt;span style="color:#0086f7;font-weight:bold">9&lt;/span>) / &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">32&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Component displaying if the water would boil or not, depending on the temperature
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// We choose the Celsius scale for easier comparison with the boiling temperature
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> BoilingResult = ({ tempCelsius }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> message = &lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (!Number.isNaN(tempCelsius)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tempCelsius &amp;gt;= &lt;span style="color:#0086f7;font-weight:bold">100&lt;/span> ? &lt;span style="color:#0086d2">&amp;#34;The water would boil&amp;#34;&lt;/span> : &lt;span style="color:#0086d2">&amp;#34;The water would not boil&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;{message}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Component for displaying and inputting a temperature in a specific scale
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> TemperatureInput = ({ value, scale, onChange }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accessing scaleNames properties through bracket notation
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> placeholder = &lt;span style="color:#0086d2">`Enter temperature in &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>scaleNames[scale]&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TextInput&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">placeholder&lt;/span>={placeholder}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onChangeText&lt;/span>={(text) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Call callback passed as component prop when input text changes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> onChange(text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>={value}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Convert a temperature using a given conversion function
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> tryConvert(temperature, convert) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> input = parseFloat(temperature);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (Number.isNaN(input)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Call the conversion function on input
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> output = convert(input);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Keep the output rounded to the third decimal place
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> rounded = Math.round(output * &lt;span style="color:#0086f7;font-weight:bold">1000&lt;/span>) / &lt;span style="color:#0086f7;font-weight:bold">1000&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> rounded.toString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Main component
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Common state is lifted here because this component is the closest parent of TemperatureInput components.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// We store only the most recently changed input with its scale.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Temperature is stored as a string to handle missing values.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [temperature, setTemperature] = useState(&lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [scale, setScale] = useState(&lt;span style="color:#0086d2">&amp;#34;c&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Compute temperatures in both scales
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> tempCelsius =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scale === &lt;span style="color:#0086d2">&amp;#34;f&amp;#34;&lt;/span> ? tryConvert(temperature, toCelsius) : temperature;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> tempFahrenheit =
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> scale === &lt;span style="color:#0086d2">&amp;#34;c&amp;#34;&lt;/span> ? tryConvert(temperature, toFahrenheit) : temperature;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Display and input in Celsius degrees */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TemperatureInput&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>={tempCelsius}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">scale&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;c&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onChange&lt;/span>={(newTemp) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setTemperature(newTemp);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setScale(&lt;span style="color:#0086d2">&amp;#34;c&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Display and input in Fahrenheit degrees */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TemperatureInput&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>={tempFahrenheit}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">scale&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;f&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onChange&lt;/span>={(newTemp) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setTemperature(newTemp);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setScale(&lt;span style="color:#0086d2">&amp;#34;f&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">BoilingResult&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">tempCelsius&lt;/span>={parseFloat(tempCelsius)} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontSize: &lt;span style="color:#0086f7;font-weight:bold">22&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="restructuration-du-projet" >Restructuration du projet
&lt;span>
&lt;a href="#restructuration-du-projet">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;code>components/&lt;/code> rassemble les définitions des composants élémentaires.&lt;/li>
&lt;li>Ils sont importés par le composant racine défini dans &lt;code>App.js&lt;/code>.&lt;/li>
&lt;li>&lt;code>utils/&lt;/code> et &lt;code>theme/&lt;/code> factorisent les fonctions de conversion et les styles React Native communs.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>MyApp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── components/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── BoilingResult.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── TemperatureInput.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── utils/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── temperatureUtils.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── theme/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── styles.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── App.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="définition-et-export-des-fonctions-de-conversion" >Définition et export des fonctions de conversion
&lt;span>
&lt;a href="#d%c3%a9finition-et-export-des-fonctions-de-conversion">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>utils/temperatureUtils.js&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Scale names used for display
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> scaleNames = { c: &lt;span style="color:#0086d2">&amp;#34;Celsius&amp;#34;&lt;/span>, f: &lt;span style="color:#0086d2">&amp;#34;Fahrenheit&amp;#34;&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Celsius/Fahrenheit conversion functions
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> toCelsius(fahrenheit) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> ((fahrenheit - &lt;span style="color:#0086f7;font-weight:bold">32&lt;/span>) * &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>) / &lt;span style="color:#0086f7;font-weight:bold">9&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> toFahrenheit(celsius) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (celsius * &lt;span style="color:#0086f7;font-weight:bold">9&lt;/span>) / &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span> + &lt;span style="color:#0086f7;font-weight:bold">32&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Convert a temperature using a given conversion function
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> tryConvert(temperature, convert) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> input = parseFloat(temperature);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (Number.isNaN(input)) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Call the conversion function on input
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> output = convert(input);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Keep the output rounded to the third decimal place:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> rounded = Math.round(output * &lt;span style="color:#0086f7;font-weight:bold">1000&lt;/span>) / &lt;span style="color:#0086f7;font-weight:bold">1000&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> rounded.toString();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="définition-et-export-du-composant-de-saisie-de-température" >Définition et export du composant de saisie de température
&lt;span>
&lt;a href="#d%c3%a9finition-et-export-du-composant-de-saisie-de-temp%c3%a9rature">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>components/TemperatureInput.js&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { TextInput } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { scaleNames } from &lt;span style="color:#0086d2">&amp;#34;../utils/temperatureUtils&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> styles from &lt;span style="color:#0086d2">&amp;#34;../theme/styles&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Component for displaying and inputting a temperature in a specific scale
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> TemperatureInput = ({ value, scale, onChange }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> TemperatureInput;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="définition-du-composant-racine" >Définition du composant racine
&lt;span>
&lt;a href="#d%c3%a9finition-du-composant-racine">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>App.js&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { useState } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> BoilingResult from &lt;span style="color:#0086d2">&amp;#34;./components/BoilingResult&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> TemperatureInput from &lt;span style="color:#0086d2">&amp;#34;./components/TemperatureInput&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { toCelsius, toFahrenheit, tryConvert } from &lt;span style="color:#0086d2">&amp;#34;./utils/temperatureUtils&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> styles from &lt;span style="color:#0086d2">&amp;#34;./theme/styles&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Main component
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="applications-multi-écrans" >Applications multi-écrans
&lt;span>
&lt;a href="#applications-multi-%c3%a9crans">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="react-navigation" >React Navigation
&lt;span>
&lt;a href="#react-navigation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Composant issu de la communauté des développeurs React Native.&lt;/li>
&lt;li>Devenu le standard pour les applications RN multi-vues.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://reactnavigation.org">&lt;img src="images/react_navigation_logo.png" alt="React Navigation logo">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="installation-de-react-navigation" >Installation de react-navigation
&lt;span>
&lt;a href="#installation-de-react-navigation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Utiliser &lt;code>npx expo install&lt;/code> au lieu de &lt;code>npm install&lt;/code> assure l&amp;rsquo;installation de versions compatibles avec celle d&amp;rsquo;Expo.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Core components and common dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install @react-navigation/native
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npx expo install react-native-screens react-native-safe-area-context
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># If StackNavigator is used&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install @react-navigation/native-stack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># If BottomTabNavigator is used&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install @react-navigation/bottom-tabs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--navigation-par-piles-_stacks_" >Exemple : navigation par piles (&lt;em>stacks&lt;/em>)
&lt;span>
&lt;a href="#exemple--navigation-par-piles-_stacks_">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-mobi/StackNavigatorDemo">https://github.com/ensc-mobi/StackNavigatorDemo&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/stack-navigator-demo.png" alt="StackNavigator demo">&lt;/p>
&lt;hr>
&lt;h3 id="navigationcontainer" >NavigationContainer
&lt;span>
&lt;a href="#navigationcontainer">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Composant racine nécessaire pour utiliser React Navigation.&lt;/li>
&lt;li>Ses descendants directs (composants enfants) sont appelés des &lt;strong>écrans&lt;/strong> (&lt;em>screens&lt;/em>).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;{&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Rest of your app code */&lt;/span>}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="stacknavigator" >StackNavigator
&lt;span>
&lt;a href="#stacknavigator">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Principe similaire au web : gestion d&amp;rsquo;une pile d&amp;rsquo;écrans avec possibilité de naviguer de l&amp;rsquo;un à l&amp;rsquo;autre.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, View, Text } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createNativeStackNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native-stack&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeScreen = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the home screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Stack = createNativeStackNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: { flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>, justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: { fontSize: &lt;span style="color:#0086f7;font-weight:bold">18&lt;/span>, paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="api-de-navigation" >API de navigation
&lt;span>
&lt;a href="#api-de-navigation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Passé comme &lt;em>prop&lt;/em> d&amp;rsquo;un composant écran, l&amp;rsquo;objet &lt;code>navigation&lt;/code> permet la gestion de la navigation:&lt;/p>
&lt;ul>
&lt;li>&lt;code>navigation.navigate(&amp;quot;RouteName&amp;quot;)&lt;/code> navigue vers un nouvel écran, sauf s&amp;rsquo;il est déjà l&amp;rsquo;écran actuel.&lt;/li>
&lt;li>&lt;code>navigation.push(&amp;quot;RouteName&amp;quot;)&lt;/code> navigue vers un nouvel écran même s&amp;rsquo;il est déjà l&amp;rsquo;écran actuel.&lt;/li>
&lt;li>&lt;code>navigation.goBack()&lt;/code> permet de revenir en arrière dans la navigation.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-navigation" >Exemple de navigation
&lt;span>
&lt;a href="#exemple-de-navigation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, View, Text, Button } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createNativeStackNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native-stack&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeScreen = ({ navigation }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the home screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Details&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span>)}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> DetailsScreen = ({ navigation }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the details screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Details... again&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.push(&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span>)}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go back&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.goBack()} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>)} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Stack = createNativeStackNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">initialRouteName&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={DetailsScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: { flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>, justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: { fontSize: &lt;span style="color:#0086f7;font-weight:bold">18&lt;/span>, paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="passage-de-paramètres-entre-écrans" >Passage de paramètres entre écrans
&lt;span>
&lt;a href="#passage-de-param%c3%a8tres-entre-%c3%a9crans">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>navigation.navigate&lt;/code> permet de transmettre des données d&amp;rsquo;un écran à l&amp;rsquo;autre sous la forme d&amp;rsquo;un objet JavaScript.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Navigate to &amp;#34;RouteName&amp;#34;, passing some parameters
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;RouteName&amp;#34;&lt;/span>, { &lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* params go here */&lt;/span> })
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>L&amp;rsquo;écran d&amp;rsquo;arrivée peut lire les paramètres grâce à la propriété &lt;code>params&lt;/code> du &lt;em>prop&lt;/em> &lt;code>route&lt;/code>.&lt;/p>
&lt;p>Ces paramètres sont équivalents à ceux d&amp;rsquo;une URL. Ils ne doivent pas contenir les données métiers de l&amp;rsquo;application (plutôt gérés via l&amp;rsquo;état).&lt;/p>
&lt;hr>
&lt;h3 id="exemple-de-passage-de-paramètres" >Exemple de passage de paramètres
&lt;span>
&lt;a href="#exemple-de-passage-de-param%c3%a8tres">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, View, Text, Button } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createNativeStackNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native-stack&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeScreen = ({ navigation }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the home screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Details&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Navigate to the Details route with 2 params
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> itemId: &lt;span style="color:#0086f7;font-weight:bold">86&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> otherParam: &lt;span style="color:#0086d2">&amp;#34;anything you want here&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> DetailsScreen = ({ navigation, route }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Get the params
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { itemId, otherParam } = route.params;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the details screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Convert params to JSON strings before display */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;itemId: {JSON.stringify(itemId)}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;otherParam: {JSON.stringify(otherParam)}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Details... again&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Navigate to Details again with one param
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> navigation.push(&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> itemId: Math.floor(Math.random() * &lt;span style="color:#0086f7;font-weight:bold">100&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go back&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.goBack()} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>)} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Stack = createNativeStackNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">initialRouteName&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={DetailsScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: { flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>, justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: { fontSize: &lt;span style="color:#0086f7;font-weight:bold">18&lt;/span>, paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="en-tête-des-écrans" >En-tête des écrans
&lt;span>
&lt;a href="#en-t%c3%aate-des-%c3%a9crans">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La &lt;em>prop&lt;/em> &lt;code>screenOptions&lt;/code> de &lt;code>StackNavigator&lt;/code> permet de configurer l&amp;rsquo;en-tête commun à tous les écrans. La couleur de la barre de statut du téléphone peut être harmonisée grâce au composant &lt;a href="https://reactnavigation.org/docs/status-bar/">StatusBar&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, View, Text, Button, StatusBar } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createNativeStackNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native-stack&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// [...]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Stack = createNativeStackNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">StatusBar&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">barStyle&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;light-content&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">backgroundColor&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;#f4511e&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">initialRouteName&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">screenOptions&lt;/span>={{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerStyle: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backgroundColor: &lt;span style="color:#0086d2">&amp;#34;#f4511e&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerTintColor: &lt;span style="color:#0086d2">&amp;#34;#fff&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerTitleStyle: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontWeight: &lt;span style="color:#0086d2">&amp;#34;bold&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Screen&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">options&lt;/span>={{ title: &lt;span style="color:#0086d2">&amp;#34;My home&amp;#34;&lt;/span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Stack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={DetailsScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Stack.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: { flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>, justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: { fontSize: &lt;span style="color:#0086f7;font-weight:bold">18&lt;/span>, paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="restructuration-du-projet-1" >Restructuration du projet
&lt;span>
&lt;a href="#restructuration-du-projet-1">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;code>screens/&lt;/code> stocke les composants définissant chaque écran de l&amp;rsquo;application.&lt;/li>
&lt;li>&lt;code>navigation/&lt;/code> stocke les composants qui organisent la navigation entre les écrans.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>MyApp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── screens/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── DetailsScreen.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── HomeScreen.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── navigation/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── RootStackNavigator.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── theme/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── colors.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── styles.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── App.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--navigation-par-onglets" >Exemple : navigation par onglets
&lt;span>
&lt;a href="#exemple--navigation-par-onglets">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-mobi/TabNavigatorDemo">https://github.com/ensc-mobi/TabNavigatorDemo&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/tab-navigator-demo.png" alt="BottomTabNavigator demo">&lt;/p>
&lt;hr>
&lt;h3 id="tabnavigator" >TabNavigator
&lt;span>
&lt;a href="#tabnavigator">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Affichage d&amp;rsquo;onglets en bas de l&amp;rsquo;écran.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> Ionicons from &lt;span style="color:#0086d2">&amp;#34;react-native-vector-icons/Ionicons&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createBottomTabNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/bottom-tabs&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeScreen = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;This is the home screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> SettingsScreen = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;This is the settings screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Tab = createBottomTabNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={SettingsScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: { flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>, alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="paramétrage-de-lapparence" >Paramétrage de l&amp;rsquo;apparence
&lt;span>
&lt;a href="#param%c3%a9trage-de-lapparence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Réalisé grâce à la &lt;em>prop&lt;/em> &lt;code>screenOptions&lt;/code> de &lt;code>TabNavigator&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View, Button, StatusBar } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> Ionicons from &lt;span style="color:#0086d2">&amp;#34;react-native-vector-icons/Ionicons&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createBottomTabNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/bottom-tabs&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// [...]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Tab = createBottomTabNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">StatusBar&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">barStyle&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;light-content&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">backgroundColor&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;#f4511e&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">screenOptions&lt;/span>={({ route }) =&amp;gt; ({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Icons will be different if the tab is focused
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> tabBarIcon: ({ focused, color, size }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> iconName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (route.name === &lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iconName = focused
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ? &lt;span style="color:#0086d2">&amp;#34;ios-information-circle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : &lt;span style="color:#0086d2">&amp;#34;ios-information-circle-outline&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (route.name === &lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iconName = focused ? &lt;span style="color:#0086d2">&amp;#34;ios-list&amp;#34;&lt;/span> : &lt;span style="color:#0086d2">&amp;#34;ios-list-outline&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// You can return any component that you like here!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Ionicons&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>={iconName} &lt;span style="color:#ff0086;font-weight:bold">size&lt;/span>={size} &lt;span style="color:#ff0086;font-weight:bold">color&lt;/span>={color} /&amp;gt;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tabBarActiveTintColor: &lt;span style="color:#0086d2">&amp;#34;tomato&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tabBarInactiveTintColor: &lt;span style="color:#0086d2">&amp;#34;gray&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerStyle: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backgroundColor: &lt;span style="color:#0086d2">&amp;#34;#f4511e&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerTintColor: &lt;span style="color:#0086d2">&amp;#34;#fff&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerTitleStyle: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontWeight: &lt;span style="color:#0086d2">&amp;#34;bold&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={SettingsScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: { flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>, alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: { fontSize: &lt;span style="color:#0086f7;font-weight:bold">18&lt;/span>, paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="navigation-entre-onglets" >Navigation entre onglets
&lt;span>
&lt;a href="#navigation-entre-onglets">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>API identique à la navigation entre les écrans d&amp;rsquo;un &lt;code>StackNavigator&lt;/code>.&lt;/li>
&lt;li>L&amp;rsquo;objet &lt;code>navigation&lt;/code> doit être passé comme &lt;em>prop&lt;/em> de l&amp;rsquo;écran.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View, Button } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> Ionicons from &lt;span style="color:#0086d2">&amp;#34;react-native-vector-icons/Ionicons&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createBottomTabNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/bottom-tabs&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeScreen = ({ navigation }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the home screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Settings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span>)}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> SettingsScreen = ({ navigation }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the settings screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>)} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Tab = createBottomTabNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">screenOptions&lt;/span>={({ route }) =&amp;gt; ({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tabBarIcon: ({ focused, color, size }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> iconName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (route.name === &lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iconName = focused
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ? &lt;span style="color:#0086d2">&amp;#34;ios-information-circle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : &lt;span style="color:#0086d2">&amp;#34;ios-information-circle-outline&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (route.name === &lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iconName = focused ? &lt;span style="color:#0086d2">&amp;#34;ios-list&amp;#34;&lt;/span> : &lt;span style="color:#0086d2">&amp;#34;ios-list-outline&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// You can return any component that you like here!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Ionicons&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>={iconName} &lt;span style="color:#ff0086;font-weight:bold">size&lt;/span>={size} &lt;span style="color:#ff0086;font-weight:bold">color&lt;/span>={color} /&amp;gt;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tabBarActiveTintColor: &lt;span style="color:#0086d2">&amp;#34;tomato&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tabBarInactiveTintColor: &lt;span style="color:#0086d2">&amp;#34;gray&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={SettingsScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: { flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>, alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: { fontSize: &lt;span style="color:#0086f7;font-weight:bold">18&lt;/span>, paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="affichage-de-piles-dans-les-onglets" >Affichage de piles dans les onglets
&lt;span>
&lt;a href="#affichage-de-piles-dans-les-onglets">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View, Button, StatusBar } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> Ionicons from &lt;span style="color:#0086d2">&amp;#34;react-native-vector-icons/Ionicons&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { NavigationContainer } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createNativeStackNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/native-stack&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { createBottomTabNavigator } from &lt;span style="color:#0086d2">&amp;#34;@react-navigation/bottom-tabs&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeScreen = ({ navigation }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the home screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Button&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">title&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Go to Details&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; navigation.navigate(&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span>)}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> DetailsScreen = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the details screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> SettingsScreen = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.text}&amp;gt;This is the settings screen&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Screen stack for home tab
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeStack = createNativeStackNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> HomeStackNavigator = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">HomeStack.Navigator&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">initialRouteName&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">screenOptions&lt;/span>={screenOptions}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">HomeStack.Screen&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeScreen}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">options&lt;/span>={{ title: &lt;span style="color:#0086d2">&amp;#34;My home&amp;#34;&lt;/span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">HomeStack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={DetailsScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">HomeStack.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Screen stack for settings tab
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> SettingsStack = createNativeStackNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> SettingsStackNavigator = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">SettingsStack.Navigator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">initialRouteName&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">screenOptions&lt;/span>={screenOptions}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">SettingsStack.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Settings&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={SettingsScreen} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">SettingsStack.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> Tab = createBottomTabNavigator();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">StatusBar&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">barStyle&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;light-content&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">backgroundColor&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;#f4511e&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">screenOptions&lt;/span>={({ route }) =&amp;gt; ({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Icons will be different if the tab is focused
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> tabBarIcon: ({ focused, color, size }) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> iconName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (route.name === &lt;span style="color:#0086d2">&amp;#34;HomeStack&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iconName = focused
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ? &lt;span style="color:#0086d2">&amp;#34;ios-information-circle&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> : &lt;span style="color:#0086d2">&amp;#34;ios-information-circle-outline&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (route.name === &lt;span style="color:#0086d2">&amp;#34;SettingsStack&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> iconName = focused ? &lt;span style="color:#0086d2">&amp;#34;ios-list&amp;#34;&lt;/span> : &lt;span style="color:#0086d2">&amp;#34;ios-list-outline&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// You can return any component that you like here!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Ionicons&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>={iconName} &lt;span style="color:#ff0086;font-weight:bold">size&lt;/span>={size} &lt;span style="color:#ff0086;font-weight:bold">color&lt;/span>={color} /&amp;gt;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tabBarActiveTintColor: &lt;span style="color:#0086d2">&amp;#34;tomato&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tabBarInactiveTintColor: &lt;span style="color:#0086d2">&amp;#34;gray&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Hiding tab navigator header to show only stack header
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> headerShown: &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;HomeStack&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={HomeStackNavigator} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Tab.Screen&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;SettingsStack&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">component&lt;/span>={SettingsStackNavigator} /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Tab.Navigator&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">NavigationContainer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: { flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>, justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>, alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text: { fontSize: &lt;span style="color:#0086f7;font-weight:bold">18&lt;/span>, paddingBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Common stack header options
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> screenOptions = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerStyle: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backgroundColor: &lt;span style="color:#0086d2">&amp;#34;#f4511e&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerTintColor: &lt;span style="color:#0086d2">&amp;#34;#fff&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headerTitleStyle: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontWeight: &lt;span style="color:#0086d2">&amp;#34;bold&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="restructuration-du-projet-2" >Restructuration du projet
&lt;span>
&lt;a href="#restructuration-du-projet-2">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>MyApp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── screens/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── DetailsScreen.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── HomeScreen.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── SettingsScreen.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── navigation/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── HomeStackNavigator.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── SettingsStackNavigator.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── RootTabNavigator.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── theme/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── colors.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── styles.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── App.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="autres-possibilités-de-react-navigation" >Autres possibilités de react-navigation
&lt;span>
&lt;a href="#autres-possibilit%c3%a9s-de-react-navigation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://reactnavigation.org/docs/drawer-based-navigation">Navigation par menu accordéon&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://reactnavigation.org/docs/modal">Ecran modal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://reactnavigation.org/docs/auth-flow">Gestion de l&amp;rsquo;authentification&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="utilisation-dapi-web" >Utilisation d&amp;rsquo;API web
&lt;span>
&lt;a href="#utilisation-dapi-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-notion-dapi" >La notion d&amp;rsquo;API
&lt;span>
&lt;a href="#la-notion-dapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Une &lt;strong>API&lt;/strong> (&lt;em>Application Programming Interface&lt;/em>) est un point d&amp;rsquo;entrée programmatique dans un système.&lt;/p>
&lt;p>Elle fournit un moyen d&amp;rsquo;interagir avec ce système.&lt;/p>
&lt;p>Les API permettent aux développeurs d&amp;rsquo;intégrer des services externes dans leurs applications.&lt;/p>
&lt;hr>
&lt;h3 id="spécificités-des-api-web" >Spécificités des API web
&lt;span>
&lt;a href="#sp%c3%a9cificit%c3%a9s-des-api-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Une &lt;strong>API web&lt;/strong> (appelée parfois service web) est une API accessible via les technologies du web : HTTP ou HTTPS.&lt;/p>
&lt;p>Les API web utilisent le plus souvent le format de donnée &lt;strong>JSON&lt;/strong>.&lt;/p>
&lt;p>Certaines sont librement utilisables, d&amp;rsquo;autres nécessitent une authentification du client.&lt;/p>
&lt;hr>
&lt;h3 id="exemples-dapi-web" >Exemples d&amp;rsquo;API web
&lt;span>
&lt;a href="#exemples-dapi-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://pokeapi.co/">PokéAPI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://swapi.dev/">Star Wars API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/w/api.php?">Wikipedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.spotify.com/documentation/web-api/">Spotify&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.omdbapi.com/">OMDb API&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="outils-pour-la-gestion-des-api-web" >Outils pour la gestion des API web
&lt;span>
&lt;a href="#outils-pour-la-gestion-des-api-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://www.getpostman.com/">Postman&lt;/a>&lt;/li>
&lt;li>Extension &lt;a href="https://addons.mozilla.org/fr/firefox/addon/restclient/">RESTClient&lt;/a> pour Firefox&lt;/li>
&lt;li>&lt;a href="https://insomnia.rest/">Insomnia&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-dutilisation-dune-api" >Exemple d&amp;rsquo;utilisation d&amp;rsquo;une API
&lt;span>
&lt;a href="#exemple-dutilisation-dune-api">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-mobi/RandomBeer">https://github.com/ensc-mobi/RandomBeer&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/random_beer.png" alt="Random Beer app">&lt;/p>
&lt;hr>
&lt;h3 id="appels-réseau-asynchrones-avec-fetch" >Appels réseau asynchrones avec &lt;code>fetch&lt;/code>
&lt;span>
&lt;a href="#appels-r%c3%a9seau-asynchrones-avec-fetch">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Une &lt;a href="https://web.dev/promises/">promesse&lt;/a> (&lt;em>promise&lt;/em>) est un objet qui encapsule une opération dont le résultat n&amp;rsquo;est pas encore connu.&lt;/p>
&lt;p>La fonction JavaScript &lt;a href="https://developers.google.com/web/updates/2015/03/introduction-to-fetch">fetch()&lt;/a> exploite les possibilités des promesses.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Envoie une requête HTTP asynchrone vers l&amp;#39;URL spécifiée
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>fetch(url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .then(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Code appelé ultérieurement si la requête réussit
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span>(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Code appelé ultérieurement si la requête échoue
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="accès-à-une-ressource-distante" >Accès à une ressource distante
&lt;span>
&lt;a href="#acc%c3%a8s-%c3%a0-une-ressource-distante">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Envoi d&amp;#39;une requête HTTP asynchrone vers l&amp;#39;URL spécifiée
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La réponse reçue ici contient des données JSON
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>fetch(&lt;span style="color:#0086d2">&amp;#34;http://my-api-url&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès au contenu JSON de la réponse
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> .then((response) =&amp;gt; response.json())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .then((content) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Utilisation du contenu de la réponse
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// `content` est un objet ou un tableau JavaScript
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span>((error) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.error(error);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mise-à-jour-dune-ressource-distante" >Mise à jour d&amp;rsquo;une ressource distante
&lt;span>
&lt;a href="#mise-%c3%a0-jour-dune-ressource-distante">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>fetch(&lt;span style="color:#0086d2">&amp;#34;https://mywebsite.com/endpoint/&amp;#34;&lt;/span>, {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> method: &lt;span style="color:#0086d2">&amp;#34;POST&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Accept: &lt;span style="color:#0086d2">&amp;#34;application/json&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#0086d2">&amp;#34;Content-Type&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;application/json&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> body: JSON.stringify({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> firstParam: &lt;span style="color:#0086d2">&amp;#34;yourValue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> secondParam: &lt;span style="color:#0086d2">&amp;#34;yourOtherValue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="appels-réseau-asynchrones-avec-asyncawait" >Appels réseau asynchrones avec &lt;code>async/await&lt;/code>
&lt;span>
&lt;a href="#appels-r%c3%a9seau-asynchrones-avec-asyncawait">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les fonctions utilisant &lt;code>await&lt;/code> doivent être déclarées avec le mot-clé &lt;code>async&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Cette fonction renvoie une promesse
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> fetchRemoteApi = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Envoi d&amp;#39;une requête HTTP asynchrone vers l&amp;#39;URL spécifiée
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// La réponse reçue ici contient des données JSON
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> response = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> fetch(&lt;span style="color:#0086d2">&amp;#34;http://my-api-url&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès au contenu JSON de la réponse
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> content = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> response.json();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Utilisation du contenu de la réponse
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// `content` est un objet ou un tableau JavaScript
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Gestion de l&amp;#39;erreur
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fetchRemoteApi();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exécution-de-code-à-linitialisation-dun-composant" >Exécution de code à l&amp;rsquo;initialisation d&amp;rsquo;un composant
&lt;span>
&lt;a href="#ex%c3%a9cution-de-code-%c3%a0-linitialisation-dun-composant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le hook &lt;a href="https://reactjs.org/docs/hooks-effect.html">useEffect&lt;/a> permet de déclencher des traitements à certains moments du cycle de vie d&amp;rsquo;un composant.&lt;/li>
&lt;li>Par défaut, le code associé est appelé à chaque réaffichage du composant. On peut définir une liste des variables dont le changement déclenche une nouvelle exécution du code du &lt;code>hook&lt;/code>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>useEffect(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Code exécuté uniquement au chargement (mounting) du composant
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}, []);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="affichage-pendant-le-chargement" >Affichage pendant le chargement
&lt;span>
&lt;a href="#affichage-pendant-le-chargement">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le composant &lt;a href="https://reactnative.dev/docs/activityindicator">ActivityIndicator&lt;/a> permet d&amp;rsquo;afficher un &lt;em>spinner&lt;/em> pendant les actions potentiellement longues (chargements réseau, etc).&lt;/li>
&lt;li>Il est souvent associé à un booléen &lt;code>loading&lt;/code> ajouté à l&amp;rsquo;état du composant.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/spinner.gif" alt="ActivityIndicator spinner">&lt;/p>
&lt;hr>
&lt;h3 id="mise-en-oeuvre-1" >Mise en oeuvre
&lt;span>
&lt;a href="#mise-en-oeuvre-1">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { useEffect } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { useState } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> StyleSheet,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Text,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> View,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ActivityIndicator,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> TouchableOpacity,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// API endpoint
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> rootEndpoint = &lt;span style="color:#0086d2">&amp;#34;https://api.punkapi.com/v2&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// fetch API for a random beer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> fetchRandomBeer = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> response = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> fetch(&lt;span style="color:#0086d2">`&lt;/span>&lt;span style="color:#0086d2">${&lt;/span>rootEndpoint&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">/beers/random`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> beers = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> response.json();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Access first element of returned beer array
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> beers[&lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> App = () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Define state
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [loading, setLoading] = useState(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [error, setError] = useState(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [beerName, setBeerName] = useState(&lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [beerDescription, setBeerDescription] = useState(&lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Load a new beer
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> loadBeer = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setLoading(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setError(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> beer = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> fetchRandomBeer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Update state
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> setBeerName(beer.name);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setBeerDescription(beer.description);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setError(&lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> setLoading(&lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The empty array [] prevents the effect from running at each re-render
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> useEffect(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// More details; https://www.robinwieruch.de/react-hooks-fetch-data/
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> loadBeer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, []);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (loading) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">ActivityIndicator&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">size&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;large&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (error) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Something went wrong :\&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.name}&amp;gt;{beerName}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.description}&amp;gt;{beerDescription}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#080;background-color:#0f140f;font-style:italic">/* Add a button to fetch another beer */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TouchableOpacity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.button}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onPress&lt;/span>={() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> loadBeer();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;Grab a &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> beer!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">TouchableOpacity&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> margin: &lt;span style="color:#0086f7;font-weight:bold">30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontSize: &lt;span style="color:#0086f7;font-weight:bold">18&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fontWeight: &lt;span style="color:#0086d2">&amp;#34;700&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> marginBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> description: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> marginBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> button: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> borderWidth: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> borderColor: &lt;span style="color:#0086d2">&amp;#34;black&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> borderRadius: &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> padding: &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> justifyContent: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> alignItems: &lt;span style="color:#0086d2">&amp;#34;center&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="restructuration-du-projet-3" >Restructuration du projet
&lt;span>
&lt;a href="#restructuration-du-projet-3">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>api/&lt;/code> rassemble les définitions des appels réseau asynchrones.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>MyApp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── api/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── punkapi.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── theme/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── styles.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── App.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="persistance-locale" >Persistance locale
&lt;span>
&lt;a href="#persistance-locale">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="besoin" >Besoin
&lt;span>
&lt;a href="#besoin">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les applications mobiles doivent souvent enregistrer une partie de leurs données (préférences utilisateurs, dernières informations consultées, etc) dans la mémoire de stockage du téléphone/tablette.&lt;/li>
&lt;li>Plusieurs solutions existent pour cela.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-stockage-local" >Exemple de stockage local
&lt;span>
&lt;a href="#exemple-de-stockage-local">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-mobi/ShowerThoughts">https://github.com/ensc-mobi/ShowerThoughts&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/showerthoughts.png" alt="Show thoughts">&lt;/p>
&lt;hr>
&lt;h3 id="stockage-local-avec-asyncstorage" >Stockage local avec &lt;code>AsyncStorage&lt;/code>
&lt;span>
&lt;a href="#stockage-local-avec-asyncstorage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Le composant &lt;a href="https://react-native-async-storage.github.io/async-storage/">AsyncStorage&lt;/a> permet de stocker localement des données sous forme de paires nom/valeur.&lt;/li>
&lt;li>Il gère des valeurs de type chaîne, ou objet après sérialisation JSON.&lt;/li>
&lt;li>Son API est basée sur les promesses et donc asynchrone.&lt;/li>
&lt;li>Il doit être ajouté au projet :&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npx expo install @react-native-async-storage/async-storage
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="ecriture-de-données" >Ecriture de données
&lt;span>
&lt;a href="#ecriture-de-donn%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>setItem&lt;/code> permet à la fois d&amp;rsquo;ajouter de nouveaux éléments et de modifier des éléments existants.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> AsyncStorage from &lt;span style="color:#0086d2">&amp;#34;@react-native-async-storage/async-storage&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> storeString = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> (value) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> AsyncStorage.setItem(&lt;span style="color:#0086d2">&amp;#34;my_storage_key&amp;#34;&lt;/span>, value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Saving error
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> storeObject = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> (value) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> jsonValue = JSON.stringify(value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> AsyncStorage.setItem(&lt;span style="color:#0086d2">&amp;#34;my_storage_key&amp;#34;&lt;/span>, jsonValue)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Saving error
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="lecture-de-données" >Lecture de données
&lt;span>
&lt;a href="#lecture-de-donn%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;code>getItem&lt;/code> renvoie une promesse qui réussit si la valeur associée à la clé est trouvée, ou renvoie &lt;code>null&lt;/code> dans le cas contraire.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> AsyncStorage from &lt;span style="color:#0086d2">&amp;#34;@react-native-async-storage/async-storage&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> getString = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> value = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> AsyncStorage.getItem(&lt;span style="color:#0086d2">&amp;#34;my_storage_key&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (value !== &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// value previously stored
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Error reading value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> getObject = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> jsonValue = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> AsyncStorage.getItem(&lt;span style="color:#0086d2">&amp;#34;my_storage_key&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> jsonValue != &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span> ? JSON.parse(jsonValue) : &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Error reading value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mise-en-oeuvre-2" >Mise en oeuvre
&lt;span>
&lt;a href="#mise-en-oeuvre-2">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Les données sont chargées depuis le stockage local uniquement au démarrage de l&amp;rsquo;application.&lt;/li>
&lt;li>La validation de la saisie déclenche la sauvegarde locale, puis la mise à jour de l&amp;rsquo;état.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-jsx" data-lang="jsx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { useEffect, useState } from &lt;span style="color:#0086d2">&amp;#34;react&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { StyleSheet, Text, View, TextInput, FlatList } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> AsyncStorage from &lt;span style="color:#0086d2">&amp;#34;@react-native-async-storage/async-storage&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// AsyncStorage key used for storing ideas
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> STORAGE_KEY = &lt;span style="color:#0086d2">&amp;#34;ASYNC_STORAGE_IDEAS&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">export&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">default&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> App() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Value of the text input
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [input, setInput] = useState(&lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ideas list, initially empty
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [ideas, setIdeas] = useState([]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Clear local storage
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> resetIdeas = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#0086d2">&amp;#34;Removing ideas from local storage...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> AsyncStorage.multiRemove([STORAGE_KEY]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.error(&lt;span style="color:#0086d2">&amp;#34;Failed to clear ideas&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Save ideas array parameter to local storage
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> saveIdeas = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> (newIdeas) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#0086d2">`Saving ideas [&lt;/span>&lt;span style="color:#0086d2">${&lt;/span>newIdeas&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">] to local storage...`&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Turn ideas array into a JSON string
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> jsonIdeas = JSON.stringify(newIdeas);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Store ideas string
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> AsyncStorage.setItem(STORAGE_KEY, jsonIdeas);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.error(&lt;span style="color:#0086d2">&amp;#34;Failed to save ideas&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Load ideas from local storage
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> loadIdeas = &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(&lt;span style="color:#0086d2">&amp;#34;Loading ideas from local storage...&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Load ideas string
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> jsonIdeas = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> AsyncStorage.getItem(STORAGE_KEY);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (jsonIdeas !== &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Turn stored JSON string into an array, and set it as ideas array
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> setIdeas(JSON.parse(jsonIdeas));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.error(&lt;span style="color:#0086d2">&amp;#34;Failed to load ideas&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Load ideas only during initial component mounting
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> useEffect(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Uncomment to clear ideas from local storage
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// resetIdeas();
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> loadIdeas();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, []);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.container}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">TextInput&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.input}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">placeholder&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Enter your newest brilliant idea&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // &lt;span style="color:#ff0086;font-weight:bold">Display&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>={input}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onChangeText&lt;/span>={(text) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Update input value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> setInput(text);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">onSubmitEditing&lt;/span>={() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (!input) &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Don&amp;#39;t submit if empty
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Creating a new ideas array with input (new idea) at the end
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> newIdeas = [...ideas, input];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> saveIdeas(newIdeas);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Update state
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> setIdeas(newIdeas);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Reset input value
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> setInput(&lt;span style="color:#0086d2">&amp;#34;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">FlatList&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.list}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">data&lt;/span>={ideas}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">renderItem&lt;/span>={({ item }) =&amp;gt; &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">style&lt;/span>={styles.item}&amp;gt;- {item}&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">Text&lt;/span>&amp;gt;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff0086;font-weight:bold">keyExtractor&lt;/span>={(item) =&amp;gt; item}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">FlatList&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">View&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> styles = StyleSheet.create({
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> flex: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> marginTop: &lt;span style="color:#0086f7;font-weight:bold">30&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> input: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backgroundColor: &lt;span style="color:#0086d2">&amp;#34;whitesmoke&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> padding: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> marginBottom: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> marginLeft: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> marginRight: &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> item: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> padding: &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="restructuration-du-projet-4" >Restructuration du projet
&lt;span>
&lt;a href="#restructuration-du-projet-4">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>MyApp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── components/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── Input.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── utils/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── localStorage.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── theme/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── styles.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── App.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>ASP.NET Core</title><link>https://www.bpesquet.fr/slides/asp-net-core/</link><pubDate>Tue, 21 Sep 2021 09:40:11 +0200</pubDate><guid>https://www.bpesquet.fr/slides/asp-net-core/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Présentation de ASP.NET Core&lt;/li>
&lt;li>Le framework ASP.NET Core MVC&lt;/li>
&lt;li>Routage et environnement&lt;/li>
&lt;li>Interactions avec une base de données&lt;/li>
&lt;li>Création d&amp;rsquo;API web&lt;/li>
&lt;li>Création de vues HTML&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="présentation-daspnet-core" >Présentation d&amp;rsquo;ASP.NET Core
&lt;span>
&lt;a href="#pr%c3%a9sentation-daspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="histoire-daspnet-core" >Histoire d&amp;rsquo;ASP.NET Core
&lt;span>
&lt;a href="#histoire-daspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>A l&amp;rsquo;origine, .NET (Framework) incluait une technologie de création de pages web dynamiques nommée &lt;strong>ASP.NET&lt;/strong> (&lt;em>Active Server Pages&lt;/em>).&lt;/li>
&lt;li>&lt;strong>ASP.NET Core&lt;/strong> est une réécriture d&amp;rsquo;ASP.NET basée sur .NET (Core).&lt;/li>
&lt;li>Standard actuel pour le développement web sous .NET.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="points-clés-daspnet-core" >Points-clés d&amp;rsquo;ASP.NET Core
&lt;span>
&lt;a href="#points-cl%c3%a9s-daspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Permet de créer des applications web et des services web (API) utilisés comme &lt;em>backends&lt;/em> par des clients riches ou des applications mobiles.&lt;/li>
&lt;li>Léger, moderne et modulaire.&lt;/li>
&lt;li>Inclut des technologies facilitant la gestion des pages dynamiques, des appels temps réel, des tests, etc.&lt;/li>
&lt;li>Déployable sur plusieurs serveurs web : Kestrel, Apache, nginx, etc.&lt;/li>
&lt;li>Multi-plateformes et &lt;a href="https://github.com/dotnet/aspnetcore">open source&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="rappel--le-fonctionnement-du-web" >Rappel : le fonctionnement du web
&lt;span>
&lt;a href="#rappel--le-fonctionnement-du-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Le web est basé sur un modèle &lt;strong>client/serveur&lt;/strong> :&lt;/p>
&lt;ul>
&lt;li>Le client (navigateur, application mobile, robot d&amp;rsquo;indexation, etc) envoie une demande (&lt;strong>requête&lt;/strong>) au serveur.&lt;/li>
&lt;li>Le serveur prépare sa &lt;strong>réponse&lt;/strong> à la requête du client, puis la lui renvoie.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/web_request_response.png" alt="Modèle requête/réponse du web">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="rappel--le-protocole-http" >Rappel : le protocole HTTP
&lt;span>
&lt;a href="#rappel--le-protocole-http">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;em>HyperText Transfer Protocol&lt;/em>.&lt;/li>
&lt;li>Socle technique du web.&lt;/li>
&lt;li>Equivalent sécurisé : &lt;strong>HTTPS&lt;/strong>.&lt;/li>
&lt;li>Basé sur des &lt;strong>commandes&lt;/strong> textuelles exprimant les différentes actions possibles : &lt;em>GET&lt;/em>, &lt;em>PUT&lt;/em>, &lt;em>POST&lt;/em>, etc).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="ui-web-générée-côté-serveur" >UI web générée côté serveur
&lt;span>
&lt;a href="#ui-web-g%c3%a9n%c3%a9r%c3%a9e-c%c3%b4t%c3%a9-serveur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Structure HTML contenant les données générée côté serveur, puis renvoyée au client.&lt;/p>
&lt;ul>
&lt;li>Peu d&amp;rsquo;exigences techniques côté client (navigateur simple, trafic réseau limité).&lt;/li>
&lt;li>Accès BD et contrôles centralisés.&lt;/li>
&lt;li>Exemples d&amp;rsquo;usages : sites dynamiques, blogs, CMS&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://www.growth-rocket.com/blog/a-closer-look-at-client-side-server-side-rendering/">&lt;img src="images/Server-Side-Rendering-Flowchart.jpg" alt="SSR">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="ui-web-générée-côté-client" >UI web générée côté client
&lt;span>
&lt;a href="#ui-web-g%c3%a9n%c3%a9r%c3%a9e-c%c3%b4t%c3%a9-client">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Squelette HTML (sans données) initialement renvoyé au client. Ensuite, DOM mis à jour dynamiquement grâce à des appels asynchrones du client vers le serveur.&lt;/p>
&lt;ul>
&lt;li>Interactions riches avec l&amp;rsquo;utilisateur.&lt;/li>
&lt;li>Capacités matérielles et logicielles du client utilisables.&lt;/li>
&lt;li>Exemples d&amp;rsquo;usages : tableau de bord interactif, applications collaboratives&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://www.growth-rocket.com/blog/a-closer-look-at-client-side-server-side-rendering/">&lt;img src="images/Client-Side-Rendering-Flowchart.jpg" alt="CSR">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="loffre-technique-aspnet-core" >L&amp;rsquo;offre technique ASP.NET Core
&lt;span>
&lt;a href="#loffre-technique-aspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>UI générée côté serveur : &lt;strong>Razor Pages&lt;/strong>, &lt;strong>MVC&lt;/strong>.&lt;/li>
&lt;li>UI générée côté client : &lt;strong>Blazor&lt;/strong>, &lt;strong>SPA&lt;/strong> avec Angular ou React.&lt;/li>
&lt;li>Une approche hybride est possible (exemple : MVC + Blazor).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="le-framework-aspnet-core-mvc" >Le framework ASP.NET Core MVC
&lt;span>
&lt;a href="#le-framework-aspnet-core-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="larchitecture-mvc" >L&amp;rsquo;architecture MVC
&lt;span>
&lt;a href="#larchitecture-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;em>Model-View-Controller&lt;/em> (&lt;em>Modèle-Vue-Contrôleur&lt;/em>).&lt;/li>
&lt;li>Décomposition d’une application en trois grandes parties :
&lt;ul>
&lt;li>&lt;strong>Modèle&lt;/strong> : accès aux données et logique métier (&lt;em>business logic&lt;/em>).&lt;/li>
&lt;li>&lt;strong>Vue&lt;/strong> : affichage et interactions avec l’utilisateur.&lt;/li>
&lt;li>&lt;strong>Contrôleur&lt;/strong> : dynamique de l’application, lien entre Modèle et Vue.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Application du principe de séparation des responsabilités.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="mvc--un-peu-dhistoire" >MVC : un peu d&amp;rsquo;histoire
&lt;span>
&lt;a href="#mvc--un-peu-dhistoire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Apparu à la fin des années 1970 pour le langage OO &lt;strong>Smalltalk&lt;/strong>. Objectif : séparer le code de l’IHM de la logique applicative.&lt;/li>
&lt;li>Appliqué depuis dans de très nombreux contextes et langages :
&lt;ul>
&lt;li>web côté serveur : frameworks Symfony (PHP), Django (Python), Rails (Ruby), etc.&lt;/li>
&lt;li>web côté client : frameworks Angular, Ember (JavaScript), etc.&lt;/li>
&lt;li>desktop : bibliothèque Swing (Java), etc.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://symfony.com/doc/current/index.html">&lt;img src="images/symfony_mvc.png" alt="Dynamique d&amp;rsquo;un serveur web MVC">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="avantages-et-inconvénients" >Avantages et inconvénients
&lt;span>
&lt;a href="#avantages-et-inconv%c3%a9nients">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Avantages :&lt;/p>
&lt;ul>
&lt;li>Séparation nette des responsabilités =&amp;gt; couplage faible, cohésion forte, maintenance et évolutions facilitées.&lt;/li>
&lt;li>Standard connu et bien établi.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Inconvénients :&lt;/p>
&lt;ul>
&lt;li>Complexification de l’architecture.&lt;/li>
&lt;li>Rigidité.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="aspnet-core-mvc" >ASP.NET Core MVC
&lt;span>
&lt;a href="#aspnet-core-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Framework de création d&amp;rsquo;applications web basées sur l&amp;rsquo;architecture MVC.&lt;/li>
&lt;li>Implémente de nombreux services et bonnes pratiques, parmi lesquels :
&lt;ul>
&lt;li>Routage des requêtes entrantes.&lt;/li>
&lt;li>Gestion des pages dynamiques.&lt;/li>
&lt;li>Authentification.&lt;/li>
&lt;li>Injection de dépendance.&lt;/li>
&lt;li>Tests.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="creation-dune-application-aspnet-core-mvc" >Creation d&amp;rsquo;une application ASP.NET Core MVC
&lt;span>
&lt;a href="#creation-dune-application-aspnet-core-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>dotnet new mvc -o {AppName}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd {AppName}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet new gitignore
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="structure-de-lapplication-créée" >Structure de l&amp;rsquo;application créée
&lt;span>
&lt;a href="#structure-de-lapplication-cr%c3%a9%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://github.com/ensc-glog/MvcMovie">https://github.com/ensc-glog/MvcMovie&lt;/a>&lt;/p>
&lt;p>&lt;img src="images/aspnetcoremvc_structure.png" alt="Structure d&amp;rsquo;une application ASP.NET Core MVC">&lt;/p>
&lt;hr>
&lt;h3 id="les-contrôleurs" >Les contrôleurs
&lt;span>
&lt;a href="#les-contr%c3%b4leurs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Créés dans le répertoire &lt;code>Controllers/&lt;/code>.&lt;/li>
&lt;li>Définis dans l&amp;rsquo;espace de noms &lt;code>{AppName}/Controllers&lt;/code>.&lt;/li>
&lt;li>Héritent des classes abstraites &lt;code>Controller&lt;/code> (vues HTML) ou &lt;code>ControllerBase&lt;/code> (API web).&lt;/li>
&lt;li>Définissent les points d&amp;rsquo;entrée dans l&amp;rsquo;application sous la forme de méthodes d&amp;rsquo;action annotables.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-contrôleur" >Exemple de contrôleur
&lt;span>
&lt;a href="#exemple-de-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HomeController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Privacy()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="les-modèles" >Les modèles
&lt;span>
&lt;a href="#les-mod%c3%a8les">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Créés dans le répertoire &lt;code>Models/&lt;/code>.&lt;/li>
&lt;li>Définis dans l&amp;rsquo;espace de noms &lt;code>{AppName}/Models&lt;/code>.&lt;/li>
&lt;li>Implémentent la logique métier de l&amp;rsquo;application sous la forme de classes &lt;strong>POCO&lt;/strong> (&lt;em>Plain Old CLR Objects&lt;/em>) souvent associées à des tables BD.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="les-vues" >Les vues
&lt;span>
&lt;a href="#les-vues">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Créées dans le répertoire &lt;code>Views/{ControllerName}&lt;/code> sous la forme de fichiers &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-6.0&amp;amp;tabs=visual-studio">Razor&lt;/a> (&lt;code>.cshtml&lt;/code>).&lt;/li>
&lt;li>Représentent l&amp;rsquo;interface utilisateur (UI) de l&amp;rsquo;application.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span>] = &lt;span style="color:#0086d2">&amp;#34;Home Page&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;div class=&lt;span style="color:#0086d2">&amp;#34;text-center&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;h1 class=&lt;span style="color:#0086d2">&amp;#34;display-4&amp;#34;&lt;/span>&amp;gt;Welcome&amp;lt;/h1&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;p&amp;gt;Learn about &amp;lt;a href=&lt;span style="color:#0086d2">&amp;#34;https://docs.microsoft.com/aspnet/core&amp;#34;&lt;/span>&amp;gt;building Web apps with ASP.NET Core&amp;lt;/a&amp;gt;.&amp;lt;/p&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="code-et-librairies-client" >Code et librairies client
&lt;span>
&lt;a href="#code-et-librairies-client">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Regroupés dans le répertoire &lt;code>wwwroot/&lt;/code>.&lt;/li>
&lt;li>Rassemblent les fichiers CSS et JavaScript utilisés côté client.&lt;/li>
&lt;li>Intègrent par défaut Bootstrap et jQuery.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/aspnetcoremvc_wwwroot.png" alt="wwwroot folder structure">&lt;/p>
&lt;hr>
&lt;h3 id="le-fichier-appsettingsjson" >Le fichier appsettings.json
&lt;span>
&lt;a href="#le-fichier-appsettingsjson">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Centralise les paramètres de configuration de l&amp;rsquo;application.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;Logging&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;LogLevel&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;Default&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Information&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;Microsoft.AspNetCore&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Warning&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;Microsoft.EntityFrameworkCore.Database.Command&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Information&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="le-fichier-programcs" >Le fichier Program.cs
&lt;span>
&lt;a href="#le-fichier-programcs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Configure les services utilisés et le &lt;em>pipeline&lt;/em> de gestion des requêtes HTTP entrantes.&lt;/li>
&lt;li>Démarre l&amp;rsquo;application.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> builder = WebApplication.CreateBuilder(args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add services to the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddControllersWithViews();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> app = builder.Build();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.UseHttpsRedirection();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.UseStaticFiles();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.UseRouting();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.UseAuthorization();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.MapControllerRoute(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#0086d2">&amp;#34;default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pattern: &lt;span style="color:#0086d2">&amp;#34;{controller=Home}/{action=Index}/{id?}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app.Run();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="lancement-de-lapplication" >Lancement de l&amp;rsquo;application
&lt;span>
&lt;a href="#lancement-de-lapplication">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>En ligne de commande avec &lt;code>dotnet run&lt;/code> ou depuis VS Code, après avoir généré les &lt;em>assets&lt;/em>.&lt;/li>
&lt;li>Compile le code puis écoute un port aléatoire &amp;gt; 1000 pour attendre les requêtes HTTP entrantes sur la machine locale.&lt;/li>
&lt;li>Recompilation nécessaire après tout changement.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/dotnet-run.png" alt="dotnet run">&lt;/p>
&lt;hr>
&lt;h2 id="routage-et-environnement" >Routage et environnement
&lt;span>
&lt;a href="#routage-et-environnement">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="routage-des-requêtes" >Routage des requêtes
&lt;span>
&lt;a href="#routage-des-requ%c3%aates">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Associe les requêtes HTTP entrantes au code à exécuter (méthodes des contrôleurs).&lt;/li>
&lt;li>Permet à l&amp;rsquo;application web d&amp;rsquo;utiliser des URL propres et &lt;em>SEO-friendly&lt;/em>, plutôt que des noms de fichiers.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/routing?view=aspnetcore-5.0">Plus d&amp;rsquo;informations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="routage-par-convention" >Routage par convention
&lt;span>
&lt;a href="#routage-par-convention">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Permet de définir globalement la correspondance entre le format de l&amp;rsquo;URL et la méthode d&amp;rsquo;action d&amp;rsquo;un contrôleur à exécuter.&lt;/li>
&lt;li>Format par défaut : &lt;code>/{ControllerName}/{ActionName}?{Parameters}&lt;/code>.&lt;/li>
&lt;li>Exemple : &lt;code>https://myapp/Student/Details?code=137&lt;/code> appelle la méthode &lt;code>Details&lt;/code> du contrôleur &lt;code>StudentController&lt;/code>, en lui passant un paramètre nommé &lt;code>code&lt;/code> ayant la valeur 137.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="configuration-du-routage-par-convention-dans-programcs" >Configuration du routage par convention dans Program.cs
&lt;span>
&lt;a href="#configuration-du-routage-par-convention-dans-programcs">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>app.MapControllerRoute(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#0086d2">&amp;#34;default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pattern: &lt;span style="color:#0086d2">&amp;#34;{controller=Home}/{action=Index}/{id?}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>Home&lt;/code>, &lt;code>Index&lt;/code> et &lt;code>id&lt;/code> sont resp. les noms par défaut du contrôleur, de l&amp;rsquo;action et du paramètre (optionnel).&lt;/p>
&lt;hr>
&lt;h3 id="exemple--ajout-dun-contrôleur" >Exemple : ajout d&amp;rsquo;un contrôleur
&lt;span>
&lt;a href="#exemple--ajout-dun-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Controllers/HelloController.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: /Hello/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Hello World!&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="utilisation-du-contrôleur-créé" >Utilisation du contrôleur créé
&lt;span>
&lt;a href="#utilisation-du-contr%c3%b4leur-cr%c3%a9%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;URL &lt;a href="https://localhost:%7Bport%7D/hello">https://localhost:{port}/hello&lt;/a> est automatiquement routée vers la méthode &lt;code>Index&lt;/code> de la classe &lt;code>HelloController&lt;/code>.&lt;/li>
&lt;li>Même résultat avec &lt;a href="https://localhost:%7Bport%7D/hello/index">https://localhost:{port}/hello/index&lt;/a>, &lt;code>Index&lt;/code> étant le nom de l&amp;rsquo;action par défaut.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/helloworldcontroller.png" alt="Hello World!">&lt;/p>
&lt;hr>
&lt;h3 id="passage-de-paramètres-à-un-contrôleur" >Passage de paramètres à un contrôleur
&lt;span>
&lt;a href="#passage-de-param%c3%a8tres-%c3%a0-un-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>On définit des paramètres dans l&amp;rsquo;URL via la syntaxe &lt;code>?{name1}={value1}&amp;amp;{name2}=...&lt;/code>&lt;/li>
&lt;li>Leurs valeurs sont passées aux méthodes d&amp;rsquo;actions des contrôleurs.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> System.Text.Encodings.Web;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: /Hello/Welcome/ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Welcome(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> name, &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> numTimes = &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Prevents injection attacks&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> HtmlEncoder.Default.Encode(&lt;span style="color:#0086d2">$&amp;#34;Hello {name}, NumTimes is: {numTimes}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--passage-de-paramètres-au-contrôleur-créé" >Exemple : passage de paramètres au contrôleur créé
&lt;span>
&lt;a href="#exemple--passage-de-param%c3%a8tres-au-contr%c3%b4leur-cr%c3%a9%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>L&amp;rsquo;URL &lt;a href="https://localhost:%7Bport%7D/hello/welcome">https://localhost:{port}/hello/welcome&lt;/a> est automatiquement routée vers la méthode &lt;code>Welcome&lt;/code> de la classe &lt;code>HelloController&lt;/code>.&lt;/li>
&lt;li>On peut définir (ou pas) les valeurs des paramètres &lt;code>name&lt;/code> et &lt;code>numTimes&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/welcomecontroller.png" alt="Welcome">&lt;/p>
&lt;hr>
&lt;h3 id="environnements" >Environnements
&lt;span>
&lt;a href="#environnements">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Permettent d&amp;rsquo;adapter la configuration de l&amp;rsquo;application au contexte (développement, test ou production).&lt;/li>
&lt;li>Définis par la variable d&amp;rsquo;environnement &lt;code>ASPNETCORE_ENVIRONMENT&lt;/code>. En l&amp;rsquo;absence de cette variable, l&amp;rsquo;environnement est de type Production.&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments?view=aspnetcore-5.0">Plus d&amp;rsquo;informations&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="définition-de-lenvironnement-avec-visual-studio-code" >Définition de l&amp;rsquo;environnement avec Visual Studio Code
&lt;span>
&lt;a href="#d%c3%a9finition-de-lenvironnement-avec-visual-studio-code">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>./vscode/launch.json&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;0.2.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;configurations&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;.NET Core Launch (web)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ASPNETCORE_ENVIRONMENT&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Development&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="configuration-de-lapplication-selon-lenvironnement-détecté" >Configuration de l&amp;rsquo;application selon l&amp;rsquo;environnement détecté
&lt;span>
&lt;a href="#configuration-de-lapplication-selon-lenvironnement-d%c3%a9tect%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Program.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Configure the HTTP request pipeline.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (!app.Environment.IsDevelopment())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app.UseExceptionHandler(&lt;span style="color:#0086d2">&amp;#34;/Home/Error&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app.UseHsts();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app.UseDeveloperExceptionPage();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="interactions-avec-une-base-de-données" >Interactions avec une base de données
&lt;span>
&lt;a href="#interactions-avec-une-base-de-donn%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="ef-core-et-aspnet-core" >EF Core et ASP.NET Core
&lt;span>
&lt;a href="#ef-core-et-aspnet-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Entity Framework Core est la solution de persistance par défaut sous ASP.NET Core.&lt;/li>
&lt;li>Après son installation, on configure l&amp;rsquo;application pour &lt;a href="https://docs.microsoft.com/en-us/ef/core/dbcontext-configuration/">associer&lt;/a> un contexte BD à chaque requête HTTP entrante.&lt;/li>
&lt;li>Il est ensuite utilisé par les contrôleurs pour interagir avec la base de données.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--ajout-dune-classe-métier" >Exemple : ajout d&amp;rsquo;une classe métier
&lt;span>
&lt;a href="#exemple--ajout-dune-classe-m%c3%a9tier">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Models/Movie.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> System.ComponentModel.DataAnnotations;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(100, MinimumLength = 3)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Title { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [Display(Name = &amp;#34;Release Date&amp;#34;), DataType(DataType.Date)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DateTime ReleaseDate { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(30)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Genre { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="création-du-contexte-bd" >Création du contexte BD
&lt;span>
&lt;a href="#cr%c3%a9ation-du-contexte-bd">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Data/MvcMovieContext.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MvcMovieContext : DbContext
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DbSet&amp;lt;Movie&amp;gt; Movies { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> DbPath { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> MvcMovieContext()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Path to SQLite database file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DbPath = &lt;span style="color:#0086d2">&amp;#34;MvcMovie.db&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The following configures EF to create a SQLite database file locally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">protected&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">override&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> OnConfiguring(DbContextOptionsBuilder options)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use SQLite as database&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.UseSqlite(&lt;span style="color:#0086d2">$&amp;#34;Data Source={DbPath}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Optional: log SQL queries to console&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options.LogTo(Console.WriteLine, &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span>[] { DbLoggerCategory.Database.Command.Name }, LogLevel.Information);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="synchronisation-de-la-base-de-données-avec-le-modèle" >Synchronisation de la base de données avec le modèle
&lt;span>
&lt;a href="#synchronisation-de-la-base-de-donn%c3%a9es-avec-le-mod%c3%a8le">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Réalisée via des migrations.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Create a new migration&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet ef migrations add {MigratioName}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Sync DB with most recent migrations&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>dotnet ef database update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="configuration-de-lapplication-pour-ef-core" >Configuration de l&amp;rsquo;application pour EF Core
&lt;span>
&lt;a href="#configuration-de-lapplication-pour-ef-core">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Program.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> builder = WebApplication.CreateBuilder(args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add services to the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddControllersWithViews();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Attach an EF Core database context to each query&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddDbContext&amp;lt;MvcMovieContext&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="gestion-des-fichiers-temporaires-sqlite" >Gestion des fichiers temporaires SQLite
&lt;span>
&lt;a href="#gestion-des-fichiers-temporaires-sqlite">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Edition du fichier &lt;code>.gitignore&lt;/code> pour ignorer ces fichiers.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Ignore SQLite temp files&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.db-shm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.db-wal
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="remplissage-de-la-base-de-données" >Remplissage de la base de données
&lt;span>
&lt;a href="#remplissage-de-la-base-de-donn%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Classe &lt;code>SeedData&lt;/code> créée dans le répertoire &lt;code>Models/&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> SeedData
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Init()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> context = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> MvcMovieContext())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Look for existing content&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (context.Movies.Any())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// DB already filled&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add several movies&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.Movies.AddRange(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Title = &lt;span style="color:#0086d2">&amp;#34;When Harry Met Sally&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReleaseDate = DateTime.Parse(&lt;span style="color:#0086d2">&amp;#34;1989-2-12&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Genre = &lt;span style="color:#0086d2">&amp;#34;Romantic Comedy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Title = &lt;span style="color:#0086d2">&amp;#34;Rio Bravo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ReleaseDate = DateTime.Parse(&lt;span style="color:#0086d2">&amp;#34;1959-4-15&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Genre = &lt;span style="color:#0086d2">&amp;#34;Western&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Commit changes into DB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> context.SaveChanges();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exécution-du-code-de-remplissage" >Exécution du code de remplissage
&lt;span>
&lt;a href="#ex%c3%a9cution-du-code-de-remplissage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Program.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> builder = WebApplication.CreateBuilder(args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add services to the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddControllersWithViews();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Attach an EF Core database context to each query&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddDbContext&amp;lt;MvcMovieContext&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> app = builder.Build();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Seed data into DB&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SeedData.Init();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="création-dapi-web" >Création d&amp;rsquo;API web
&lt;span>
&lt;a href="#cr%c3%a9ation-dapi-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-notion-dapi" >La notion d&amp;rsquo;API
&lt;span>
&lt;a href="#la-notion-dapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une &lt;strong>API&lt;/strong> (&lt;em>Application Programming Interface&lt;/em>) est un point d&amp;rsquo;entrée programmatique dans un système.&lt;/li>
&lt;li>Elle fournit un moyen d&amp;rsquo;interagir avec ce système.&lt;/li>
&lt;li>Les API permettent aux développeurs d&amp;rsquo;intégrer des services externes dans leurs applications.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="spécificités-des-api-web" >Spécificités des API web
&lt;span>
&lt;a href="#sp%c3%a9cificit%c3%a9s-des-api-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une &lt;strong>API web&lt;/strong> (appelée parfois service web) est une API accessible via les technologies du web : HTTP ou HTTPS.&lt;/li>
&lt;li>Les API web utilisent le plus souvent le format de donnée &lt;strong>JSON&lt;/strong>.&lt;/li>
&lt;li>Certaines sont librement utilisables mais la plupart nécessitent une authentification du client.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="le-format-json" >Le format JSON
&lt;span>
&lt;a href="#le-format-json">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>JSON = JavaScript Object Notation.&lt;/li>
&lt;li>Format de description de données structurées inspiré de la syntaxe des objets JavaScript.&lt;/li>
&lt;li>Contenu JSON = ensemble de paires champ/valeur.&lt;/li>
&lt;li>Types de valeur possibles : nombres, chaînes, booléens, tableaux, objets.&lt;/li>
&lt;li>A supplanté XML comme format standard pour les échanges de données via des API web.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-contenu-json" >Exemple de contenu JSON
&lt;span>
&lt;a href="#exemple-de-contenu-json">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;cars&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Peugeot&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;color&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;checkups&amp;#34;&lt;/span>: [&lt;span style="color:#0086f7;font-weight:bold">2015&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2017&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;model&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;Citroën&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;color&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;white&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;checkups&amp;#34;&lt;/span>: [&lt;span style="color:#0086f7;font-weight:bold">2003&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2005&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2007&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2009&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2011&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">2013&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="exemples-dapi-web" >Exemples d&amp;rsquo;API web
&lt;span>
&lt;a href="#exemples-dapi-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://pokeapi.co/">PokéAPI&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://swapi.dev/">Star Wars API&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/w/api.php?">Wikipedia&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.spotify.com/documentation/web-api/">Spotify&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.omdbapi.com/">OMDb API&lt;/a>&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="outils-pour-la-gestion-des-api-web" >Outils pour la gestion des API web
&lt;span>
&lt;a href="#outils-pour-la-gestion-des-api-web">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>N&amp;rsquo;importe quel navigateur pour les tests basiques.&lt;/li>
&lt;li>Extension &lt;a href="https://addons.mozilla.org/fr/firefox/addon/restclient/">RESTClient&lt;/a> pour Firefox.&lt;/li>
&lt;li>&lt;a href="https://www.getpostman.com/">Postman&lt;/a>.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="les-api-restful" >Les API RESTful
&lt;span>
&lt;a href="#les-api-restful">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>REST&lt;/strong> (&lt;em>REpresentational State Transfer&lt;/em>) est un ensemble de principes pour créer des API : client/serveur, pas de gestion d&amp;rsquo;état, etc.&lt;/li>
&lt;li>Une API web &lt;em>RESTful&lt;/em> (conforme au standard REST) expose une interface basée sur les commandes HTTP. Exemples :
&lt;ul>
&lt;li>&lt;code>GET /&amp;lt;ResourceName&amp;gt;/&amp;lt;id&amp;gt;&lt;/code> pour accéder à une ressource.&lt;/li>
&lt;li>&lt;code>POST /&amp;lt;ResourceName&amp;gt;&lt;/code> (avec les informations nécessaires dans le corps de la requête) pour la créer.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="fonctionnement-dune-api-web-avec-aspnet-core-mvc" >Fonctionnement d&amp;rsquo;une API web avec ASP.NET Core MVC
&lt;span>
&lt;a href="#fonctionnement-dune-api-web-avec-aspnet-core-mvc">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-6.0&amp;amp;tabs=visual-studio">&lt;img src="images/aspnetcore_api.png" alt="API call with ASP.NET Core">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="création-dun-contrôleur-dapi" >Création d&amp;rsquo;un contrôleur d&amp;rsquo;API
&lt;span>
&lt;a href="#cr%c3%a9ation-dun-contr%c3%b4leur-dapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Dans le répertoire &lt;code>Controllers/&lt;/code>.&lt;/li>
&lt;li>Hérite de la classe &lt;code>ControllerBase&lt;/code>.&lt;/li>
&lt;li>Associé aux routes du type &lt;code>api/{ApiControllerName}/&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-contrôleur-dapi" >Exemple de contrôleur d&amp;rsquo;API
&lt;span>
&lt;a href="#exemple-de-contr%c3%b4leur-dapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Dans le fichier &lt;code>Controllers/MovieApiController.cs&lt;/code>.&lt;/li>
&lt;li>La conversion au format JSON est implicite.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">readonly&lt;/span> MvcMovieContext _context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> MovieApiController(MvcMovieContext context)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context = context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: api/MovieApi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;ActionResult&amp;lt;IEnumerable&amp;lt;Movie&amp;gt;&amp;gt;&amp;gt; GetMovies()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.ToListAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="requêtes-synchrones" >Requêtes synchrones
&lt;span>
&lt;a href="#requ%c3%aates-synchrones">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://code-maze.com/asynchronous-programming-with-async-and-await-in-asp-net-core/">&lt;img src="images/sync-request-asp.net-core.png" alt="Synchronous requests">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="requêtes-asynchrones" >Requêtes asynchrones
&lt;span>
&lt;a href="#requ%c3%aates-asynchrones">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://code-maze.com/asynchronous-programming-with-async-and-await-in-asp-net-core/">&lt;img src="images/async-request-asp.net-core.png" alt="Asynchronous requests">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="résultat-de-lappel-à-lapi" >Résultat de l&amp;rsquo;appel à l&amp;rsquo;API
&lt;span>
&lt;a href="#r%c3%a9sultat-de-lappel-%c3%a0-lapi">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/movieapi.png" alt="Movie API">&lt;/p>
&lt;hr>
&lt;h3 id="accès-à-un-élément" >Accès à un élément
&lt;span>
&lt;a href="#acc%c3%a8s-%c3%a0-un-%c3%a9l%c3%a9ment">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: api/MovieApi/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpGet(&amp;#34;{id}&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;ActionResult&amp;lt;Movie&amp;gt;&amp;gt; GetMovie(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.FindAsync(id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> movie;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="test-daccès" >Test d&amp;rsquo;accès
&lt;span>
&lt;a href="#test-dacc%c3%a8s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Envoyer une requête HTTP GET vers l&amp;rsquo;URL &lt;a href="https://localhost:%7Bport%7D/api/movieapi/%7BmovieId%7D">https://localhost:{port}/api/movieapi/{movieId}&lt;/a>.&lt;/p>
&lt;p>&lt;img src="images/movieapi-getone.png" alt="Get one movie">&lt;/p>
&lt;hr>
&lt;h3 id="gestion-des-références-circulaires" >Gestion des références circulaires
&lt;span>
&lt;a href="#gestion-des-r%c3%a9f%c3%a9rences-circulaires">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La sérialisation JSON d&amp;rsquo;objets métier peut être compliquée par la présence d&amp;rsquo;associations bidirectionnelles.&lt;/li>
&lt;li>Dans ces cas, il faut configurer l&amp;rsquo;application (fichier &lt;code>Program.cs&lt;/code>) pour &lt;a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/preserve-references?pivots=dotnet-6-0">ignorer ou préserver les références circulaires&lt;/a>.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> System.Text.Json.Serialization;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> builder = WebApplication.CreateBuilder(args);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Add services to the container.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ignore circular references when serializing objects into JSON&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>builder.Services.AddControllersWithViews().AddJsonOptions(x =&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x.JsonSerializerOptions.ReferenceHandler = ReferenceHandler.IgnoreCycles);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="création-dun-élément" >Création d&amp;rsquo;un élément
&lt;span>
&lt;a href="#cr%c3%a9ation-dun-%c3%a9l%c3%a9ment">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// POST: api/MovieApi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// To protect from overposting attacks, see https://go.microsoft.com/fwlink/?linkid=2123754&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPost]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;ActionResult&amp;lt;Movie&amp;gt;&amp;gt; PostMovie(Movie movie)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Movies.Add(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> CreatedAtAction(nameof(GetMovie), &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> { id = movie.Id }, movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="test-de-création" >Test de création
&lt;span>
&lt;a href="#test-de-cr%c3%a9ation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Envoyer une requête HTTP POST en spécifiant la valeur du champ &lt;code>Content-type&lt;/code> à &lt;code>application/json&lt;/code>.&lt;/li>
&lt;li>Le contenu JSON de la requête doit inclure les propriétés obligatoires du nouvel élément.&lt;/li>
&lt;li>Exemple avec l&amp;rsquo;outil &lt;a href="https://curl.se/">curl&lt;/a>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -X POST -k -H &lt;span style="color:#0086d2">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> -i https://localhost:{port}/api/movieapi/ --data &lt;span style="color:#0086d2">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Title&amp;#34;: &amp;#34;1941&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;ReleaseDate&amp;#34;: &amp;#34;1979-12-14T00:00:00&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Genre&amp;#34;: &amp;#34;Comedy&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="mise-à-jour-dun-élément-existant" >Mise à jour d&amp;rsquo;un élément existant
&lt;span>
&lt;a href="#mise-%c3%a0-jour-dun-%c3%a9l%c3%a9ment-existant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// PUT: api/MovieApi/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// To protect from overposting attacks, see https://go.microsoft.com/fwlink/?linkid=2123754&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPut(&amp;#34;{id}&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; PutMovie(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id, Movie movie)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id != movie.Id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> BadRequest();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Entry(movie).State = EntityState.Modified;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (DbUpdateConcurrencyException)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (!MovieExists(id))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NoContent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Returns true if a movie with specified id already exists&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> MovieExists(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> _context.Movies.Any(m =&amp;gt; m.Id == id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="test-de-mise-à-jour" >Test de mise à jour
&lt;span>
&lt;a href="#test-de-mise-%c3%a0-jour">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Envoyer une requête HTTP PUT vers l&amp;rsquo;élément à modifier, en spécifiant la valeur du champ &lt;code>Content-type&lt;/code> à &lt;code>application/json&lt;/code>.&lt;/li>
&lt;li>Le contenu JSON de la requête doit inclure toutes les propriétés de l&amp;rsquo;élément modifié.&lt;/li>
&lt;li>Exemple avec l&amp;rsquo;outil &lt;a href="https://curl.se/">curl&lt;/a>:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>curl -X PUT -k -H &lt;span style="color:#0086d2">&amp;#39;Content-Type: application/json&amp;#39;&lt;/span> -i https://localhost:7294/api/movieapi/5 --data &lt;span style="color:#0086d2">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Id&amp;#34;: 5,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Title&amp;#34;: &amp;#34;1941 (movie)&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;ReleaseDate&amp;#34;: &amp;#34;1979-12-14T00:00:00&amp;#34;,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> &amp;#34;Genre&amp;#34;: &amp;#34;Comedy&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="suppression-dun-élément" >Suppression d&amp;rsquo;un élément
&lt;span>
&lt;a href="#suppression-dun-%c3%a9l%c3%a9ment">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Route(&amp;#34;api/[controller]&lt;/span>&lt;span style="color:#0086d2">&amp;#34;)]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2">&lt;/span>&lt;span style="color:#ff0086;font-weight:bold">[ApiController]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieApiController : ControllerBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// DELETE: api/MovieApi/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpDelete(&amp;#34;{id}&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; DeleteMovie(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.FindAsync(id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Movies.Remove(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NoContent();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="test-de-suppression" >Test de suppression
&lt;span>
&lt;a href="#test-de-suppression">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Envoyer une requête HTTP DELETE vers l&amp;rsquo;URL &lt;a href="https://localhost:%7Bport%7D/api/movieapi/%7BmovieId%7D">https://localhost:{port}/api/movieapi/{movieId}&lt;/a>.&lt;/p>
&lt;hr>
&lt;h3 id="récapitulatif--api-créée" >Récapitulatif : API créée
&lt;span>
&lt;a href="#r%c3%a9capitulatif--api-cr%c3%a9%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Route&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>GET /api/MovieApi&lt;/code>&lt;/td>
&lt;td>Renvoie tous les films&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>GET /api/MovieApi/{id}&lt;/code>&lt;/td>
&lt;td>Renvoie un film&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>POST /api/MovieApi&lt;/code>&lt;/td>
&lt;td>Ajoute un nouvel film&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>PUT /api/MovieApi/{id}&lt;/code>&lt;/td>
&lt;td>Met à jour un film&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>DELETE /api/MovieApi/{id}&lt;/code>&lt;/td>
&lt;td>Supprime un film&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="création-de-vues-html" >Création de vues HTML
&lt;span>
&lt;a href="#cr%c3%a9ation-de-vues-html">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="correspondance-entre-contrôleurs-et-vues" >Correspondance entre contrôleurs et vues
&lt;span>
&lt;a href="#correspondance-entre-contr%c3%b4leurs-et-vues">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Dans une méthode d&amp;rsquo;action &lt;code>{ActionName}&lt;/code> d&amp;rsquo;un contrôleur &lt;code>Controllers/{CtrlName}Controller&lt;/code>, l&amp;rsquo;appel de &lt;code>View()&lt;/code>déclenche le rendu de la vue &lt;code>Views/{CtrlName}/{ActionName}.cshtml&lt;/code>.&lt;/li>
&lt;li>Le résultat HTML de ce rendu constitue la réponse HTTP renvoyée par le serveur au client.&lt;/li>
&lt;li>Nécessite que le contrôleur hérite de &lt;code>Controller&lt;/code> et non &lt;code>ControllerBase&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="la-syntaxe-des-vues" >La syntaxe des vues
&lt;span>
&lt;a href="#la-syntaxe-des-vues">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0">Razor&lt;/a> est un langage de balisage permettant d&amp;rsquo;inclure du code C# dans des pages web.&lt;/li>
&lt;li>Le symbole &lt;code>@&lt;/code> permet de basculer du HTML au C# dans la page. Il peut être suivi :
&lt;ul>
&lt;li>d&amp;rsquo;une expression implicite sans espaces &lt;code>@maVariable&lt;/code>&lt;/li>
&lt;li>d&amp;rsquo;une expression explicite entre parenthèses &lt;code>@(nb1 + nb2)&lt;/code>&lt;/li>
&lt;li>d&amp;rsquo;un &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0#razor-reserved-keywords">mot-clé Razor&lt;/a>.&lt;/li>
&lt;li>d&amp;rsquo;un bloc de code C# entre accolades &lt;code>@{...}&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="structure-commune-des-vues" >Structure commune des vues
&lt;span>
&lt;a href="#structure-commune-des-vues">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Par défaut, toutes les vues partagent une structure commune définie dans le fichier &lt;code>Views/Shared/_Layout.cshtml&lt;/code>.&lt;/li>
&lt;li>Dans ce layout, la fonction &lt;code>@RenderBody()&lt;/code> permet de générer le contenu spécifique de la vue à afficher.&lt;/li>
&lt;li>Les éléments externes (exemples : inclusions CSS ou JavaScript) peuvent être rassemblés dans des &lt;strong>sections&lt;/strong> affichées par le layout.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple-de-layout" >Exemple de layout
&lt;span>
&lt;a href="#exemple-de-layout">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0007;background-color:#0f140f;font-weight:bold;font-style:italic">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">html&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">lang&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;en&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">meta&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">charset&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;utf-8&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">title&lt;/span>&amp;gt;@ViewData[&amp;#34;Title&amp;#34;] - Movie App&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">header&lt;/span>&amp;gt;&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&amp;lt;!-- ... --&amp;gt;&lt;/span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">header&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;container&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">main&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">role&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;main&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;pb-3&amp;#34;&lt;/span>&amp;gt;@RenderBody()&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">main&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">footer&lt;/span>&amp;gt;&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&amp;lt;!-- ... --&amp;gt;&lt;/span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">footer&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">script&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">src&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;~/lib/jquery/dist/jquery.min.js&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">script&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @await RenderSectionAsync(&amp;#34;Scripts&amp;#34;, required: false)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--rendu-dune-vue" >Exemple : rendu d&amp;rsquo;une vue
&lt;span>
&lt;a href="#exemple--rendu-dune-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à la route &lt;code>/Hello&lt;/code> dans le fichier &lt;code>Controllers/HelloController.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloController : Controller &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// not ControllerBase!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: /Hello/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Renders Views/Hello/Index.cshtml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--possibilités-de-base" >Exemple : possibilités de base
&lt;span>
&lt;a href="#exemple--possibilit%c3%a9s-de-base">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Hello/Index.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@*
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This view demonstrates some possibilities of the Razor syntax.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (This is a server-side comment, by the way).
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*@
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Hello ASP.NET Core MVC!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @* Some info about a famous monument. *@
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string monument = &amp;#34;Eiffel Tower&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> int year = 1889;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;The @monument was inaugurated in @year. It is @(DateTime.Now.Year - year) years old!&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--structures-de-contrôle-et-tableaux" >Exemple : structures de contrôle et tableaux
&lt;span>
&lt;a href="#exemple--structures-de-contr%c3%b4le-et-tableaux">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string[] colors = { &amp;#34;blue&amp;#34;, &amp;#34;brown&amp;#34;, &amp;#34;black&amp;#34; };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@if (colors.Length &amp;gt; 0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;A few colors:&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">ul&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @foreach (string color in colors)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">li&lt;/span>&amp;gt;Color: @color&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">li&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">ul&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0#control-structures">Plus de détails&lt;/a>)&lt;/p>
&lt;hr>
&lt;h3 id="blocs-de-code-razor" >Blocs de code Razor
&lt;span>
&lt;a href="#blocs-de-code-razor">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Définis par la syntaxe &lt;code>@{...}&lt;/code>.&lt;/li>
&lt;li>Le code C# contenu n&amp;rsquo;est pas rendu (= pas ajouté au résultat HTML renvoyé).&lt;/li>
&lt;li>A l&amp;rsquo;intérieur d&amp;rsquo;un bloc,
&lt;ul>
&lt;li>les balises HTML permettent de basculer du C# au HTML.&lt;/li>
&lt;li>la balise &lt;code>&amp;lt;text&amp;gt;&lt;/code> permet de demander explicitement le rendu HTML d&amp;rsquo;un contenu C# sans balises.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--blocs-razor-et-fonctions" >Exemple : blocs Razor et fonctions
&lt;span>
&lt;a href="#exemple--blocs-razor-et-fonctions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> void RenderStrong(string value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">strong&lt;/span>&amp;gt;@value&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">strong&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> int count = 5;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> while (count &amp;gt; 0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">text&lt;/span>&amp;gt;@count... &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">text&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> count--;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> RenderStrong(&amp;#34;BOOM!&amp;#34;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="liens" >Liens
&lt;span>
&lt;a href="#liens">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Comme en HTML, les balises &lt;code>&amp;lt;a&amp;gt;&lt;/code> sont utilisées pour les créer.&lt;/li>
&lt;li>Les attributs &lt;code>asp-controller&lt;/code>, &lt;code>asp-action&lt;/code>, &lt;code>asp-route-id&lt;/code> et &lt;code>asp-route-{paramName}&lt;/code> permettent la navigation entre actions.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string visitorName = &amp;#34;Garance&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Here&amp;#39;s an &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">href&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;https://fr.wikipedia.org/wiki/Tour_Eiffel&amp;#34;&lt;/span>&amp;gt;external link&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-controller&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Home&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;link to the home page&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and a &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Welcome&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-name&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@visitorName&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-numtimes&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;5&amp;#34;&lt;/span>&amp;gt;link with parameters&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--vue-générée" >Exemple : vue générée
&lt;span>
&lt;a href="#exemple--vue-g%c3%a9n%c3%a9r%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/helloview.png" alt="Hello View">&lt;/p>
&lt;hr>
&lt;h3 id="envoi-de-données-aux-vues--viewdata" >Envoi de données aux vues : ViewData
&lt;span>
&lt;a href="#envoi-de-donn%c3%a9es-aux-vues--viewdata">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Approche &lt;em>faiblement typée&lt;/em> : on rassemble les paramètres de la vue dans un dictionnaire nommé &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/overview?view=aspnetcore-6.0#weakly-typed-data-viewdata-viewdata-attribute-and-viewbag">ViewData&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> HelloController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: /Hello/Welcome/ &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Welcome(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> name, &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> numTimes = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&lt;span style="color:#0086d2">&amp;#34;Message&amp;#34;&lt;/span>] = &lt;span style="color:#0086d2">&amp;#34;Hello &amp;#34;&lt;/span> + name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&lt;span style="color:#0086d2">&amp;#34;NumTimes&amp;#34;&lt;/span>] = numTimes;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple-dutilisation-de-viewdata" >Exemple d&amp;rsquo;utilisation de ViewData
&lt;span>
&lt;a href="#exemple-dutilisation-de-viewdata">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Dans le fichier &lt;code>Views/Hello/Welcome.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span>] = &lt;span style="color:#0086d2">&amp;#34;Welcome&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> numTimes = (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>)ViewData[&lt;span style="color:#0086d2">&amp;#34;NumTimes&amp;#34;&lt;/span>]!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;h2&amp;gt;Welcome!&amp;lt;/h2&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;ul&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @for (&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>; i &amp;lt; numTimes; i++)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;li&amp;gt;@ViewData[&lt;span style="color:#0086d2">&amp;#34;Message&amp;#34;&lt;/span>]&amp;lt;/li&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/ul&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="résultat-obtenu" >Résultat obtenu
&lt;span>
&lt;a href="#r%c3%a9sultat-obtenu">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/welcomeview.png" alt="Hello View">&lt;/p>
&lt;hr>
&lt;h3 id="envoi-de-données-aux-vues--model" >Envoi de données aux vues : @model
&lt;span>
&lt;a href="#envoi-de-donn%c3%a9es-aux-vues--model">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approche &lt;em>fortement typée&lt;/em> : dans une vue, la directive &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-6.0#model">@model&lt;/a> définit le type du modèle (= la source de données) passé à la vue.&lt;/li>
&lt;li>Dans cette vue :
&lt;ul>
&lt;li>l&amp;rsquo;instance associée est accessible via la propriété (typée) &lt;code>Model&lt;/code> ;&lt;/li>
&lt;li>&lt;code>@Html.DisplayNameFor&lt;/code> renvoie le nom d&amp;rsquo;une propriété du modèle (&lt;a href="https://stackoverflow.com/questions/61925486/html-displaynamefor-list-vs-ienumerable-in-razor">explication&lt;/a>).&lt;/li>
&lt;li>&lt;code>@Html.DisplayFor&lt;/code> renvoie la valeur d&amp;rsquo;une propriété du modèle.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--liste-des-films-contrôleur" >Exemple : liste des films (contrôleur)
&lt;span>
&lt;a href="#exemple--liste-des-films-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Controllers/MovieController.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">readonly&lt;/span> MvcMovieContext _context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> MovieController(MvcMovieContext context)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context = context;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movie&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Index()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movies = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.OrderBy(m =&amp;gt; m.Title).ToListAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movies);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--liste-des-films-vue" >Exemple : liste des films (vue)
&lt;span>
&lt;a href="#exemple--liste-des-films-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Movie/Index.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model IEnumerable&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">MvcMovie.Models.Movie&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Movies&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Movies&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Create&amp;#34;&lt;/span>&amp;gt;Create New&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">p&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">table&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;table&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">thead&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">tr&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">th&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">tr&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">thead&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">tbody&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @foreach (var item in Model)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">tr&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(modelItem =&amp;gt; item.Title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(modelItem =&amp;gt; item.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(modelItem =&amp;gt; item.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Edit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@item.Id&amp;#34;&lt;/span>&amp;gt;Edit&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Details&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@item.Id&amp;#34;&lt;/span>&amp;gt;Details&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Delete&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@item.Id&amp;#34;&lt;/span>&amp;gt;Delete&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">td&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">tr&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">tbody&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">table&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--liste-des-films-résultat" >Exemple : liste des films (résultat)
&lt;span>
&lt;a href="#exemple--liste-des-films-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/movielist.png" alt="Hello View">&lt;/p>
&lt;hr>
&lt;h3 id="envoi-de-données-aux-vues--viewmodel" >Envoi de données aux vues : ViewModel
&lt;span>
&lt;a href="#envoi-de-donn%c3%a9es-aux-vues--viewmodel">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approche &lt;em>fortement typée&lt;/em> : on définit une classe spécifique pour porter les données de la vue.&lt;/li>
&lt;li>Utile quand les données nécessaires à la vue sont issues de différentes classes métier.&lt;/li>
&lt;li>Principe du patron &lt;a href="https://learn.microsoft.com/en-us/dotnet/architecture/maui/mvvm">MVVM&lt;/a> (&lt;em>Model-View-ViewModel&lt;/em>).&lt;/li>
&lt;li>&lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/views/overview?view=aspnetcore-6.0#strongly-typed-data-viewmodel">Plus de détails&lt;/a>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--détails-sur-un-film-contrôleur" >Exemple : détails sur un film (contrôleur)
&lt;span>
&lt;a href="#exemple--d%c3%a9tails-sur-un-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à la route &lt;code>/Movie/Details/{Id}&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movies/Details/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Details(&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .FirstOrDefaultAsync(m =&amp;gt; m.Id == id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--détails-sur-un-film-vue" >Exemple : détails sur un film (vue)
&lt;span>
&lt;a href="#exemple--d%c3%a9tails-sur-un-film-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Movie/Details.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model MvcMovie.Models.Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Details&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;@Html.DisplayFor(model =&amp;gt; model.Title)&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">hr&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dl&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dl&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Edit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-route-id&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;@Model.Id&amp;#34;&lt;/span>&amp;gt;Edit&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;Back to List&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--détails-sur-un-film-résultat" >Exemple : détails sur un film (résultat)
&lt;span>
&lt;a href="#exemple--d%c3%a9tails-sur-un-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviedetails.png" alt="Movie details">&lt;/p>
&lt;hr>
&lt;h3 id="envoi-de-données-depuis-une-vue" >Envoi de données depuis une vue
&lt;span>
&lt;a href="#envoi-de-donn%c3%a9es-depuis-une-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>S&amp;rsquo;effectue via un &lt;strong>formulaire&lt;/strong> dont la soumission déclenche l&amp;rsquo;envoi au serveur d&amp;rsquo;une requête HTTP POST.&lt;/li>
&lt;li>Les champs du formulaire sont implicitement associés aux paramètres de l&amp;rsquo;action du contrôleur qui reçoit la requête POST.&lt;/li>
&lt;li>Les &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-6.0#built-in-attributes">annotations du modèle&lt;/a> définissent des &lt;a href="https://learn.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/validation?view=aspnetcore-6.0">règles de validation&lt;/a> automatiquement vérifiées côté client et utilisables côté serveur.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exemple--classe-métier-annotée" >Exemple : classe métier annotée
&lt;span>
&lt;a href="#exemple--classe-m%c3%a9tier-annot%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Models/Movie.cs&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> System.ComponentModel.DataAnnotations;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> Id { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(100, MinimumLength = 3)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Title { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [Display(Name = &amp;#34;Release Date&amp;#34;), DataType(DataType.Date)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DateTime ReleaseDate { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [StringLength(30)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Genre { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; } = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>!;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-dajout-dun-film-contrôleur" >Exemple : formulaire d&amp;rsquo;ajout d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--formulaire-dajout-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP GET vers la route &lt;code>/Movie/Create&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movie/Create&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> IActionResult Create()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-dajout-dun-film-vue" >Exemple : formulaire d&amp;rsquo;ajout d&amp;rsquo;un film (vue)
&lt;span>
&lt;a href="#exemple--formulaire-dajout-dun-film-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Movie/Create.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model MvcMovie.Models.Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Create&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Create a Movie&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">hr&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-md-4&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Create&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-summary&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ModelOnly&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Create&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;btn btn-primary&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;Back to List&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@section Scripts {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{await Html.RenderPartialAsync(&amp;#34;_ValidationScriptsPartial&amp;#34;);}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-dajout-dun-film-résultat" >Exemple : formulaire d&amp;rsquo;ajout d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--formulaire-dajout-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviecreate.png" alt="Movie add">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--ajout-dun-film-contrôleur" >Exemple : ajout d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--ajout-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP POST vers la route &lt;code>/Movie/Create&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// POST: Movie/Create&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// To protect from overposting attacks, enable the specific properties you want to bind to.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPost]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [ValidateAntiForgeryToken]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Create([Bind(&lt;span style="color:#0086d2">&amp;#34;Id,Title,ReleaseDate,Genre&amp;#34;&lt;/span>)] Movie movie)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Apply model validation rules&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (ModelState.IsValid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Add(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> RedirectToAction(nameof(Index));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// At this point, something failed: redisplay form&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--ajout-dun-film-résultat" >Exemple : ajout d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--ajout-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviecreateresult.png" alt="Movie add result">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--formulaire-de-mise-à-jour-dun-film-contrôleur" >Exemple : formulaire de mise à jour d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--formulaire-de-mise-%c3%a0-jour-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP GET vers la route &lt;code>/Movie/Edit/{Id}&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movies/Edit/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Edit(&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.FindAsync(id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-de-mise-à-jour-dun-film-vue" >Exemple : formulaire de mise à jour d&amp;rsquo;un film (vue)
&lt;span>
&lt;a href="#exemple--formulaire-de-mise-%c3%a0-jour-dun-film-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Fichier &lt;code>Views/Movie/Edit.cshtml&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model MvcMovie.Models.Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Edit&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Edit a Movie&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">hr&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-md-4&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Edit&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-summary&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ModelOnly&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Id&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Title&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;ReleaseDate&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;control-label&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">label&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-control&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-validation-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Genre&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;text-danger&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;form-group&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Save&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;btn btn-primary&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;Back to List&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@section Scripts {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{await Html.RenderPartialAsync(&amp;#34;_ValidationScriptsPartial&amp;#34;);}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--formulaire-de-mise-à-jour-dun-film-résultat" >Exemple : formulaire de mise à jour d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--formulaire-de-mise-%c3%a0-jour-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/movieedit.png" alt="Movie edit">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--mise-à-jour-dun-film-contrôleur" >Exemple : mise à jour d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--mise-%c3%a0-jour-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP POST vers la route &lt;code>/Movie/Edit&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// POST: Movies/Edit/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// To protect from overposting attacks, enable the specific properties you want to bind to.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// For more details, see http://go.microsoft.com/fwlink/?LinkId=317598.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPost]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [ValidateAntiForgeryToken]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Edit(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id, [Bind(&lt;span style="color:#0086d2">&amp;#34;Id,Title,ReleaseDate,Genre&amp;#34;&lt;/span>)] Movie movie)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id != movie.Id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (ModelState.IsValid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Update(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (DbUpdateConcurrencyException)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (!MovieExists(movie.Id))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> RedirectToAction(nameof(Index));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">bool&lt;/span> MovieExists(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> _context.Movies.Any(e =&amp;gt; e.Id == id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--mise-à-jour-dun-film-résultat" >Exemple : mise à jour d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--mise-%c3%a0-jour-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/movieeditresult.png" alt="Movie edit result">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--avertissement-avant-suppression-dun-film-contrôleur" >Exemple : avertissement avant suppression d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--avertissement-avant-suppression-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à la route &lt;code>Movie/Delete/{Id}&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// GET: Movies/Delete/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; Delete(&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (id == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .FirstOrDefaultAsync(m =&amp;gt; m.Id == id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (movie == &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> NotFound();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> View(movie);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--avertissement-avant-suppression-dun-film-vue" >Exemple : avertissement avant suppression d&amp;rsquo;un film (vue)
&lt;span>
&lt;a href="#exemple--avertissement-avant-suppression-dun-film-vue">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>@model MvcMovie.Models.Movie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ViewData[&amp;#34;Title&amp;#34;] = &amp;#34;Delete&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;Delete a Movie&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">h4&lt;/span>&amp;gt;Are you sure?&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">h4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">hr&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dl&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;row&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.Title)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.ReleaseDate)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-3&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayNameFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dt&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;col-sm-9&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @Html.DisplayFor(model =&amp;gt; model.Genre)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dd&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">dl&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Delete&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;hidden&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-for&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Id&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">input&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">type&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">value&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Delete&amp;#34;&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">class&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;btn btn-danger&amp;#34;&lt;/span> /&amp;gt; |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span> &lt;span style="color:#ff0086;font-weight:bold">asp-action&lt;/span>=&lt;span style="color:#0086d2">&amp;#34;Index&amp;#34;&lt;/span>&amp;gt;Back to List&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#fb660a;font-weight:bold">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--avertissement-avant-suppression-dun-film-résultat" >Exemple : avertissement avant suppression d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--avertissement-avant-suppression-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviedelete.png" alt="Movie deletion">&lt;/p>
&lt;hr>
&lt;h3 id="exemple--suppression-dun-film-contrôleur" >Exemple : suppression d&amp;rsquo;un film (contrôleur)
&lt;span>
&lt;a href="#exemple--suppression-dun-film-contr%c3%b4leur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Méthode d&amp;rsquo;action associée à une requête HTTP POST vers la route &lt;code>Movie/Delete&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.AspNetCore.Mvc;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> Microsoft.EntityFrameworkCore;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Data;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">using&lt;/span> MvcMovie.Models;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">namespace&lt;/span> MvcMovie.Controllers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MovieController : Controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// POST: Movies/Delete/5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [HttpPost, ActionName(&amp;#34;Delete&amp;#34;)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold"> [ValidateAntiForgeryToken]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task&amp;lt;IActionResult&amp;gt; DeleteConfirmed(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> id)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> movie = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.Movies.FindAsync(id);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _context.Movies.Remove(movie!);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> _context.SaveChangesAsync();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> RedirectToAction(nameof(Index));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="exemple--suppression-dun-film-résultat" >Exemple : suppression d&amp;rsquo;un film (résultat)
&lt;span>
&lt;a href="#exemple--suppression-dun-film-r%c3%a9sultat">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/moviedeleteresult.png" alt="Movie deletion result">&lt;/p>
&lt;hr>
&lt;h2 id="to-be-continued" >To be continued
&lt;span>
&lt;a href="#to-be-continued">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>&lt;img src="images/late-work-oh-you-have-a-good-reason-meme.jpg" alt="Late">&lt;/p></description></item><item><title>C# : rappels et compléments</title><link>https://www.bpesquet.fr/slides/csharp/</link><pubDate>Thu, 16 Sep 2021 11:15:17 +0200</pubDate><guid>https://www.bpesquet.fr/slides/csharp/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Rappels sur la POO&lt;/li>
&lt;li>Gestion des objets en mémoire&lt;/li>
&lt;li>Gestion des exceptions&lt;/li>
&lt;li>Possibilités syntaxiques récentes&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="rappels-sur-la-poo" >Rappels sur la POO
&lt;span>
&lt;a href="#rappels-sur-la-poo">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="la-poo-en-bref" >La POO en bref
&lt;span>
&lt;a href="#la-poo-en-bref">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>Objet&lt;/strong> : entité qui modélise (représente) un élément du domaine étudié.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Objet = état + actions.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Objet != &lt;strong>classe&lt;/strong> :&lt;/p>
&lt;ul>
&lt;li>Classe : modèle d’objet (type).&lt;/li>
&lt;li>Objet : exemplaire concret, &lt;strong>instance&lt;/strong> d’une classe.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>POO&lt;/strong> : paradigme d&amp;rsquo;écriture de logiciels sous forme d’objets en interaction&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="représentation-graphique-dune-classe" >Représentation graphique d&amp;rsquo;une classe
&lt;span>
&lt;a href="#repr%c3%a9sentation-graphique-dune-classe">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Le standard : diagramme de classes &lt;strong>UML&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="images/uml_class_diagram.png" alt="Exemple de diagramme UML">&lt;/p>
&lt;hr>
&lt;h3 id="notion-de-propriété-en-c" >Notion de propriété en C#
&lt;span>
&lt;a href="#notion-de-propri%c3%a9t%c3%a9-en-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Propriété au sens de la majorité des langages à objets = &lt;strong>attribut&lt;/strong> ou &lt;strong>champ&lt;/strong>.&lt;/li>
&lt;li>Propriété au sens du C# = &lt;strong>accesseur&lt;/strong> vers un attribut.&lt;/li>
&lt;li>Les propriétés permettent de concilier accès aux données de l’objet et &lt;strong>encapsulation&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="propriété-avec-attribut-explicite" >Propriété avec attribut explicite
&lt;span>
&lt;a href="#propri%c3%a9t%c3%a9-avec-attribut-explicite">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Déclaration explicite de l’attribut (le plus souvent &lt;strong>privé&lt;/strong>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c#" data-lang="c#">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">private&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> titulaire;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Titulaire {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span> { &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> titulaire; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span> { titulaire = &lt;span style="color:#fb660a;font-weight:bold">value&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monCompte.Titulaire = &lt;span style="color:#0086d2">&amp;#34;Marco&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Avantage : possibilité de contrôles dans les accesseurs (validation de la novuelle valeur, etc).&lt;/p>
&lt;hr>
&lt;h3 id="propriété-auto-implémentée" >Propriété auto-implémentée
&lt;span>
&lt;a href="#propri%c3%a9t%c3%a9-auto-impl%c3%a9ment%c3%a9e">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Création implicite de l’attribut par le langage.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> Titulaire { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monCompte.Titulaire = &lt;span style="color:#0086d2">&amp;#34;Marco&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Avantage : concision.&lt;/li>
&lt;li>Bien adaptée aux cas simples (sans besoin de logique).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="gestion-des-objets-en-mémoire" >Gestion des objets en mémoire
&lt;span>
&lt;a href="#gestion-des-objets-en-m%c3%a9moire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="classe-dexemple" >Classe d&amp;rsquo;exemple
&lt;span>
&lt;a href="#classe-dexemple">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/example_class.png" alt="Classe d&amp;rsquo;exemple">&lt;/p>
&lt;hr>
&lt;h3 id="affectation-entre-entiers" >Affectation entre entiers
&lt;span>
&lt;a href="#affectation-entre-entiers">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre1 = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre2 = &lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre2 = nombre1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>nombre1 = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;nombre1 = &amp;#34;&lt;/span> + nombre1); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;nombre2 = &amp;#34;&lt;/span> + nombre2); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="affectation-entre-objets" >Affectation entre objets
&lt;span>
&lt;a href="#affectation-entre-objets">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>Cercle cercle1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cercle1 = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Cercle(&lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cercle cercle2 = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Cercle(&lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cercle2 = cercle1;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cercle1.Rayon = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;cercle1.Rayon = &amp;#34;&lt;/span> + cercle1.Rayon); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;cercle2.Rayon = &amp;#34;&lt;/span> + cercle2.Rayon); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>&lt;img src="images/object_result.png" alt="Réssultat de l&amp;rsquo;exécution">&lt;/p>
&lt;p>&lt;img src="images/omg.png" alt="OMG">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="types-valeur" >Types valeur
&lt;span>
&lt;a href="#types-valeur">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Type pour lequel la valeur est directement stockée dans la variable.&lt;/li>
&lt;li>Types de bases C# : &lt;code>int&lt;/code>, &lt;code>float&lt;/code>, &lt;code>double&lt;/code>&amp;hellip;&lt;/li>
&lt;li>Création d’une variable =&amp;gt; réservation d’une zone mémoire pour stocker sa valeur.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/value_types.png" alt="Exemple avec types valeur">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="types-référence" >Types référence
&lt;span>
&lt;a href="#types-r%c3%a9f%c3%a9rence">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Type pour lequel l&amp;rsquo;instanciation d’un exemplaire déclenche la réservation d’une zone mémoire pour ses données, mais la &amp;ldquo;valeur&amp;rdquo; de l’exemplaire est une &lt;strong>référence&lt;/strong> vers cette zone.&lt;/li>
&lt;li>Exemples : objets et tableaux.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/reference_types.png" alt="Exemple avec types référence">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="types-référence-et-affectation" >Types référence et affectation
&lt;span>
&lt;a href="#types-r%c3%a9f%c3%a9rence-et-affectation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>La valeur de la variable source (une référence) est copiée dans la variable cible.&lt;/li>
&lt;li>Les deux variables &lt;em>pointent&lt;/em> vers la même zone mémoire&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/reference_types_assignment.png" alt="Diagramme d&amp;rsquo;exécution">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="passage-dun-type-valeur-en-paramètre" >Passage d’un type valeur en paramètre
&lt;span>
&lt;a href="#passage-dun-type-valeur-en-param%c3%a8tre">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Main(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>[] args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> nombre = &lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Avant l&amp;#39;appel, nombre = &amp;#34;&lt;/span> + nombre); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Augmenter(nombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Après l&amp;#39;appel, nombre = &amp;#34;&lt;/span> + nombre); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Augmenter(&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> unNombre) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Avant l&amp;#39;augmentation, unNombre = &amp;#34;&lt;/span> + unNombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unNombre = unNombre + &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Après l&amp;#39;augmentation, unNombre = &amp;#34;&lt;/span> + unNombre);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="résultat-de-lexécution" >Résultat de l&amp;rsquo;exécution
&lt;span>
&lt;a href="#r%c3%a9sultat-de-lex%c3%a9cution">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/value_types_parameter_passing.png" alt="Résultat de l&amp;rsquo;exécution">&lt;/p>
&lt;ul>
&lt;li>La valeur de l’argument (un nombre entier) est copiée dans le paramètre.&lt;/li>
&lt;li>Argument et paramètre correspondent à des zones mémoire différentes.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/value_types_parameter_passing_diagram.png" alt="Diagramme d&amp;rsquo;exécution">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="passage-dun-objet-en-paramètre" >Passage d’un objet en paramètre
&lt;span>
&lt;a href="#passage-dun-objet-en-param%c3%a8tre">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Main(&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>[] args) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cercle cercle = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Cercle(&lt;span style="color:#0086f7;font-weight:bold">5&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Avant l&amp;#39;appel, cercle.Rayon = &amp;#34;&lt;/span> + cercle.Rayon); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AugmenterRayon(cercle);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Après l&amp;#39;appel, cercle.Rayon = &amp;#34;&lt;/span> + cercle.Rayon); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">static&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> AugmenterRayon(Cercle unCercle) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Avant l&amp;#39;augmentation, unCercle.Rayon = &amp;#34;&lt;/span> + unCercle.Rayon);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> unCercle.Rayon = unCercle.Rayon + &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Après l&amp;#39;augmentation, unCercle.Rayon = &amp;#34;&lt;/span> + unCercle.Rayon);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="résultat-de-lexécution" >Résultat de l&amp;rsquo;exécution
&lt;span>
&lt;a href="#r%c3%a9sultat-de-lex%c3%a9cution">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/object_parameter_passing.png" alt="Résultat de l&amp;rsquo;exécution">&lt;/p>
&lt;ul>
&lt;li>La valeur de l’argument (une &lt;strong>référence&lt;/strong>) est copiée dans le paramètre.&lt;/li>
&lt;li>Argument et paramètre pointent vers la même zone mémoire.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/object_parameter_passing_diagram.png" alt="Diagramme d&amp;rsquo;exécution">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="mode-de-passage-des-paramètres-en-c" >Mode de passage des paramètres en C#
&lt;span>
&lt;a href="#mode-de-passage-des-param%c3%a8tres-en-c">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Par défaut, &lt;strong>tous les paramètres sont passés par valeur&lt;/strong>.&lt;/li>
&lt;li>Types valeur : valeur copiée de l’argument vers le paramètre =&amp;gt; zones mémoire distinctes.&lt;/li>
&lt;li>Types référence : référence copiée de l’argument vers le paramètre =&amp;gt; même zone mémoire.&lt;/li>
&lt;li>Possibilité de modifier ce comportement avec les mots-clés &lt;code>ref&lt;/code> et &lt;code>out&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="gestion-des-exceptions" >Gestion des exceptions
&lt;span>
&lt;a href="#gestion-des-exceptions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="introduction" >Introduction
&lt;span>
&lt;a href="#introduction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Exception&lt;/strong> : évènement qui apparaît pendant le déroulement d&amp;rsquo;un programme et qui empêche la poursuite normale de son exécution
&lt;ul>
&lt;li>Exemples : BD inaccessible, fichier non trouvé, bug interne…&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Gestion des exceptions : technique de gestion des erreurs dans un programme&lt;/li>
&lt;li>Avantage : séparation du code applicatif du code de gestion des erreurs&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="les-exceptions--syntaxe" >Les exceptions : syntaxe
&lt;span>
&lt;a href="#les-exceptions--syntaxe">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// code susceptible de lever des exceptions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// code de gestion de l’exception apparue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">finally&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// code exécuté systématiquement&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// levée d’une nouvelle exception&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Exception(&lt;span style="color:#0086d2">&amp;#34;Message d’erreur&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="les-exceptions--dynamique" >Les exceptions : dynamique
&lt;span>
&lt;a href="#les-exceptions--dynamique">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Une exception levée remonte la chaîne des appels dans l&amp;rsquo;ordre inverse.&lt;/li>
&lt;li>Issues possibles :
&lt;ul>
&lt;li>interception dans un bloc &lt;code>catch&lt;/code>.&lt;/li>
&lt;li>arrêt brutal du programme.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/exceptionx_dynamic.png" alt="Dynamique des exceptions">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h3 id="la-hiérarchie-des-exceptions" >La hiérarchie des exceptions
&lt;span>
&lt;a href="#la-hi%c3%a9rarchie-des-exceptions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/exceptions_hierarchy.png" alt="Hiérarchie des exceptions">&lt;/p>
&lt;hr>
&lt;h3 id="création-de-classes-dexceptions" >Création de classes d&amp;rsquo;exceptions
&lt;span>
&lt;a href="#cr%c3%a9ation-de-classes-dexceptions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Potentiellement utile pour distinguer différentes catégories d&amp;rsquo;erreur, avec des données spécifiques.&lt;/p>
&lt;p>&lt;img src="images/exceptions_classes.png" alt="Classes d&amp;rsquo;exceptions">&lt;/p>
&lt;hr>
&lt;h3 id="exceptions-et-bonnes-pratiques-13" >Exceptions et bonnes pratiques (1/3)
&lt;span>
&lt;a href="#exceptions-et-bonnes-pratiques-13">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Lever une exception uniquement pour signaler qu’une exécution normale n’est plus possible.&lt;/li>
&lt;li>Ne pas utiliser les exceptions pour des situations non exceptionnelles (succès d’une recherche, fin d’une itération, etc).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>trouve = &lt;span style="color:#fb660a;font-weight:bold">false&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">while&lt;/span> (!trouve) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> i++;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">if&lt;/span> (i == &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Exception(&lt;span style="color:#0086d2">&amp;#34;Fin de la boucle&amp;#34;&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Antipattern&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">else&lt;/span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="exceptions-et-bonnes-pratiques-23" >Exceptions et bonnes pratiques (2/3)
&lt;span>
&lt;a href="#exceptions-et-bonnes-pratiques-23">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Intercepter les exceptions uniquement si un traitement approprié est possible (message d’erreur, nouvelle tentative, etc)&lt;/li>
&lt;li>Sinon, la laisser remonter la chaîne des appels vers un meilleur endroit.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (Exception e) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">throw&lt;/span> e; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Antipattern : bloc inutile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">catch&lt;/span> (Exception) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Antipattern : exception &amp;#34;avalée&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="exceptions-et-bonnes-pratiques-33" >Exceptions et bonnes pratiques (3/3)
&lt;span>
&lt;a href="#exceptions-et-bonnes-pratiques-33">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Bien réfléchir avant de créer ses propres classes d’exception.
&lt;ul>
&lt;li>En deça d’une certaine complexité, utiliser la classe standard &lt;code>Exception&lt;/code> suffit souvent.&lt;/li>
&lt;li>Toujours inclure le mot &lt;em>Exception&lt;/em> dans le nom de la classe.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Code de gestion des erreurs &lt;code>&amp;lt;&amp;lt;&lt;/code> code applicatif.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="possibilités-syntaxiques-récentes" >Possibilités syntaxiques récentes
&lt;span>
&lt;a href="#possibilit%c3%a9s-syntaxiques-r%c3%a9centes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="variables-sans-type-explicite" >Variables sans type explicite
&lt;span>
&lt;a href="#variables-sans-type-explicite">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Le mot-clé &lt;code>var&lt;/code> permet de déclarer des variables &lt;em>implicitement typées&lt;/em>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Typage explicite&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">10&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Typage implicite&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Usage possible 1 : simplification du code de création d&amp;rsquo;objets (pas de répétition du type)&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> l = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> List&amp;lt;&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span>&amp;gt;();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>l.Add(&lt;span style="color:#0086f7;font-weight:bold">3&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;p>Usage possible 2 : non-nécessité de créer un type spécifique pour le résultat d&amp;rsquo;une opération.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// var est nécessaire car la clause SELECT définit un type anonyme&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> custQuery = &lt;span style="color:#fb660a;font-weight:bold">from&lt;/span> cust &lt;span style="color:#fb660a;font-weight:bold">in&lt;/span> customers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">where&lt;/span> cust.City == &lt;span style="color:#0086d2">&amp;#34;Bordeaux&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">select&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> { cust.Name, cust.Phone };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Var est nécessaire car chaque élément de la collection est un type anonyme&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">foreach&lt;/span> (&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> item &lt;span style="color:#fb660a;font-weight:bold">in&lt;/span> custQuery)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Nom={0}, Téléphone={1}&amp;#34;&lt;/span>, item.Name, item.Phone);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/section>
&lt;hr>
&lt;h3 id="chaînes-de-caractères-interpolées" >Chaînes de caractères interpolées
&lt;span>
&lt;a href="#cha%c3%aenes-de-caract%c3%a8res-interpol%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Placé juste avant le début d&amp;rsquo;une chaîne, le caractère &lt;code>$&lt;/code> permet d&amp;rsquo;y insérer des expressions entre accolades &lt;code>{...}&lt;/code> qui seront évaluées pour produire la valeur de la chaîne.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span> name = &lt;span style="color:#0086d2">&amp;#34;Clément&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">var&lt;/span> date = DateTime.Now;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">&amp;#34;Hello, {0}! Today is {1}&amp;#34;&lt;/span>, name, date.DayOfWeek);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Console.WriteLine(&lt;span style="color:#0086d2">$&amp;#34;Hello, {name}! Today is {date.DayOfWeek}&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Ces deux lignes produisent un résultat identique, similaire à :&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Clément! Today is Monday&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="types-valeur-nullables" >Types valeur nullables
&lt;span>
&lt;a href="#types-valeur-nullables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Un type valeur auquel on accole le caractère &lt;code>?&lt;/code> peut stocker la valeur &lt;code>null&lt;/code> en plus de sa plage de valeurs habituelle.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> a = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Erreur: ce type de peut stocker que des valeurs entières&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int?&lt;/span> b = &lt;span style="color:#fb660a;font-weight:bold">null&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#cdcaa9;font-weight:bold">int&lt;/span> c = b ?? -&lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Conversion vers le type int&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Les types nullables facilitent la gestion des valeurs indéfinies (exemple : absence de valeur pour une colonne dans une BD).&lt;/p>
&lt;hr>
&lt;h3 id="annotations" >Annotations
&lt;span>
&lt;a href="#annotations">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Les &lt;strong>annotations&lt;/strong>, également appelées &lt;em>attributs&lt;/em>, permettent d&amp;rsquo;ajouter des &lt;strong>métadonnées&lt;/strong> (des informations supplémentaires) à certains éléments du code : types, méthodes, propriétés&amp;hellip;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[Serializable]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> ClasseExemple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Les instances de cette classe sont sérialisables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Cette propriété est associée à un type BD spécifique&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff0086;font-weight:bold">[DataType(DataType.Date)]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> DateTime ReleaseDate { &lt;span style="color:#fb660a;font-weight:bold">get&lt;/span>; &lt;span style="color:#fb660a;font-weight:bold">set&lt;/span>; }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;section data-shortcode-section>
&lt;h3 id="programmation-asynchrone" >Programmation asynchrone
&lt;span>
&lt;a href="#programmation-asynchrone">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>Exemple : la préparation d&amp;rsquo;un petit déjeuner.&lt;/p>
&lt;ol>
&lt;li>Verser le café dans une tasse.&lt;/li>
&lt;li>Faire chauffer la poêle, puis faire cuire deux œufs au plat.&lt;/li>
&lt;li>Faire frire trois tranches de bacon.&lt;/li>
&lt;li>Faire toaster deux tranches de pain.&lt;/li>
&lt;li>Étaler le beurre et la confiture sur les toasts.&lt;/li>
&lt;li>Verser du jus d’orange dans un verre.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>La plupart de ces tâches peuvent être exécutées simultanément.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="exécution-séquentielle-synchrone" >Exécution séquentielle (synchrone)
&lt;span>
&lt;a href="#ex%c3%a9cution-s%c3%a9quentielle-synchrone">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/">&lt;img src="images/synchronous-breakfast.png" alt="Synchronous breakfast">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="exécution-asynchrone" >Exécution asynchrone
&lt;span>
&lt;a href="#ex%c3%a9cution-asynchrone">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/">&lt;img src="images/async-breakfast.png" alt="Asynchronous breakfast">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="les-mots-clés-async-et-await" >Les mots-clés async et await
&lt;span>
&lt;a href="#les-mots-cl%c3%a9s-async-et-await">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Placé dans la signature d&amp;rsquo;une méthode, le mot-clé &lt;code>async&lt;/code> permet l&amp;rsquo;utilisation de &lt;code>await&lt;/code> dans le corps de cette méthode.&lt;/p>
&lt;p>Placé devant une expression, le mot-clé &lt;code>await&lt;/code> déclenche l&amp;rsquo;attente asynchrone de la fin de cette opération. Contrairement au comportement synchrone standard, le contexte d&amp;rsquo;exécution (&lt;em>thread&lt;/em>) courant n&amp;rsquo;est pas bloqué par cette attente.&lt;/p>
&lt;hr>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> Task DoSomethingAsync()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Asynchronously wait 100ms&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> Task.Delay(&lt;span style="color:#0086f7;font-weight:bold">100&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/section></description></item><item><title>Le langage JavaScript</title><link>https://www.bpesquet.fr/slides/javascript/</link><pubDate>Mon, 16 Dec 2019 21:50:46 +0100</pubDate><guid>https://www.bpesquet.fr/slides/javascript/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Pourquoi JavaScript ?&lt;/li>
&lt;li>Syntaxe du langage&lt;/li>
&lt;li>Environnement de travail&lt;/li>
&lt;li>TypeScript&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="pourquoi-javascript-" >Pourquoi JavaScript ?
&lt;span>
&lt;a href="#pourquoi-javascript-">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="javascript-is-eating-the-world" >JavaScript is eating the world
&lt;span>
&lt;a href="#javascript-is-eating-the-world">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/thus-javascript-is-eating-the-world.jpg" alt="JS is eating the world">&lt;/p>
&lt;hr>
&lt;h3 id="un-pré-requis-essentiel" >Un pré-requis essentiel
&lt;span>
&lt;a href="#un-pr%c3%a9-requis-essentiel">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La majorité des solutions mobiles multi-plateformes est basée sur JavaScript.&lt;/p>
&lt;p>&lt;img src="images/mobile_logos.png" alt="Frameworks multi-plateformes">&lt;/p>
&lt;hr>
&lt;h3 id="un-langage-modernisé" >Un langage modernisé
&lt;span>
&lt;a href="#un-langage-modernis%c3%a9">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>JavaScript est normalisé sous le nom &lt;strong>ECMAScript&lt;/strong>.&lt;/p>
&lt;p>&lt;img src="images/js_history.png" alt="ECMAScript releases">&lt;/p>
&lt;p>La norme &lt;strong>ES2015&lt;/strong> (ou ES6) a apporté de très nombreuses améliorations au langage.&lt;/p>
&lt;hr>
&lt;h2 id="syntaxe-du-langage" >Syntaxe du langage
&lt;span>
&lt;a href="#syntaxe-du-langage">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="déclaration-de-variables" >Déclaration de variables
&lt;span>
&lt;a href="#d%c3%a9claration-de-variables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>JavaScript est un langage à typage &lt;strong>dynamique&lt;/strong>.&lt;/p>
&lt;p>&lt;code>let&lt;/code> et &lt;code>const&lt;/code> remplacent avantageusement &lt;code>var&lt;/code> pour la déclaration des variables.&lt;/p>
&lt;p>La valeur d&amp;rsquo;une variable déclarée avec &lt;code>const&lt;/code> ne peut plus être modifiée.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> a = &lt;span style="color:#0086f7;font-weight:bold">3.14&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a = &lt;span style="color:#0086f7;font-weight:bold">6.28&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// OK
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> b = &lt;span style="color:#0086f7;font-weight:bold">3.14&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b = &lt;span style="color:#0086f7;font-weight:bold">6.28&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Erreur!
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="chaînes-de-caractères" >Chaînes de caractères
&lt;span>
&lt;a href="#cha%c3%aenes-de-caract%c3%a8res">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Créées avec des guillemets simples (&lt;code>'...'&lt;/code>) ou doubles (&lt;code>&amp;quot;...&amp;quot;&lt;/code>).&lt;/p>
&lt;p>&lt;strong>Litéraux de modèle&lt;/strong>: chaînes créées entre &lt;em>backticks&lt;/em> (`) et permettant d&amp;rsquo;intégrer des expressions.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> country = &lt;span style="color:#0086d2">&amp;#34;France&amp;#34;&lt;/span>; &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// or &amp;#39;France&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(&lt;span style="color:#0086d2">`I live in &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>country&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">`&lt;/span>); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;I live in France&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="déclaration-de-fonctions" >Déclaration de fonctions
&lt;span>
&lt;a href="#d%c3%a9claration-de-fonctions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> sayHello(name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> message = &lt;span style="color:#0086d2">`Hello, &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">!`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(sayHello(&lt;span style="color:#0086d2">&amp;#34;Richard&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Richard!&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="expressions-fonction" >Expressions fonction
&lt;span>
&lt;a href="#expressions-fonction">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Permettent de créer des fonctions anonymes.&lt;/p>
&lt;p>La valeur d&amp;rsquo;une variable JavaScript peut être une fonction.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> hello = &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> (name) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> message = &lt;span style="color:#0086d2">`Hello, &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">!`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(hello(&lt;span style="color:#0086d2">&amp;#34;Richard&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Richard!&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="fonctions-fléchées" >Fonctions fléchées
&lt;span>
&lt;a href="#fonctions-fl%c3%a9ch%c3%a9es">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&amp;ldquo;&lt;em>Fat arrow functions&lt;/em>&amp;rdquo;.&lt;/p>
&lt;p>Syntaxe plus concise pour créer des fonctions anonymes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> hello = (name) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> message = &lt;span style="color:#0086d2">`Hello, &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2">!`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> message;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Syntaxe alternative encore plus concise
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// const hello = name =&amp;gt; `Hello, ${name}!`;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(hello(&lt;span style="color:#0086d2">&amp;#34;Richard&amp;#34;&lt;/span>)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Richard!&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="tableaux" >Tableaux
&lt;span>
&lt;a href="#tableaux">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Plusieurs syntaxes existent pour les parcourir.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> movies = [&lt;span style="color:#0086d2">&amp;#34;The Wolf of Wall Street&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;Zootopia&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;Babysitting&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(movies.length); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// 3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (&lt;span style="color:#fb660a;font-weight:bold">let&lt;/span> i = &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>; i &amp;lt; movies.length; i++) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use movies[i] to access each array element one by one
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>movies.forEach((movie) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use movie to access each array element one by one
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>});
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">for&lt;/span> (&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> movie &lt;span style="color:#fb660a;font-weight:bold">of&lt;/span> movies) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Use movie to access each array element one by one
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="objets" >Objets
&lt;span>
&lt;a href="#objets">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>JavaScript permet de créer des objets sans classe!&lt;/li>
&lt;li>Un &lt;strong>objet litéral&lt;/strong> JavaScript est défini grâce à des accolades &lt;code>{...}&lt;/code>.&lt;/li>
&lt;li>Il regroupe un ensemble de &lt;strong>propriétés&lt;/strong> (paires nom/valeur).&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Création d&amp;#39;un objet litéral
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> pen = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: &lt;span style="color:#0086d2">&amp;#34;ballpoint&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color: &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> brand: &lt;span style="color:#0086d2">&amp;#34;Bic&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Modifcation de la valeur d&amp;#39;une propriété
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>pen.color = &lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(pen.type); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;ballpoint&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(pen.color); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;red&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(pen.brand); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bic&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="création-dobjets-à-partir-de-variables" >Création d&amp;rsquo;objets à partir de variables
&lt;span>
&lt;a href="#cr%c3%a9ation-dobjets-%c3%a0-partir-de-variables">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> firstName = &lt;span style="color:#0086d2">&amp;#34;Baptiste&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> lastName = &lt;span style="color:#0086d2">&amp;#34;Pesquet&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> twitterHandle = &lt;span style="color:#0086d2">&amp;#34;@bpesquet&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> teacher = { firstName, lastName, twitterHandle };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(teacher.firstName); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Baptiste&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(teacher.lastName); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Pesquet&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(teacher.twitterHandle); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;@bpesquet&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="déstructuration-dobjets" >Déstructuration d&amp;rsquo;objets
&lt;span>
&lt;a href="#d%c3%a9structuration-dobjets">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> pen = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type: &lt;span style="color:#0086d2">&amp;#34;ballpoint&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> color: &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> brand: &lt;span style="color:#0086d2">&amp;#34;Bic&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Accès à 2 des propriétés de l&amp;#39;objet
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> { color, brand } = pen;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(color); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;blue&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(brand); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Bic&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="déstructuration-de-tableaux" >Déstructuration de tableaux
&lt;span>
&lt;a href="#d%c3%a9structuration-de-tableaux">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> primaryColors = [&lt;span style="color:#0086d2">&amp;#34;red&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;green&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;blue&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [red, green, blue] = primaryColors;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(red); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;red&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(green); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;red&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(blue); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;blue&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="opérateur-de-décomposition-_spread_" >Opérateur de décomposition (&amp;quot;&lt;em>spread&lt;/em>&amp;quot;)
&lt;span>
&lt;a href="#op%c3%a9rateur-de-d%c3%a9composition-_spread_">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Permet de développer une valeur itérable (chaîne, tableau&amp;hellip;).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> chaine = &lt;span style="color:#0086d2">&amp;#34;foo bar&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(chaine); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;foo bar&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log([...chaine]); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// [&amp;#34;f&amp;#34;, &amp;#34;o&amp;#34;, &amp;#34;o&amp;#34;, &amp;#34; &amp;#34;, &amp;#34;b&amp;#34;, &amp;#34;a&amp;#34;, &amp;#34;r&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> numbers = [&lt;span style="color:#0086d2">&amp;#34;one&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;two&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;three&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;four&amp;#34;&lt;/span>];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> [one, two, ...rest] = numbers;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(one); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;one&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(two); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;two&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(rest); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// [&amp;#34;three&amp;#34;, &amp;#34;four&amp;#34;]
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="notion-de-méthode" >Notion de méthode
&lt;span>
&lt;a href="#notion-de-m%c3%a9thode">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>La valeur d&amp;rsquo;une propriété peut être une donnée ou une fonction. Dans le second cas, la propriété est une &lt;strong>méthode&lt;/strong>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> aurora = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: &lt;span style="color:#0086d2">&amp;#34;Aurora&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> health: &lt;span style="color:#0086f7;font-weight:bold">150&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> strength: &lt;span style="color:#0086f7;font-weight:bold">25&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Renvoie la description du personnage
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> describe() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">`&lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> has &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.health&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> health points
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> and &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.strength&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> as strength`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="classes" >Classes
&lt;span>
&lt;a href="#classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Character {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> constructor(name, health, strength) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.name = name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.health = health;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.strength = strength;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> describe() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">`&lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.name&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> has &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.health&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> health points
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0086d2"> and &lt;/span>&lt;span style="color:#0086d2">${&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.strength&lt;span style="color:#0086d2">}&lt;/span>&lt;span style="color:#0086d2"> as strength`&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> aurora = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Character(&lt;span style="color:#0086d2">&amp;#34;Aurora&amp;#34;&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">150&lt;/span>, &lt;span style="color:#0086f7;font-weight:bold">25&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(aurora.describe());
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="modules-et-imports" >Modules et imports
&lt;span>
&lt;a href="#modules-et-imports">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>JavaScript supporte la notion de &lt;strong>module&lt;/strong> pour factoriser des éléments réutilisables.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Importe l&amp;#39;élément exporté par défaut par le module
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Importe d&amp;#39;autres éléments exportés grâce à leur nom
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> { View, Text, Image } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Importe à la fois l&amp;#39;élément par défaut et d&amp;#39;autres éléments
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">import&lt;/span> React, { View, Text, Image } from &lt;span style="color:#0086d2">&amp;#34;react-native&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="programmation-asynchrone" >Programmation asynchrone
&lt;span>
&lt;a href="#programmation-asynchrone">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>JavaScript supporte la programmation asynchrone basée sur des &lt;strong>promesses&lt;/strong> (&lt;em>promises&lt;/em>). Une promesse représente une opération dont le résultat n&amp;rsquo;est pas encore disponible.&lt;/p>
&lt;p>La programmation asynchrone évite de bloquer le &lt;em>thread&lt;/em> courant en cas d&amp;rsquo;opération longue ou incertaine, comme par exemple un appel réseau.&lt;/p>
&lt;hr>
&lt;h3 id="fonctionnement-dune-promesse" >Fonctionnement d&amp;rsquo;une promesse
&lt;span>
&lt;a href="#fonctionnement-dune-promesse">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://javascript.info/promise-basics">&lt;img src="images/promise.png" alt="Promise">&lt;/a>&lt;/p>
&lt;p>Le mot-clé &lt;code>then()&lt;/code> permet de définir le traitement de la promesse sous la forme d&amp;rsquo;une fonction.&lt;/p>
&lt;hr>
&lt;h3 id="exemple-dutilisation-dune-promessehttpscodepeniobpesquetpenvyepwjreditors0012" >&lt;a href="https://codepen.io/bpesquet/pen/vYePWjr?editors=0012">Exemple d&amp;rsquo;utilisation d&amp;rsquo;une promesse&lt;/a>
&lt;span>
&lt;a href="#exemple-dutilisation-dune-promessehttpscodepeniobpesquetpenvyepwjreditors0012">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> resolveAfter2Seconds() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Promise((resolve) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Wait for 2 seconds before resolving promise
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> setTimeout(() =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resolve(&lt;span style="color:#0086d2">&amp;#34;Success!&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }, &lt;span style="color:#0086f7;font-weight:bold">2000&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Doesn&amp;#39;t work: result is not yet available!
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>console.log(resolveAfter2Seconds());
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Wait for the result to be available, then output it
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>resolveAfter2Seconds().then((result) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(result); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Success!&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="async-et-await" >async et await
&lt;span>
&lt;a href="#async-et-await">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Le mot-clé &lt;code>await&lt;/code> interrompt l&amp;rsquo;exécution (sans bloquer le &lt;em>thread&lt;/em> courant) jusqu&amp;rsquo;à ce que le résultat d&amp;rsquo;une promesse soit disponible. Les fonctions utilisant &lt;code>await&lt;/code> doivent être déclarées avec le mot-clé &lt;code>async&lt;/code>.&lt;/p>
&lt;p>&lt;code>async&lt;/code> et &lt;code>await&lt;/code> constituent une syntaxe alternative pour les appels asynchrones en JavaScript.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Wait for the result to be available, then output it
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">async&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> asyncCall() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> result = &lt;span style="color:#fb660a;font-weight:bold">await&lt;/span> resolveAfter2Seconds();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.log(result); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Success!&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>asyncCall();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="plus-de-détails-sur-javascript" >Plus de détails sur JavaScript
&lt;span>
&lt;a href="#plus-de-d%c3%a9tails-sur-javascript">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://developer.mozilla.org/fr/docs/Web/JavaScript">Mozilla Developer Network&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://thejsway.net">The JavaScript Way&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/getify/You-Dont-Know-JS">You Don&amp;rsquo;t Know JS Yet&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="environnement-de-travail" >Environnement de travail
&lt;span>
&lt;a href="#environnement-de-travail">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;p>&lt;img src="images/node-logo.png" alt="Node logo">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Plate-forme JavaScript basée sur le moteur d&amp;rsquo;exécution V8 de Chrome.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Permet de créer des applications JS hors du navigateur (serveur, mobile, etc).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Supporte un riche écosystème de librairies en tout genre installables sous forme de &lt;strong>packages&lt;/strong>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="gestion-des-dépendances" >Gestion des dépendances
&lt;span>
&lt;a href="#gestion-des-d%c3%a9pendances">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Le standard historique est &lt;a href="https://www.npmjs.com/">npm&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npm init &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Create a minimal package.json file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Shorter version: npm i {package name}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install {package name} &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install {package name} locally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install -g {package name} &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install {package name} globally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install all packages listed in package.json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm update &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Update local packages to latest version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm update -g &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Update global packages to latest version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm list &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># List locally installed packages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm list -g &lt;span style="color:#080;background-color:#0f140f;font-style:italic"># List globally installed packages&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Execute a command from a package&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npx {command} {command-arg}...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Autre possibilité : &lt;a href="https://yarnpkg.com/lang/en/">yarn&lt;/a> (plus récent).&lt;/p>
&lt;hr>
&lt;h3 id="le-fichier-packagejson" >Le fichier package.json
&lt;span>
&lt;a href="#le-fichier-packagejson">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Associé à un fichier verrou &lt;code>package-lock.json&lt;/code>.&lt;/li>
&lt;li>Utilisé par &lt;strong>npm/yarn&lt;/strong> pour télécharger et installer les dépendances dans le sous-répertoire &lt;code>node_modules/&lt;/code> du projet.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;helloreactnative&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;1.0.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;main&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;node_modules/expo/AppEntry.js&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;scripts&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;start&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;android&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --android&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ios&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --ios&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;web&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;expo start --web&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;dependencies&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~47.0.9&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;expo-status-bar&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;~1.4.2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;18.1.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;react-native&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;0.70.5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;devDependencies&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;@babel/core&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;^7.12.9&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;private&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="versionnage-des-dépendances" >Versionnage des dépendances
&lt;span>
&lt;a href="#versionnage-des-d%c3%a9pendances">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Versionnage sémantique &lt;strong>X.Y.Z&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>X = version majeure (changements potentiellement non rétrocompatibles).&lt;/li>
&lt;li>Y = version mineure.&lt;/li>
&lt;li>Z = patch.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>^1.1.1&lt;/strong> équivaut à $\geq$ 1.1.1 et $&amp;lt;$ 2.0.0&lt;/p>
&lt;p>&lt;strong>~1.1.1&lt;/strong> équivaut à $\geq$ 1.1.1 et $&amp;lt;$ 1.2.0&lt;/p>
&lt;p>&lt;strong>1.1.1&lt;/strong> cible une version exacte.&lt;/p>
&lt;hr>
&lt;h3 id="formatage-automatique-du-code" >Formatage automatique du code
&lt;span>
&lt;a href="#formatage-automatique-du-code">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://prettier.io/">Prettier&lt;/a> est un outil extrêmement utile.&lt;/p>
&lt;p>&lt;a href="https://prettier.io/">&lt;img src="images/prettier-logo-light.png" alt="Prettier logo">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="analyse-du-code" >Analyse du code
&lt;span>
&lt;a href="#analyse-du-code">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://eslint.org/">ESLint&lt;/a> est l&amp;rsquo;outil le plus utilisé. Sa configuration se fait via un fichier &lt;code>.eslintrc.json&lt;/code> stocké à la racine du projet.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;root&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;node&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;es2016&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;browser&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;rules&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;no-console&amp;#34;&lt;/span>: &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;eqeqeq&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;warn&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;no-cond-assign&amp;#34;&lt;/span>: &lt;span style="color:#0086f7;font-weight:bold">0&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;no-unused-vars&amp;#34;&lt;/span>: &lt;span style="color:#0086f7;font-weight:bold">1&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;no-extra-semi&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;warn&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;semi&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;warn&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;extends&amp;#34;&lt;/span>: &lt;span style="color:#0086d2">&amp;#34;eslint:recommended&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;parserOptions&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;ecmaFeatures&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">&amp;#34;experimentalObjectRestSpread&amp;#34;&lt;/span>: &lt;span style="color:#fb660a;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="transpilation-du-code" >Transpilation du code
&lt;span>
&lt;a href="#transpilation-du-code">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;a href="https://babeljs.io/">Babel&lt;/a> transforme le code JavaScript ES2015+ en code ES5 compatible avec tous les environnements d&amp;rsquo;exécution JS.&lt;/li>
&lt;li>Il permet d&amp;rsquo;utiliser sereinement les dernières évolutions du langage.&lt;/li>
&lt;li>Il est utilisé en arrière-plan par de nombreux outils de l&amp;rsquo;écosystème JS.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://babeljs.io/">&lt;img src="images/Babel-Javascript-compiler.png" alt="Babel logo">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="typescript" >TypeScript
&lt;span>
&lt;a href="#typescript">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="des-types-pour-javascript" >Des types pour JavaScript
&lt;span>
&lt;a href="#des-types-pour-javascript">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://www.typescriptlang.org/">TypeScript&lt;/a> est un sur-ensemble syntaxique de JavaScript qui permet un typage statique optionnel du code.&lt;/p>
&lt;p>Créé à l&amp;rsquo;origine par Microsoft, il est libre et open source.&lt;/p>
&lt;p>&lt;img src="images/typescript.png" alt="TypeScript logo">&lt;/p>
&lt;hr>
&lt;h3 id="installation-et-utilisation" >Installation et utilisation
&lt;span>
&lt;a href="#installation-et-utilisation">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>TS est supporté par la plupart des éditeurs de code.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Install TypeScript globally&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm i -g typescript
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># The TS compiler produces a pure JS version of the TS file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tsc my_typescript_file.ts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="annotations-de-type" >Annotations de type
&lt;span>
&lt;a href="#annotations-de-type">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Elles permettent de préciser les &lt;em>contrats&lt;/em> des fonctions ou des méthodes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// This function is meant to receive an input of type string
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> hello(person: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Hello, &amp;#34;&lt;/span> + person;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> user = &lt;span style="color:#0086d2">&amp;#34;Jane Doe&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Uncomment to see TS error checking in action
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">//const user = [0, 1, 2];
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(hello(user)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Jane Doe&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="interfaces" >Interfaces
&lt;span>
&lt;a href="#interfaces">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Elles permettent de définir des structures de données complexes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Describes objects that have a firstName and lastName field
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">interface&lt;/span> Person {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> firstName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lastName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">function&lt;/span> hello(person: &lt;span style="color:#cdcaa9;font-weight:bold">Person&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">return&lt;/span> &lt;span style="color:#0086d2">&amp;#34;Hello, &amp;#34;&lt;/span> + person.firstName + &lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span> + person.lastName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ... (see next slides)
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="duck-typing" >Duck typing
&lt;span>
&lt;a href="#duck-typing">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;blockquote>
&lt;p>&amp;ldquo;If it walks like a duck and quacks like a duck, then it must be a duck.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>TS se base sur la structure concrète des objets, et non sur l&amp;rsquo;implémentation explicite d&amp;rsquo;une interface.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// This object is structurally compatible with the Person interface
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> user = { firstName: &lt;span style="color:#0086d2">&amp;#34;Jane&amp;#34;&lt;/span>, lastName: &lt;span style="color:#0086d2">&amp;#34;Doe&amp;#34;&lt;/span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(hello(user)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Jane Doe&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="définition-de-classes" >Définition de classes
&lt;span>
&lt;a href="#d%c3%a9finition-de-classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>TS supporte les définitions de classes apportées par les versions ES2015+ de JS.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> Student {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fullName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// The public argument implicitly creates properties
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">constructor&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> firstName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> middleInitial: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> lastName: &lt;span style="color:#cdcaa9;font-weight:bold">string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">this&lt;/span>.fullName = firstName + &lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span> + middleInitial + &lt;span style="color:#0086d2">&amp;#34; &amp;#34;&lt;/span> + lastName;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="utilisation-de-classes" >Utilisation de classes
&lt;span>
&lt;a href="#utilisation-de-classes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Classes et interfaces TS sont compatibles. Le développeur peut ainsi choisir le bon niveau d&amp;rsquo;abstraction.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">const&lt;/span> user = &lt;span style="color:#fb660a;font-weight:bold">new&lt;/span> Student(&lt;span style="color:#0086d2">&amp;#34;Jane&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;M.&amp;#34;&lt;/span>, &lt;span style="color:#0086d2">&amp;#34;Doe&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>console.log(hello(user)); &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// &amp;#34;Hello, Jane Doe&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Deconstructing AI</title><link>https://www.bpesquet.fr/slides/deconstructing-ai/</link><pubDate>Mon, 09 Dec 2019 10:47:12 +0100</pubDate><guid>https://www.bpesquet.fr/slides/deconstructing-ai/</guid><description>&lt;h2 id="table-of-contents" >Table of contents
&lt;span>
&lt;a href="#table-of-contents">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>What Is AI, Actually?&lt;/li>
&lt;li>How Do Machines Learn?&lt;/li>
&lt;li>Should We Be Scared Of AI?&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="what-is-ai-actually" >What Is AI, Actually?
&lt;span>
&lt;a href="#what-is-ai-actually">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="the-original-ambition-of-ai" >The original ambition of AI
&lt;span>
&lt;a href="#the-original-ambition-of-ai">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;blockquote>
&lt;p>&amp;ldquo;AI is the science and engineering of making intelligent machines.&amp;rdquo; (&lt;a href="https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)">John McCarthy&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&amp;ldquo;Every aspect of learning or any other feature of intelligence can in principle be so precisely described that a machine can be made to simulate it.&amp;rdquo; (&lt;a href="https://en.wikipedia.org/wiki/Dartmouth_workshop">Dartmouth Workshop&lt;/a>, 1956)&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&amp;ldquo;AI is the science of making machines do things that would require intelligence if done by men.&amp;rdquo; (&lt;a href="https://en.wikipedia.org/wiki/Marvin_Minsky">Marvin Minsky&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="a-technical-definition-of-ai" >A technical definition of AI
&lt;span>
&lt;a href="#a-technical-definition-of-ai">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;blockquote>
&lt;p>&amp;ldquo;AI refers to systems that &lt;strong>display&lt;/strong> intelligent behavior by analysing their &lt;strong>environment&lt;/strong> and taking &lt;strong>actions&lt;/strong> - with some degree of &lt;strong>autonomy&lt;/strong> - to achieve specific &lt;strong>goals&lt;/strong>.&amp;rdquo; (&lt;a href="https://ec.europa.eu/newsroom/dae/document.cfm?doc_id=51625">EC, 2018&lt;/a>)&lt;/p>
&lt;/blockquote>
&lt;p>AI systems can be either:&lt;/p>
&lt;ul>
&lt;li>Purely &lt;strong>software&lt;/strong>-based (e.g. voice assistants, search engines, face recognition systems).&lt;/li>
&lt;li>Embedded in &lt;strong>hardware&lt;/strong> devices (e.g. robots, autonomous cars, drones).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="main-areas-of-research" >Main areas of research
&lt;span>
&lt;a href="#main-areas-of-research">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Problem solving&lt;/strong> (e.g. search algorithms, constraint solving).&lt;/li>
&lt;li>&lt;strong>Reasoning&lt;/strong> and &lt;strong>decision making&lt;/strong> (e.g. logic, knowledge representation).&lt;/li>
&lt;li>&lt;strong>Machine Learning&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Real-world interactions&lt;/strong> (e.g. computer vision, natural language understanding, robotics).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="ai-is-a-moving-target" >AI is a moving target
&lt;span>
&lt;a href="#ai-is-a-moving-target">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>As soon as AI successfully solves a problem, the problem is no longer considered a part of AI.&lt;/p>
&lt;blockquote>
&lt;p>&amp;ldquo;&lt;a href="https://en.wikipedia.org/wiki/AI_effect">AI is whatever hasn&amp;rsquo;t been done yet&lt;/a>.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h3 id="the-tumultuous-history-of-ai" >The tumultuous history of AI
&lt;span>
&lt;a href="#the-tumultuous-history-of-ai">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://www.slideshare.net/dlavenda/ai-and-productivity">&lt;img src="images/ai_timeline.png" alt="The AI timeline">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="ai-is-a-highly-interdisciplinary-field" >AI is a highly interdisciplinary field
&lt;span>
&lt;a href="#ai-is-a-highly-interdisciplinary-field">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/ai_fields.png" alt="AI fields">&lt;/p>
&lt;hr>
&lt;h3 id="ai-is-a-social-science" >AI is a social science
&lt;span>
&lt;a href="#ai-is-a-social-science">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>AI has many social and societal implications:&lt;/p>
&lt;ul>
&lt;li>Job market transformation.&lt;/li>
&lt;li>Human/machine interactions.&lt;/li>
&lt;li>Trust and acceptability.&lt;/li>
&lt;li>Legal aspects and regulation.&lt;/li>
&lt;li>Fairness.&lt;/li>
&lt;li>Ethical use.&lt;/li>
&lt;li>Personal data.&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="ai-comes-in-different-flavours" >AI comes in different flavours
&lt;span>
&lt;a href="#ai-comes-in-different-flavours">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Substitutive intelligence&lt;/strong>: replacement of men by machines.&lt;/li>
&lt;li>&lt;strong>Augmented intelligence&lt;/strong>: human-centered AI for performance augmentation &amp;amp; autonomy enhancement.&lt;/li>
&lt;li>&lt;strong>Hybrid intelligence&lt;/strong>: human-machine collaboration on complex tasks.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="a-broader-definition-of-ai" >A broader definition of AI
&lt;span>
&lt;a href="#a-broader-definition-of-ai">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;blockquote>
&lt;p>&amp;ldquo;AI is an &lt;strong>interdisciplinary&lt;/strong> field aiming at &lt;strong>understanding&lt;/strong> and &lt;strong>imitating&lt;/strong> the mechanisms of &lt;strong>cognition&lt;/strong> and &lt;strong>reasoning&lt;/strong>, in order to &lt;strong>assist&lt;/strong> or &lt;strong>substitute&lt;/strong> humans in their activities.&amp;rdquo; (&lt;a href="https://fr.wikipedia.org/wiki/Commission_d%27enrichissement_de_la_langue_fran%C3%A7aise">Commission d&amp;rsquo;enrichissement de la langue française&lt;/a>, 2018)&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="how-do-machines-learn" >How Do Machines Learn?
&lt;span>
&lt;a href="#how-do-machines-learn">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h3 id="machine-learning-in-a-nutshell" >Machine Learning in a nutshell
&lt;span>
&lt;a href="#machine-learning-in-a-nutshell">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Set of techniques for giving machines the ability to find &lt;strong>patterns&lt;/strong> and extract &lt;strong>rules&lt;/strong> from data, in order to:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Identify&lt;/strong> or &lt;strong>classify&lt;/strong> elements.&lt;/li>
&lt;li>Detect &lt;strong>tendencies&lt;/strong>.&lt;/li>
&lt;li>Make &lt;strong>predictions&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>As more data is fed into the system, results get better: performance improves with experience.&lt;/p>
&lt;p>a.k.a. &lt;strong>Statistical Learning&lt;/strong>.&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/ai_ml_dl.png" alt="AI/ML/DL Venn diagram">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/machine_learning_tree.png" alt="ML category tree">&lt;/p>
&lt;hr>
&lt;h3 id="a-new-paradigm" >A new paradigm
&lt;span>
&lt;a href="#a-new-paradigm">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/programming_paradigm.png" alt="Programming paradigm">&lt;/p>
&lt;p>&lt;img src="images/training_paradigm.png" alt="Training paradigm">&lt;/p>
&lt;hr>
&lt;h3 id="the-machine-learning-workflow" >The Machine Learning workflow
&lt;span>
&lt;a href="#the-machine-learning-workflow">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Frame&lt;/strong> the problem.&lt;/li>
&lt;li>Collect, analyze and prepare &lt;strong>data&lt;/strong>.&lt;/li>
&lt;li>Select and train several &lt;strong>models&lt;/strong> on data.&lt;/li>
&lt;li>&lt;strong>Tune&lt;/strong> the most promising model.&lt;/li>
&lt;li>&lt;strong>Deploy&lt;/strong> the model to production.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="ml-is-not-a-silver-bullet" >ML is not a silver bullet!
&lt;span>
&lt;a href="#ml-is-not-a-silver-bullet">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Some use cases are a better fit for ML than others:
&lt;ul>
&lt;li>Difficulty to express the actions as rules.&lt;/li>
&lt;li>Data too complex for traditional analytical methods.&lt;/li>
&lt;li>Performance &amp;gt; interpretability.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Data quality is paramount.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="algorithm-1-k-nearest-neighbors" >Algorithm #1: K-Nearest Neighbors
&lt;span>
&lt;a href="#algorithm-1-k-nearest-neighbors">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Prediction is based on the &lt;code>k&lt;/code> nearest neighbors of a data sample.&lt;/p>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm">&lt;img src="images/knn.png" alt="K-NN">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="algorithm-2-decision-trees" >Algorithm #2: Decision Trees
&lt;span>
&lt;a href="#algorithm-2-decision-trees">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>Build a tree-like structure based on a series of discovered questions on the data.&lt;/p>
&lt;p>&lt;img src="images/dt_iris.png" alt="Decision Tree for Iris dataset">&lt;/p>
&lt;hr>
&lt;h3 id="algorithm-3-neural-networks" >Algorithm #3: Neural Networks
&lt;span>
&lt;a href="#algorithm-3-neural-networks">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Layers of loosely neuron-inpired computation units.&lt;/li>
&lt;li>Can approximate any continuous function.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/neuron_output.png" alt="Neuron output">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/neural_net.gif" alt="Dog or Cat?">&lt;/p>
&lt;hr>
&lt;h3 id="training-a-network" >Training a network
&lt;span>
&lt;a href="#training-a-network">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/training_inference1.png" alt="Training and inference">&lt;/p>
&lt;hr>
&lt;h3 id="the-deep-learning-tsunami" >The Deep Learning tsunami
&lt;span>
&lt;a href="#the-deep-learning-tsunami">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Multilayered neural networks trained on (generally) vast amounts of data.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://papers.nips.cc/paper/4824-imagenet-classification-with-deep-convolutional-neural-networks.pdf">&lt;img src="images/alexnet.png" alt="AlexNet'12 (simplified)">&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Since 2010, outperformed previous state-of-the-art techniques in many fields (language translation, image and scene recognition&amp;hellip;).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;img src="images/big_data_universe.png" alt="Big data universe">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/infographic2-intel-past-present.gif" alt="Computer power sheet">&lt;/p>
&lt;hr>
&lt;h3 id="from-labs-to-everyday-life" >From labs to everyday life
&lt;span>
&lt;a href="#from-labs-to-everyday-life">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="http://yann.lecun.com/exdb/lenet/">&lt;img src="images/lecun_lenet.gif" alt="LeCun - LeNet">&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://twitter.com/mbrennanchina/status/1203687857849716736">&lt;img src="images/china_school_facial_reco.gif" alt="Facial recognition in Chinese elementary school">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="should-we-be-scared-of-ai" >Should We Be Scared Of AI?
&lt;span>
&lt;a href="#should-we-be-scared-of-ai">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;hr>
&lt;h3 id="ai-is-altering-the-job-market" >AI is altering the job market&amp;hellip;
&lt;span>
&lt;a href="#ai-is-altering-the-job-market">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Machines outperform humans in a growing list of cognitive tasks.&lt;/li>
&lt;li>Repetitive tasks are most exposed (even complex ones, like medical diagnosis or financial analysis).&lt;/li>
&lt;li>Entire industries are on the verge of disruption (example: truck-based transportation, first employer in the U.S.).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="-for-better-or-worse" >&amp;hellip; For better or worse
&lt;span>
&lt;a href="#-for-better-or-worse">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Net impact of AI on job quantity is unknown.&lt;/li>
&lt;li>Most jobs will be &lt;strong>transformed&lt;/strong>, not replaced by AI.
&lt;ul>
&lt;li>Boring and repetitive stuff will be automated.&lt;/li>
&lt;li>AI will add new insight to help human decision.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Human/machine interactions will multiply.&lt;/li>
&lt;li>Their quality will be a key factor of performance for organizations.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="real-or-fake" >Real or fake?
&lt;span>
&lt;a href="#real-or-fake">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="https://twitter.com/goodfellow_ian/status/1084973596236144640">&lt;img src="images/gan_2014_2018.jpg" alt="GAN progress from 2014 to 2018">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="agi-is-very-far-away" >AGI is very far away
&lt;span>
&lt;a href="#agi-is-very-far-away">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Current AI systems are &lt;strong>weak&lt;/strong>: highly tuned to perform well in one task.&lt;/li>
&lt;li>&lt;strong>Artificial General Intelligence&lt;/strong> a.k.a. &lt;strong>strong AI&lt;/strong>, the ability to perform any task as well as a human, is out of reach.&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://twitter.com/ylecun/status/1204013978210320384">&lt;img src="images/ylecun_tweet_agi.png" alt="Y. LeCun tweet on AGI, Déc. 2019">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="the-intelligence-debate" >The intelligence debate
&lt;span>
&lt;a href="#the-intelligence-debate">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Despite their complexity, ML and DL algorithms can be viewed as merely &lt;a href="https://diginomica.com/ai-curve-fitting-not-intelligence">curve fitting&lt;/a>.&lt;/li>
&lt;li>On the contrary, some AI researchers envision DL as a new form of &lt;strong>algorithmic reasoning&lt;/strong>, somehow mimicking the human brain.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="the-human-brain-is-a-masterpiece" >The human brain is a masterpiece
&lt;span>
&lt;a href="#the-human-brain-is-a-masterpiece">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Approx. 86 billions neurons in 1.4 kg.&lt;/li>
&lt;li>Typical energy consumption: 20 W (!)&lt;/li>
&lt;li>So much of it is still unknown.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/human_brain.jpg" alt="The human brain">&lt;/p>
&lt;hr>
&lt;h3 id="babies-are-outstanding-learners" >Babies are outstanding learners
&lt;span>
&lt;a href="#babies-are-outstanding-learners">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;a href="http://www.lscp.net/persons/dupoux/">&lt;img src="images/conceptual_acquisition_infants.png" alt="Conceptuals acquisitions by babies">&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="any-questions" >Any questions?
&lt;span>
&lt;a href="#any-questions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;p>&lt;img src="images/cutest_baby_ever.png" alt="The cutest baby ever">&lt;/p></description></item><item><title>Unity</title><link>https://www.bpesquet.fr/slides/unity/</link><pubDate>Sat, 25 Aug 2018 16:13:52 +0200</pubDate><guid>https://www.bpesquet.fr/slides/unity/</guid><description>&lt;h2 id="sommaire" >Sommaire
&lt;span>
&lt;a href="#sommaire">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Unity en bref&lt;/li>
&lt;li>Concepts-clés&lt;/li>
&lt;li>Versionnage d&amp;rsquo;un projet&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="unity-en-bref" >Unity en bref
&lt;span>
&lt;a href="#unity-en-bref">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;p>&lt;img src="images/Unity_Technologies_Logo.svg.png" alt="Logo Unity">&lt;/p>
&lt;ul>
&lt;li>Moteur de jeu développé par &lt;a href="https://en.wikipedia.org/wiki/Unity_Technologies">Unity Technologies&lt;/a> depuis 2004.&lt;/li>
&lt;li>Multiplateformes : PC, Mac, consoles, smartphones, web.&lt;/li>
&lt;li>&lt;a href="https://store.unity.com/fr/products/unity-personal">Licence personnelle&lt;/a> gratuite.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="made-with-unity" >Made with Unity
&lt;span>
&lt;a href="#made-with-unity">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/ctNF6QlLBWo" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;hr>
&lt;p>&lt;img src="images/Editor-Breakdown.jpg" alt="Unity editor 1">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/unity-editor.png" alt="Unity editor 2">&lt;/p>
&lt;hr>
&lt;p>&lt;img src="images/keep-calm-it-is-demo-time.png" alt="Demo time">&lt;/p>
&lt;hr>
&lt;h2 id="concepts-clés" >Concepts-clés
&lt;span>
&lt;a href="#concepts-cl%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h2 id="project" >Project
&lt;span>
&lt;a href="#project">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Rassemble tous les éléments constituant le jeu.&lt;/li>
&lt;li>Peut être de type 2D ou 3D.&lt;/li>
&lt;li>Correspond physiquement à un répertoire stocké localement ou dans le &lt;em>cloud&lt;/em>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/AssetWorkflowFolderAndProjectWindow.png" alt="Fenêtre Project">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="asset" >Asset
&lt;span>
&lt;a href="#asset">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Ressource utilisable dans un projet.&lt;/li>
&lt;li>Nombreux types possibles : image, modèle 3D, texture, fichier audio, script, etc.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/AssetWorkflowImportingFiles.png" alt="Import d&amp;rsquo;un Asset">&lt;/p>
&lt;hr>
&lt;h2 id="packages" >Packages
&lt;span>
&lt;a href="#packages">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Plusieurs Assets peuvent être regroupés dans un &lt;strong>package&lt;/strong>.&lt;/li>
&lt;li>Unity est livré avec une collections d&amp;rsquo;&lt;strong>Assets standards&lt;/strong> : formes de base, gestion de la caméra, des entrées utilisateur, etc.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="asset-store" >Asset Store
&lt;span>
&lt;a href="#asset-store">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Magasin en ligne proposant de nombreux Assets gratuits ou payants.&lt;/li>
&lt;li>Permet d&amp;rsquo;importer des packages dans un projet.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/AssetStore-download.png" alt="Asset Store">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="scene" >Scene
&lt;span>
&lt;a href="#scene">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Correspond à une partie du jeu (un niveau).&lt;/li>
&lt;li>Sauvegardées parmi les Assets.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/NewEmptyScene.png" alt="Nouvelle scène">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="gameobject" >GameObject
&lt;span>
&lt;a href="#gameobject">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Objet qui représente un élément d&amp;rsquo;une scène.&lt;/li>
&lt;li>Constitué d&amp;rsquo;un ensemble de &lt;strong>composants&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/GameObjectsExamples.png" alt="Exemples de GameObjects">&lt;/p>
&lt;hr>
&lt;h3 id="hiérarchie-des-gameobjects" >Hiérarchie des GameObjects
&lt;span>
&lt;a href="#hi%c3%a9rarchie-des-gameobjects">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h3>&lt;ul>
&lt;li>Création de hiérarchies parent/enfants à plusieurs niveaux en regroupant des GameObjects.&lt;/li>
&lt;li>Permet de refléter des relations de &lt;strong>dépendance&lt;/strong> ou de &lt;strong>composition&lt;/strong> entre objets.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/HierarchyParenting1.png" alt="Hiérarchie des GO">&lt;/p>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="composant" >Composant
&lt;span>
&lt;a href="#composant">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Ajoute un comportement à un GameObject.&lt;/p>
&lt;p>&lt;img src="images/RigidBodyGO.png" alt="Exemples de composants">&lt;/p>
&lt;hr>
&lt;h2 id="le-composant-transform" >Le composant Transform
&lt;span>
&lt;a href="#le-composant-transform">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Définit la position, la rotation et l&amp;rsquo;échelle d&amp;rsquo;un GameObject.&lt;/p>
&lt;p>&lt;img src="images/TransformExample2.png" alt="Transform 1">&lt;/p>
&lt;hr>
&lt;h2 id="transform-et-hiérarchie" >Transform et hiérarchie
&lt;span>
&lt;a href="#transform-et-hi%c3%a9rarchie">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Position, rotation et échelle d&amp;rsquo;un GameObject sont relatives à son parent dans la hiérarchie.&lt;/li>
&lt;li>Les valeurs de Transform sont relatives à celles du GameObject parent (&lt;strong>coordonnées locales&lt;/strong>) ou absolues en l&amp;rsquo;absence de parent (&lt;strong>coordonnées globales&lt;/strong>).&lt;/li>
&lt;/ul>
&lt;/section>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="mesh" >Mesh
&lt;span>
&lt;a href="#mesh">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Maillage géométrique d&amp;rsquo;une forme 3D.&lt;/p>
&lt;p>&lt;img src="images/mesh.png" alt="Mesh">&lt;/p>
&lt;hr>
&lt;h2 id="mesh-renderer" >Mesh renderer
&lt;span>
&lt;a href="#mesh-renderer">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Composant assurant le rendu d&amp;rsquo;un Mesh à la position définie par le composant Transform du GameObject.&lt;/p>
&lt;p>&lt;img src="images/class-MeshRenderer-0.png" alt="Mesh renderer">&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="rigidbody" >RigidBody
&lt;span>
&lt;a href="#rigidbody">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Composant permettant à un GameObject de réagir selon les lois de la physique :&lt;/p>
&lt;ul>
&lt;li>Gestion de la masse, de la gravité, etc.&lt;/li>
&lt;li>Application de forces.&lt;/li>
&lt;li>Réaction aux collisions.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/Inspector-Rigidbody.png" alt="RigidBody">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="collider" >Collider
&lt;span>
&lt;a href="#collider">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Composant définissant la forme d&amp;rsquo;un GameObject pour la gestion des collisions :&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Primitive Collider&lt;/strong> : formes géométriques de base (cube, sphère, cylindre, etc).&lt;/li>
&lt;li>&lt;strong>Mesh Collider&lt;/strong> : forme spécifique définie par un Mesh. Plus coûteux en temps de calcul.&lt;/li>
&lt;/ul>
&lt;p>Par défaut, des GameObjects possédant un Collider ne peuvent pas se chevaucher.&lt;/p>
&lt;hr>
&lt;h2 id="rigidbody-collider" >RigidBody Collider
&lt;span>
&lt;a href="#rigidbody-collider">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>GameObject possédant un Collider et un RigidBody.&lt;/p>
&lt;ul>
&lt;li>Soumis aux lois de la physique.&lt;/li>
&lt;li>Déclenche des collisions avec les autres (non-Trigger) Colliders.&lt;/li>
&lt;li>Doit être déplacé en lui appliquand des forces.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="static-collider" >Static Collider
&lt;span>
&lt;a href="#static-collider">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>GameObject possédant un Collider mais pas de RigidBody.&lt;/p>
&lt;ul>
&lt;li>Déclenche des collisions avec les RigidBody Colliders, mais ne bouge pas.&lt;/li>
&lt;li>Ne doit pas être déplacé.&lt;/li>
&lt;li>Destiné aux éléments immobiles de la scène (murs, obstacles, etc).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="kinematic-rigidbody-collider" >Kinematic RigidBody Collider
&lt;span>
&lt;a href="#kinematic-rigidbody-collider">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>GameObject possédant un Collider et un RigidBody défini comme Kinematic.&lt;/p>
&lt;ul>
&lt;li>N&amp;rsquo;est pas soumis aux lois de la physique.&lt;/li>
&lt;li>Déclenche des collisions avec les RigidBody Colliders, mais ne bouge pas.&lt;/li>
&lt;li>Peut être déplacé en modifiant son Transform.&lt;/li>
&lt;li>Destiné aux éléments animés du décor (portes, objets à récupérer, etc).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="trigger-collider" >Trigger Collider
&lt;span>
&lt;a href="#trigger-collider">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>GameObject dont le Collider est défini comme Trigger.&lt;/p>
&lt;p>&lt;img src="images/is-trigger-check-box.jpg" alt="IsTrigger">&lt;/p>
&lt;ul>
&lt;li>Autorise le chevauchement sans déclencher de collision.&lt;/li>
&lt;li>Permet de définir une &lt;strong>zone&lt;/strong> et de réagir lorsque des RigidBody Colliders y pénètrent.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>&lt;a href="https://docs.unity3d.com/Manual/CollidersOverview.html">&lt;img src="images/UnityCollisionMatrix.png" alt="Collision Matrix">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="prefab" >Prefab
&lt;span>
&lt;a href="#prefab">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Type d&amp;rsquo;Asset permettant d&amp;rsquo;instancier des GameObjects à partir d&amp;rsquo;un modèle commun.&lt;/li>
&lt;li>Changements d&amp;rsquo;un Prefab appliqués à toutes ses instances.&lt;/li>
&lt;li>Une instance de Prefab peut aussi être modifiée individuellement.&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="images/PrefabWithOverride.png" alt="Prefab">&lt;/p>
&lt;hr>
&lt;h2 id="light" >Light
&lt;span>
&lt;a href="#light">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Type de GameObject permettant d&amp;rsquo;ajouter une source de lumière à la scène.&lt;/p>
&lt;p>&lt;img src="images/Light-Spot.png" alt="Lights">&lt;/p>
&lt;hr>
&lt;h2 id="camera" >Camera
&lt;span>
&lt;a href="#camera">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>Type de GameObject qui calcule la vue de la scène affichée au joueur.&lt;/p>
&lt;p>&lt;img src="images/CameraPerspectiveAndOrtho.jpg" alt="Différentes caméras">&lt;/p>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="script" >Script
&lt;span>
&lt;a href="#script">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Type d&amp;rsquo;Asset permettant de coder le comportement d&amp;rsquo;un GameObject en langage C# ou UnityScript.&lt;/li>
&lt;li>Doit faire partie des composants du GameObject.&lt;/li>
&lt;li>Peut accéder aux propriétés du GameObject définies par ses autres composants.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="anatomie-dun-script" >Anatomie d&amp;rsquo;un script
&lt;span>
&lt;a href="#anatomie-dun-script">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-csharp" data-lang="csharp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// ... (directives using)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic">// MonoBehaviour : superclasse de tous les scripts Unity&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#fb660a;font-weight:bold">public&lt;/span> &lt;span style="color:#fb660a;font-weight:bold">class&lt;/span> MainPlayer : MonoBehaviour {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Appelée juste avant le rendu de la première image&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Start() { ... }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Appelée à chaque nouvelle image&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// L&amp;#39;intervalle de temps entre deux appels peut varier&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> Update() { ... }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#080;background-color:#0f140f;font-style:italic">// Appelée à intervalles réguliers (0.02s par défaut)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#fb660a;font-weight:bold">void&lt;/span> FixedUpdate() { ... }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="déplacements-scriptés" >Déplacements scriptés
&lt;span>
&lt;a href="#d%c3%a9placements-script%c3%a9s">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>&lt;a href="https://unity3d.com/fr/learn/tutorials/topics/scripting/delta-time">&lt;img src="images/time.deltatime.gif" alt="Time.deltaTtime">&lt;/a>&lt;/p>
&lt;/section>
&lt;hr>
&lt;h2 id="versionnage-dun-projet" >Versionnage d&amp;rsquo;un projet
&lt;span>
&lt;a href="#versionnage-dun-projet">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;hr>
&lt;h2 id="le-problème" >Le problème
&lt;span>
&lt;a href="#le-probl%c3%a8me">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Taille de certains Assets.&lt;/li>
&lt;li>Nombreux fichiers binaires dans un projet : modèles 3D, images, sons, etc.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="les-solutions" >Les solutions
&lt;span>
&lt;a href="#les-solutions">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;ul>
&lt;li>Partage manuel (disque commun, Drive, etc).&lt;/li>
&lt;li>Dépôt Git standard.&lt;/li>
&lt;li>Git LFS.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-shortcode-section>
&lt;h2 id="git-large-file-system" >Git Large File System
&lt;span>
&lt;a href="#git-large-file-system">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>&lt;a href="https://git-lfs.github.com">&lt;img src="images/git-lfs.gif" alt="Git LFS">&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="fichier-gitattributes" >Fichier .gitattributes
&lt;span>
&lt;a href="#fichier-gitattributes">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#fff;background-color:#111;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>* &lt;span style="color:#fb660a">text&lt;/span>=auto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Unity files&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.meta -text -merge=unityamlmerge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.unity -text -merge=unityamlmerge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.asset -text -merge=unityamlmerge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.prefab -text -merge=unityamlmerge
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Image formats&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.psd &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.jpg &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.png &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.gif &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.bmp &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.tga &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.tiff &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.iff &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.pict &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.dds &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.xcf &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Audio formats&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.mp3 &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.ogg &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.wav &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.aiff &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.aif &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.mod &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.it &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.s3m &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.xm &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Video formats&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.mov &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.avi &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.asf &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.mpg &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.mpeg &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.mp4 &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># 3D formats&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.fbx &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.obj &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.max &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.blend &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.dae &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.mb &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.ma &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.3ds &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.dfx &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.c4d &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.lwo &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.lwo2 &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.abc &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.3dm &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Build&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.dll &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.pdb &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.mdb &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#080;background-color:#0f140f;font-style:italic"># Packaging&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.zip &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.7z &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.gz &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.rar &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.tar &lt;span style="color:#fb660a">filter&lt;/span>=lfs &lt;span style="color:#fb660a">diff&lt;/span>=lfs &lt;span style="color:#fb660a">merge&lt;/span>=lfs -text
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://gist.github.com/bpesquet/4e28b431b673addef1774d497b614b33">Source&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="github-for-unity" >GitHub For Unity
&lt;span>
&lt;a href="#github-for-unity">
&lt;svg viewBox="0 0 28 23" height="100%" width="19" xmlns="http://www.w3.org/2000/svg">&lt;path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71" fill="none" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2"/>&lt;/svg>
&lt;/a>
&lt;/span>
&lt;/h2>&lt;p>&lt;a href="https://unity.github.com/">https://unity.github.com/&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Extension qui intègre Git et GitHub dans Unity.&lt;/li>
&lt;li>Authentification GitHub, LFS, etc.&lt;/li>
&lt;li>Version 1.0 : encore instable.&lt;/li>
&lt;/ul>
&lt;/section></description></item></channel></rss>